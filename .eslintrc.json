{
    "root": true,
    "parserOptions": {
        "ecmaFeatures": {
            "modules": true,
            "impliedStrict": true
        },
        "ecmaVersion": 2020,
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "env": {
        "commonjs": true,
        "es2020": true,
        "jquery": true,
        "node": true
    },
    "rules": {},
    "overrides": [
        {
            "files": ["*.ts", "*.tsx"],
            "parser": "@typescript-eslint/parser",
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "prettier",
                "plugin:unicorn/recommended",
                "plugin:prettier/recommended"
            ],
            "plugins": ["@typescript-eslint", "eslint-plugin-tsdoc"],
            "rules": {
                "capitalized-comments": "off",
                "new-cap": "off",
                "no-mixed-operators": "off",
                "object-curly-spacing": ["error", "always"],
                "prettier/prettier": ["error", { "tabWidth": 4, "printWidth": 120, "semi": false }],
                "prefer-destructuring": [
                    "error",
                    {
                        "object": true,
                        "array": false
                    }
                ],
                "prefer-template": "error",
                "no-irregular-whitespace": "off",
                "operator-linebreak": ["error", "after", { "overrides": { "?": "before", ":": "before" } }],
                "quotes": ["error", "double", { "allowTemplateLiterals": true, "avoidEscape": true }],
                "semi": ["error", "never"],
                "unicorn/no-nested-ternary": "off",
                "unicorn/no-useless-undefined": "off",
                "unicorn/prevent-abbreviations": "off",
                "unicorn/prefer-node-protocol": "off",
                "tsdoc/syntax": "warn",
                "@typescript-eslint/ban-ts-comment": "off",
                "@typescript-eslint/class-literal-property-style": "off",
                "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "as" }],
                "@typescript-eslint/no-base-to-string": "off",
                "@typescript-eslint/no-non-null-assertion": "off",
                "@typescript-eslint/no-unsafe-call": "off",
                "@typescript-eslint/no-unsafe-member-access": "off",
                "@typescript-eslint/no-unsafe-return": "off",
                "@typescript-eslint/non-nullable-type-assertion-style": "off",
                "@typescript-eslint/restrict-template-expressions": ["error", { "allowNullish": true }],
                "@typescript-eslint/prefer-readonly-parameter-types": "off",
                "@typescript-eslint/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "none",
                            "requireLast": false
                        },
                        "singleline": {
                            "delimiter": "semi",
                            "requireLast": false
                        }
                    }
                ],
                "@typescript-eslint/ban-ts-ignore": "off"
            }
        },
        {
            "files": ["*.js", "*.[cm]js", "*.jsx"],
            "env": {
                "es2020": true,
                "node": true
            },
            "extends": ["eslint:recommended", "plugin:unicorn/recommended", "plugin:prettier/recommended"],
            "rules": {
                "capitalized-comments": "off",
                "new-cap": "off",
                "no-mixed-operators": "off",
                "object-curly-spacing": ["error", "always"],
                "prettier/prettier": ["error", { "tabWidth": 4, "printWidth": 120, "semi": false }],
                "prefer-destructuring": [
                    "error",
                    {
                        "object": true,
                        "array": false
                    }
                ],
                "prefer-template": "error",
                "operator-linebreak": ["error", "after", { "overrides": { "?": "before", ":": "before" } }],
                "quotes": ["error", "double", { "allowTemplateLiterals": true, "avoidEscape": true }],
                "semi": ["error", "never"],
                "unicorn/prevent-abbreviations": "off"
            }
        }
    ]
}
