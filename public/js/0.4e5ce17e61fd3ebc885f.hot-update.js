webpackHotUpdate(0,{

/***/ 132:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__na_display__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__analytics_js__ = __webpack_require__(341);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_bootstrap_js_dist_modal__ = __webpack_require__(342);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_bootstrap_js_dist_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_bootstrap_js_dist_modal__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_bootstrap_js_dist_tooltip__ = __webpack_require__(343);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_bootstrap_js_dist_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_bootstrap_js_dist_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_bootstrap_js_dist_util__ = __webpack_require__(346);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_bootstrap_js_dist_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_bootstrap_js_dist_util__);\nfunction main(){Object(__WEBPACK_IMPORTED_MODULE_1__analytics_js__[\"a\" /* default */])(),$(\"#modal\").on(\"click\",\".btn, .close\",function(){$(this).addClass(\"modal-result\")}).on(\"hide.bs.modal\",function(){var a=$(this).find(\".modal-result\").attr(\"data-server\");console.log(\"server: \"+a),Object(__WEBPACK_IMPORTED_MODULE_0__na_display__[\"a\" /* default */])(a)}),window.onload=function(){$(\"#modal\").modal(\"show\")}}main();\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9tYWluLmpzPzFjNzkiXSwibmFtZXMiOlsibWFpbiIsIm5hQW5hbHl0aWNzIiwiJCIsIm9uIiwiYWRkQ2xhc3MiLCJmaW5kIiwiYXR0ciIsImNvbnNvbGUiLCJsb2ciLCJuYURpc3BsYXkiLCJ3aW5kb3ciLCJvbmxvYWQiLCJtb2RhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBWUEsUUFBU0EsS0FBVCxFQUFnQixDQUNaLHNFQUFBQyxFQURZLENBRVpDLEVBQUUsUUFBRixFQUNLQyxFQURMLENBQ1EsT0FEUixDQUNpQixjQURqQixDQUNpQyxVQUFXLENBQ3BDRCxFQUFFLElBQUYsRUFBUUUsUUFBUixDQUFpQixjQUFqQixDQUNILENBSEwsRUFJS0QsRUFKTCxDQUlRLGVBSlIsQ0FJeUIsVUFBVyxDQUM1QixHQUFNLEdBQWFELEVBQUUsSUFBRixFQUNkRyxJQURjLENBQ1QsZUFEUyxFQUVkQyxJQUZjLENBRVQsYUFGUyxDQUFuQixDQUdBQyxRQUFRQyxHQUFSLENBQVksWUFBWixDQUo0QixDQUs1QixvRUFBQUMsR0FDSCxDQVZMLENBRlksQ0FhWkMsT0FBT0MsTUFBUCxDQUFnQixVQUFXLENBQ3ZCVCxFQUFFLFFBQUYsRUFBWVUsS0FBWixDQUFrQixNQUFsQixDQUNILENBQ0osQ0FFRFosTSIsImZpbGUiOiIxMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICAgIE1haW5cblxuICAgIGlCIDIwMTdcbiAqL1xuXG5pbXBvcnQgbmFEaXNwbGF5IGZyb20gXCIuL25hLWRpc3BsYXlcIjtcbmltcG9ydCBuYUFuYWx5dGljcyBmcm9tIFwiLi9hbmFseXRpY3MuanNcIjtcbmltcG9ydCBcImJvb3RzdHJhcC9qcy9kaXN0L21vZGFsXCI7XG5pbXBvcnQgXCJib290c3RyYXAvanMvZGlzdC90b29sdGlwXCI7XG5pbXBvcnQgXCJib290c3RyYXAvanMvZGlzdC91dGlsXCI7XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gICAgbmFBbmFseXRpY3MoKTtcbiAgICAkKFwiI21vZGFsXCIpXG4gICAgICAgIC5vbihcImNsaWNrXCIsIFwiLmJ0biwgLmNsb3NlXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcIm1vZGFsLXJlc3VsdFwiKTsgLy8gbWFyayB3aGljaCBidXR0b24gd2FzIGNsaWNrZWRcbiAgICAgICAgfSlcbiAgICAgICAgLm9uKFwiaGlkZS5icy5tb2RhbFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlcnZlck5hbWUgPSAkKHRoaXMpXG4gICAgICAgICAgICAgICAgLmZpbmQoXCIubW9kYWwtcmVzdWx0XCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJkYXRhLXNlcnZlclwiKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2VydmVyOiBcIiArIHNlcnZlck5hbWUpO1xuICAgICAgICAgICAgbmFEaXNwbGF5KHNlcnZlck5hbWUpOyAvLyBpbnZva2UgdGhlIGNhbGxiYWNrIHdpdGggcmVzdWx0XG4gICAgICAgIH0pO1xuICAgIHdpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIiNtb2RhbFwiKS5tb2RhbChcInNob3dcIik7XG4gICAgfTtcbn1cblxubWFpbigpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vanMvbWFpbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///132\n");

/***/ }),

/***/ 133:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {/* harmony export (immutable) */ __webpack_exports__[\"a\"] = naDisplay;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_geo__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_queue__ = __webpack_require__(178);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3_request__ = __webpack_require__(181);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_d3_selection__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_d3_voronoi__ = __webpack_require__(229);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_d3_zoom__ = __webpack_require__(234);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_d3fc_label_layout__ = __webpack_require__(289);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_d3fc_label_layout___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_d3fc_label_layout__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_topojson_client__ = __webpack_require__(334);\nfunction naDisplay(a){function b(){var a,b,c;n=x.geoPath().projection(m),k=document.getElementById(\"na\").offsetWidth-{top:0,right:0,bottom:0,left:0}.left-{top:0,right:0,bottom:0,left:0}.right,k=4000>k?4000:k,a=n.bounds(v),b=a[1][0]-a[0][0],c=a[1][1]-a[0][1],l=k/(b/c)-{top:0,right:0,bottom:0,left:0}.top-{top:0,right:0,bottom:0,left:0}.bottom,m=x.geoEquirectangular().fitExtent([[-b,-c],[k+b,l+c]],v),n=x.geoPath().projection(m)}function c(){o=x.select(\"#na\").append(\"svg\").attr(\"id\",\"na-svg\").attr(\"width\",k).attr(\"height\",l).on(\"click\",e,!0),o.append(\"rect\").attr(\"class\",\"background\").attr(\"width\",k).attr(\"height\",l),q=x.zoom().scaleExtent([0.6,3]).on(\"zoom\",d),o.call(q),p=o.append(\"defs\")}function d(){s.attr(\"transform\",transform),r.attr(\"transform\",transform),t.attr(\"transform\",transform),r.selectAll(\".label text\").style(\"font-size\",function(){return\"naFontSize / transform.k\"}),r.selectAll(\".label circle\").attr(\"r\",10/transform.k)}function e(){__WEBPACK_IMPORTED_MODULE_3_d3_selection__[\"event\"].defaultPrevented&&__WEBPACK_IMPORTED_MODULE_3_d3_selection__[\"event\"].stopPropagation()}function f(){var a=p.append(\"filter\").attr(\"id\",\"border\");a.append(\"feColorMatrix\").attr(\"in\",\"SourceGraphic\").attr(\"type\",\"matrix\").attr(\"values\",\"0 0 0 0 0.302  0 0 0 0 0.263  0 0 0 0 0.216  0 0 0 1 0\").attr(\"result\",\"fmask\"),a.append(\"feGaussianBlur\").attr(\"in\",\"fmask\").attr(\"stdDeviation\",15).attr(\"result\",\"f1blur\"),a.append(\"feColorMatrix\").attr(\"in\",\"SourceGraphic\").attr(\"type\",\"matrix\").attr(\"values\",\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0   0 0 0 1 0\").attr(\"result\",\"f2mask1\"),a.append(\"feMorphology\").attr(\"in\",\"f2mask1\").attr(\"radius\",1).attr(\"operator\",\"erode\").attr(\"result\",\"f2m\"),a.append(\"feGaussianBlur\").attr(\"in\",\"f2m\").attr(\"stdDeviation\",5).attr(\"result\",\"f2blur\"),a.append(\"feColorMatrix\").attr(\"in\",\"f2blur\").attr(\"type\",\"matrix\").attr(\"values\",\"1 0 0 0 0.302 0 1 0 0 0.263 0 0 1 0 0.216 0 0 0 -1 1\").attr(\"result\",\"f2mask2\"),a.append(\"feComposite\").attr(\"operator\",\"in\").attr(\"in\",\"f2mask2\").attr(\"in2\",\"f2mask1\").attr(\"result\",\"f2border\");var b=a.append(\"feMerge\");b.append(\"feMergeNode\").attr(\"in\",\"f1blur\"),b.append(\"feMergeNode\").attr(\"in\",\"SourceGraphic\"),b.append(\"feMergeNode\").attr(\"in\",\"f2border\"),s=o.append(\"g\"),s.append(\"path\").attr(\"class\",\"na-country\").datum(v).attr(\"d\",n).style(\"filter\",\"url(#border)\")}function g(){for(var d=0;d<=12;d++)p.append(\"pattern\").attr(\"id\",\"n\"+d).attr(\"x\",\"0%\").attr(\"y\",\"0%\").attr(\"width\",\"100%\").attr(\"height\",\"100%\").attr(\"viewBox\",\"0 0 50 50\").append(\"image\").attr(\"x\",\"0\").attr(\"y\",\"0\").attr(\"height\",\"50\").attr(\"width\",\"50\").attr(\"xlink:href\",\"icons/n\"+d+\".svg\");var a=y.layoutTextLabel().padding(3).value(function(a){return a.properties.name}),b=y.layoutGreedy(),c=y.layoutLabel(b).size(function(a,b,c){var d=x.select(c[b]).select(\"text\").node().getBBox();return[d.width,d.height]}).position(function(a){return m(a.geometry.coordinates)}).component(a);r=o.append(\"g\").datum(w.features).call(c),r.selectAll(\".label text\").attr(\"dx\",10).attr(\"class\",function(a){var b;return b=a.properties.shallow||a.properties.countyCapital?\"na-port-out\":\"na-port-in\",b}),r.selectAll(\".label rect\").attr(\"class\",\"label-rect\"),r.selectAll(\".label circle\").attr(\"id\",function(a){return\"p\"+a.properties.id}).attr(\"r\",10).attr(\"fill\",function(a){return\"url(#\"+a.properties.nation+\")\"}).on(\"mouseover\",function(a){x.select(this).attr(\"data-toggle\",\"tooltip\").attr(\"title\",function(a){return h(a.properties)}),$(\"#p\"+a.properties.id).tooltip({delay:{show:100,hide:100},html:!0,placement:\"auto\"}).tooltip(\"show\")}).on(\"mouseout\",function(a){$(\"#p\"+a.properties.id).tooltip(\"hide\")})}function h(a){var b;return b=\"<table><tbody<tr><td><i class='flag-icon \"+a.nation+\"'></i></td>\",b+=\"<td class='port-name'>\"+a.name+\"</td></tr></tbody></table>\",b+=\"<p>\"+(a.shallow?\"Shallow\":\"Deep\"),b+=\" water port\",a.countyCapital&&(b+=\", county capital\"),b+=a.nonCapturable?\", not capturable\":\", \"+a.brLimit+\" BR limit\",a.capturer&&(b+=\", owned by \"+a.capturer),b+=\"</p>\",b+=\"<table class='table table-sm'>\",a.produces.length&&(b+=\"<tr><td>Produces</td><td>\"+a.produces.join(\", \")+\"</td></tr>\"),a.drops.length&&(b+=\"<tr><td>Drops</td><td>\"+a.drops.join(\", \")+\"</tr>\"),a.consumes.length&&(b+=\"<tr><td>Consumes</td><td>\"+a.consumes.join(\", \")+\"</tr>\"),b+=\"</table>\",b}function i(){var a=w.features.filter(function(a){return!a.properties.shallow&&!a.properties.countyCapital}).map(function(a){return{coord:[a.geometry.coordinates[0],a.geometry.coordinates[1]],id:a.properties.id}});t=o.append(\"g\").attr(\"class\",\"voronoi\").call(q).selectAll(\".voronoi\").data(a).enter().append(\"g\");var b=k/10,c=x.voronoi().extent([[-1,-1],[k+1,l+1]]),d=c(a.coord.map(m));t.append(\"path\").data(c.polygons(a.coord.map(m))).attr(\"id\",function(a){return\"v\"+a.id}).attr(\"d\",function(a){return a?\"M\"+a.coord.join(\"L\")+\"Z\":null}).attr(\"pointer-events\",\"visibleFill\").on(\"mouseover\",function(){var a=Object(__WEBPACK_IMPORTED_MODULE_3_d3_selection__[\"mouse\"])(this),c=a[0],e=a[1],f=d.find(c,e,b);u=t._groups[0][f.index],u.classList.add(\"highlight-voronoi\")}).on(\"mouseout\",function(){u.classList.remove(\"highlight-voronoi\")})}function j(){w.features.map(function(a){var b=Ports.filter(function(b){return b.Id===a.properties.id});a.properties.nation=\"n\"+b[0].Nation,a.properties.capturer=b[0].Capturer,a.properties.brLimit=b[0].PortBattleBRLimit})}var k,l,m,n,o,p,q,r,s,t,u,v,w,x={geoEquirectangular:__WEBPACK_IMPORTED_MODULE_0_d3_geo__[\"a\" /* geoEquirectangular */],geoPath:__WEBPACK_IMPORTED_MODULE_0_d3_geo__[\"b\" /* geoPath */],json:__WEBPACK_IMPORTED_MODULE_2_d3_request__[\"a\" /* json */],queue:__WEBPACK_IMPORTED_MODULE_1_d3_queue__[\"a\" /* queue */],request:__WEBPACK_IMPORTED_MODULE_2_d3_request__[\"b\" /* request */],select:__WEBPACK_IMPORTED_MODULE_3_d3_selection__[\"select\"],voronoi:__WEBPACK_IMPORTED_MODULE_4_d3_voronoi__[\"a\" /* voronoi */],zoom:__WEBPACK_IMPORTED_MODULE_5_d3_zoom__[\"a\" /* zoom */]},y={layoutTextLabel:__WEBPACK_IMPORTED_MODULE_6_d3fc_label_layout__[\"layoutTextLabel\"],layoutGreedy:__WEBPACK_IMPORTED_MODULE_6_d3fc_label_layout__[\"layoutGreedy\"],layoutLabel:__WEBPACK_IMPORTED_MODULE_6_d3fc_label_layout__[\"layoutLabel\"]},z={feature:__WEBPACK_IMPORTED_MODULE_7_topojson_client__[\"a\" /* feature */]},A=parseInt(window.getComputedStyle(document.getElementById(\"na\")).fontSize);x.queue().defer(x.json,a+\".json\").await(function(a,d,e){if(a)throw a;v=z.feature(d,d.objects.countries),w=z.feature(d,d.objects.ports),b(),c(),j(e),i(),f(),g()})}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///133\n");

/***/ })

})