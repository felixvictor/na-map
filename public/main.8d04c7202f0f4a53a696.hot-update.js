webpackHotUpdate("main",{

/***/ "./js/port-select.js":
/*!***************************!*\
  !*** ./js/port-select.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PortSelect; });\n/* harmony import */ var bootstrap_select_js_bootstrap_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap-select/js/bootstrap-select */ \"../node_modules/bootstrap-select/js/bootstrap-select.js\");\n/* harmony import */ var bootstrap_select_js_bootstrap_select__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bootstrap_select_js_bootstrap_select__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment/moment */ \"../node_modules/moment/moment.js\");\n/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var moment_locale_en_gb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment/locale/en-gb */ \"../node_modules/moment/locale/en-gb.js\");\n/* harmony import */ var moment_locale_en_gb__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment_locale_en_gb__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var tempusdominus_bootstrap_4_build_js_tempusdominus_bootstrap_4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tempusdominus-bootstrap-4/build/js/tempusdominus-bootstrap-4 */ \"../node_modules/tempusdominus-bootstrap-4/build/js/tempusdominus-bootstrap-4.js\");\n/* harmony import */ var tempusdominus_bootstrap_4_build_js_tempusdominus_bootstrap_4__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tempusdominus_bootstrap_4_build_js_tempusdominus_bootstrap_4__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var tempusdominus_core_build_js_tempusdominus_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tempusdominus-core/build/js/tempusdominus-core */ \"../node_modules/tempusdominus-core/build/js/tempusdominus-core.js\");\n/* harmony import */ var tempusdominus_core_build_js_tempusdominus_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(tempusdominus_core_build_js_tempusdominus_core__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ \"./js/common.js\");\n/* harmony import */ var _analytics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./analytics */ \"./js/analytics.js\");\n/*\n\tport-select.js\n*/\n\n\n\n\n\n\n\n\nvar PortSelect =\n/*#__PURE__*/\nfunction () {\n  function PortSelect(map, ports, pbZone) {\n    this._map = map;\n    this._ports = ports;\n    this._pbZone = pbZone;\n    this._dateFormat = \"D MMM\";\n    this._timeFormat = \"HH.00\";\n    this._portNamesId = \"port-names\";\n    this._portNamesSelector = document.getElementById(this._portNamesId);\n    this._portNames$ = $(\"#\" + this._portNamesId);\n    this._buyGoodsId = \"buy-goods\";\n    this._buyGoodsSelector = document.getElementById(this._buyGoodsId);\n    this._buyGoods$ = $(\"#\" + this._portNamesId);\n    this._propNationId = \"prop-nation\";\n    this._propNationSelector = document.getElementById(this._propNationId);\n    this._propNation$ = $(\"#\" + this._propNationId);\n    this._propClanId = \"prop-clan\";\n    this._propClanSelector = document.getElementById(this._propClanId);\n    this._propClan$ = $(\"#\" + this._propClanId);\n    this._propCMId = \"prop-cm\";\n    this._propCMSelector = document.getElementById(this._propCMId);\n    this._propCM$ = $(\"#\" + this._propCMId);\n\n    this._setupSelects();\n\n    this._setupListener();\n  }\n\n  var _proto = PortSelect.prototype;\n\n  _proto._setupSelects = function _setupSelects() {\n    this._setupPortSelect();\n\n    this._setupGoodSelect();\n\n    this._setupNationSelect();\n\n    this._setupClanSelect();\n\n    this._setupCMSelect();\n  };\n\n  _proto._setupListener = function _setupListener() {\n    var _this = this;\n\n    this._portNamesSelector.classList.add(\"selectpicker\");\n\n    this._buyGoodsSelector.classList.add(\"selectpicker\");\n\n    this._propNationSelector.classList.add(\"selectpicker\");\n\n    this._propClanSelector.classList.add(\"selectpicker\");\n\n    this._propCMSelector.classList.add(\"selectpicker\");\n\n    var selectPickerDefaults = {\n      icons: {\n        time: \"far fa-clock\",\n        date: \"far fa-calendar\",\n        up: \"fas fa-arrow-up\",\n        down: \"fas fa-arrow-down\",\n        previous: \"fas fa-chevron-left\",\n        next: \"fas fa-chevron-right\",\n        today: \"far fa-calendar-check\",\n        clear: \"fas fa-trash\",\n        close: \"fas fa-times\"\n      },\n      timeZone: \"UTC\",\n      noneSelectedText: \"\",\n      dropupAuto: false\n    };\n    var selectPickerLiveSearch = JSON.parse(JSON.stringify(selectPickerDefaults));\n    selectPickerLiveSearch.liveSearch = true;\n    selectPickerLiveSearch.liveSearchPlaceholder = \"Search ...\";\n    selectPickerLiveSearch.liveSearchNormalize = true;\n    selectPickerLiveSearch.noneSelectedText = \"Move to port\";\n\n    this._portNamesSelector.addEventListener(\"change\", function (event) {\n      Object(_analytics__WEBPACK_IMPORTED_MODULE_6__[\"registerEvent\"])(\"Menu\", \"Move to port\");\n\n      _this._portSelected(event);\n    });\n\n    this._portNames$.selectpicker(selectPickerLiveSearch);\n\n    selectPickerLiveSearch.noneSelectedText = \"Select good\";\n\n    this._buyGoodsSelector.addEventListener(\"change\", function (event) {\n      Object(_analytics__WEBPACK_IMPORTED_MODULE_6__[\"registerEvent\"])(\"Menu\", \"Select good\");\n\n      _this._goodSelected(event);\n    });\n\n    this._buyGoods$.selectpicker(selectPickerLiveSearch);\n\n    selectPickerDefaults.noneSelectedText = \"Select nation\";\n\n    this._propNationSelector.addEventListener(\"change\", function (event) {\n      return _this._nationSelected(event);\n    });\n\n    this._propNation$.selectpicker(selectPickerDefaults);\n\n    selectPickerDefaults.noneSelectedText = \"Select clan\";\n\n    this._propClanSelector.addEventListener(\"change\", function (event) {\n      return _this._clanSelected(event);\n    });\n\n    this._propClan$.selectpicker(selectPickerDefaults);\n\n    selectPickerDefaults.noneSelectedText = \"Select\";\n\n    this._propCMSelector.addEventListener(\"change\", function (event) {\n      event.preventDefault();\n\n      _this._CMSelected(event);\n    });\n\n    this._propCM$.selectpicker(selectPickerDefaults);\n\n    document.getElementById(\"menu-prop-deep\").addEventListener(\"click\", function () {\n      return _this._depthSelected(\"deep\");\n    });\n    document.getElementById(\"menu-prop-shallow\").addEventListener(\"click\", function () {\n      return _this._depthSelected(\"shallow\");\n    });\n    document.getElementById(\"menu-prop-all\").addEventListener(\"click\", function () {\n      return _this._allSelected();\n    });\n    document.getElementById(\"menu-prop-green\").addEventListener(\"click\", function () {\n      return _this._greenZoneSelected();\n    });\n    document.getElementById(\"menu-prop-large\").addEventListener(\"click\", function () {\n      return _this._portSizeSelected(\"Large\");\n    });\n    document.getElementById(\"menu-prop-medium\").addEventListener(\"click\", function () {\n      return _this._portSizeSelected(\"Medium\");\n    });\n    document.getElementById(\"menu-prop-small\").addEventListener(\"click\", function () {\n      return _this._portSizeSelected(\"Small\");\n    });\n    $(\"#prop-pb-from\").datetimepicker({\n      format: this._timeFormat\n    });\n    $(\"#prop-pb-to\").datetimepicker({\n      format: this._timeFormat\n    });\n    $(\"#prop-pb-range\").submit(function (event) {\n      _this._capturePBRange();\n\n      $(\"#propertyDropdown\").dropdown(\"toggle\");\n      event.preventDefault();\n    });\n    document.getElementById(\"menu-prop-today\").addEventListener(\"click\", function () {\n      return _this._capturedToday();\n    });\n    document.getElementById(\"menu-prop-yesterday\").addEventListener(\"click\", function () {\n      return _this._capturedYesterday();\n    });\n    document.getElementById(\"menu-prop-this-week\").addEventListener(\"click\", function () {\n      return _this._capturedThisWeek();\n    });\n    document.getElementById(\"menu-prop-last-week\").addEventListener(\"click\", function () {\n      return _this._capturedLastWeek();\n    });\n    var portFrom = $(\"#prop-from\"),\n        portTo = $(\"#prop-to\");\n    portFrom.datetimepicker({\n      format: this._dateFormat\n    });\n    portTo.datetimepicker({\n      format: this._dateFormat,\n      useCurrent: false\n    });\n    portFrom.on(\"change.datetimepicker\", function (e) {\n      return portTo.datetimepicker(\"minDate\", e.date);\n    });\n    portTo.on(\"change.datetimepicker\", function (e) {\n      return portFrom.datetimepicker(\"maxDate\", e.date);\n    });\n    $(\"#prop-range\").submit(function (event) {\n      _this._captureRange();\n\n      $(\"#propertyDropdown\").dropdown(\"toggle\");\n      event.preventDefault();\n    }); // Adapted https://github.com/bootstrapthemesco/bootstrap-4-multi-dropdown-navbar\n\n    $(\".nav-item .dropdown-menu .bootstrap-select .dropdown-toggle\").on(\"click\", function (event) {\n      var $el = $(event.currentTarget);\n      $el.next(\".dropdown-menu\").toggleClass(\"show\");\n      $el.parent(\"li\").toggleClass(\"show\");\n      $el.parents(\"li.nav-item.dropdown.show\").on(\"hidden.bs.dropdown\", function (event2) {\n        $(event2.currentTarget).find(\"div.dropdown-menu.show\").removeClass(\"show\");\n      });\n      return false;\n    });\n    $(\".selectpicker\").val(\"default\").selectpicker(\"refresh\");\n  };\n\n  _proto._setupPortSelect = function _setupPortSelect() {\n    var _this2 = this;\n\n    var selectPorts = this._ports.portDataDefault.map(function (d) {\n      return {\n        id: d.id,\n        coord: [d.geometry.coordinates[0], d.geometry.coordinates[1]],\n        name: d.properties.name,\n        nation: _this2._ports.pbData.ports.filter(function (port) {\n          return port.id === d.id;\n        }).map(function (port) {\n          return port.nation;\n        })\n      };\n    }).sort(function (a, b) {\n      if (a.name < b.name) {\n        return -1;\n      }\n\n      if (a.name > b.name) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    var select = \"\" + selectPorts.map(function (port) {\n      return \"<option data-subtext=\\\"\" + port.nation + \"\\\" value=\\\"\" + port.coord + \"\\\" data-id=\\\"\" + port.id + \"\\\">\" + port.name + \"</option>\";\n    }).join(\"\");\n\n    this._portNamesSelector.insertAdjacentHTML(\"beforeend\", select);\n  };\n\n  _proto._setupGoodSelect = function _setupGoodSelect() {\n    var selectGoods = new Set();\n\n    function PortsPerGood() {}\n\n    PortsPerGood.prototype.add = function (goods) {\n      goods.forEach(function (good) {\n        selectGoods.add(good);\n      });\n    };\n\n    var portsPerGood = new PortsPerGood();\n\n    this._ports.portDataDefault.forEach(function (port) {\n      portsPerGood.add(port.properties.dropsTrading);\n      portsPerGood.add(port.properties.dropsNonTrading);\n      portsPerGood.add(port.properties.producesTrading);\n      portsPerGood.add(port.properties.producesNonTrading);\n    });\n\n    var select = \"\" + Array.from(selectGoods).sort().map(function (good) {\n      return \"<option>\" + good + \"</option>\";\n    }).join(\"\");\n\n    this._buyGoodsSelector.insertAdjacentHTML(\"beforeend\", select);\n  };\n\n  _proto._setupNationSelect = function _setupNationSelect() {\n    var select = \"\" + _common__WEBPACK_IMPORTED_MODULE_5__[\"nations\"].sort(function (a, b) {\n      if (a.sortName < b.sortName) {\n        return -1;\n      }\n\n      if (a.sortName > b.sortName) {\n        return 1;\n      }\n\n      return 0;\n    }).map(function (nation) {\n      return \"<option value=\\\"\" + nation.short + \"\\\">\" + nation.name + \"</option>\";\n    }).join(\"\");\n\n    this._propNationSelector.insertAdjacentHTML(\"beforeend\", select);\n  };\n\n  _proto._setupClanSelect = function _setupClanSelect() {\n    this._propClanSelector.innerHTML = \"\";\n    var clanList = new Set(),\n        portId = new Set();\n\n    this._ports.portData.forEach(function (d) {\n      return portId.add(d.id);\n    });\n\n    this._ports.pbData.ports.filter(function (d) {\n      return d.capturer && portId.has(d.id);\n    }).forEach(function (d) {\n      return clanList.add(d.capturer);\n    });\n\n    var select = \"\" + Array.from(clanList).sort().map(function (clan) {\n      return \"<option value=\\\"\" + clan + \"\\\">\" + clan + \"</option>\";\n    }).join(\"\");\n\n    if (select.length) {\n      this._propClanSelector.insertAdjacentHTML(\"beforeend\", select);\n\n      this._propClanSelector.disabled = false;\n    } else {\n      this._propClanSelector.disabled = true;\n    }\n\n    this._propClan$.selectpicker(\"val\", \"default\");\n  };\n\n  _proto._setupCMSelect = function _setupCMSelect() {\n    var _this3 = this;\n\n    var cmList = new Set();\n\n    this._ports.portData.forEach(function (d) {\n      return cmList.add(d.properties.conquestMarksPension);\n    });\n\n    cmList.forEach(function (cm) {\n      _this3._propCM$.append(\"beforeend\", $(\"<option>\", {\n        value: cm,\n        text: cm\n      }));\n    });\n  };\n\n  _proto._portSelected = function _portSelected(event) {\n    var port = $(event.currentTarget).find(\":selected\");\n    var c = port.val().split(\",\");\n\n    if (c[0] === \"0\") {\n      this._ports.portData = this._ports.portDataDefault;\n      this._ports.showCurrentGood = false;\n\n      this._ports.update();\n    } else {\n      var currentPort = {\n        id: port.data(\"id\").toString(),\n        coord: {\n          x: +c[0],\n          y: +c[1]\n        }\n      };\n      this._ports.currentPort = currentPort;\n\n      if (this._pbZone._showPBZones) {\n        this._pbZone.refresh();\n\n        this._ports.showCurrentGood = false;\n\n        this._ports.update();\n      }\n\n      this._map.goToPort();\n    }\n  };\n\n  _proto._goodSelected = function _goodSelected(event) {\n    var good = $(event.currentTarget).find(\":selected\")[0].text,\n        sourcePorts = this._ports.portDataDefault.filter(function (port) {\n      return port.properties.dropsTrading.includes(good) || port.properties.dropsNonTrading.includes(good) || port.properties.producesTrading.includes(good) || port.properties.producesNonTrading.includes(good);\n    }).map(function (port) {\n      // eslint-disable-next-line prefer-destructuring,no-param-reassign\n      port.properties.isSource = true;\n      return port;\n    }),\n        consumingPorts = this._ports.portDataDefault.filter(function (port) {\n      return port.properties.consumesTrading.includes(good) || port.properties.consumesNonTrading.includes(good);\n    }).map(function (port) {\n      // eslint-disable-next-line prefer-destructuring,no-param-reassign\n      port.properties.isSource = false;\n      return port;\n    });\n\n    this._ports.showRadiusSetting = \"off\";\n    this._ports.portData = sourcePorts.concat(consumingPorts);\n    this._ports.showCurrentGood = true;\n\n    this._ports.update();\n  };\n\n  _proto._nationSelected = function _nationSelected(event) {\n    var _this4 = this;\n\n    var nationId = $(event.currentTarget).val();\n    var portData;\n\n    if (+nationId !== 0) {\n      this._nation = nationId;\n      var portId = new Set();\n\n      this._ports.pbData.ports.filter(function (port) {\n        return port.nation === _this4._nation;\n      }).forEach(function (port) {\n        return portId.add(port.id);\n      });\n\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return portId.has(d.id);\n      });\n    } else {\n      this._nation = \"\";\n      portData = this._ports.portDataDefault;\n    } // $(\"#propertyDropdown\").dropdown(\"toggle\");\n\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n\n    this._setupClanSelect();\n  };\n\n  _proto._clanSelected = function _clanSelected(event) {\n    var _this5 = this;\n\n    var clan = $(event.currentTarget).val();\n    var portData;\n\n    if (+clan !== 0) {\n      var portId = new Set();\n\n      this._ports.pbData.ports.filter(function (port) {\n        return clan === port.capturer;\n      }).forEach(function (port) {\n        return portId.add(port.id);\n      });\n\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return portId.has(d.id);\n      });\n    } else if (this._nation) {\n      var _portId = new Set();\n\n      this._ports.pbData.ports.filter(function (port) {\n        return port.nation === _this5._nation;\n      }).forEach(function (port) {\n        return _portId.add(port.id);\n      });\n\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return _portId.has(d.id);\n      });\n    } else {\n      portData = this._ports.portDataDefault;\n    } // $(\"#propertyDropdown\").dropdown(\"toggle\");\n\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._depthSelected = function _depthSelected(depth) {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return depth === \"shallow\" ? d.properties.shallow : !d.properties.shallow;\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._allSelected = function _allSelected() {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return d.properties.availableForAll;\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._greenZoneSelected = function _greenZoneSelected() {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return d.properties.nonCapturable && d.properties.nation !== \"FT\";\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._portSizeSelected = function _portSizeSelected(size) {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return size === d.properties.portBattleType;\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._capturePBRange = function _capturePBRange() {\n    var blackOutTimes = [8, 9, 10],\n        // 24 hours minus black-out hours\n    maxStartTime = 24 - (blackOutTimes.length + 1);\n    var startTimes = new Set();\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-pb-from-input\").val(), this._timeFormat).hour();\n    var end = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-pb-to-input\").val(), this._timeFormat).hour(); // console.log(\"Between %d and %d\", begin, end);\n    // Range not in black-out range of 9 to 10\n\n    if (!(blackOutTimes.includes(begin) && blackOutTimes.includes(end) && begin <= end)) {\n      startTimes.add(0);\n\n      if (end < begin) {\n        end += 24;\n      }\n\n      for (var i = begin - 2; i <= end - 3; i += 1) {\n        startTimes.add((i - 10) % maxStartTime);\n      }\n    }\n\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return !d.properties.nonCapturable && d.properties.nation !== \"FT\" && startTimes.has(d.properties.portBattleStartTime);\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._filterCaptured = function _filterCaptured(begin, end) {\n    // console.log(\"Between %s and %s\", begin.format(\"dddd D MMMM YYYY H:mm\"), end.format(\"dddd D MMMM YYYY H:mm\"));\n    var portId = new Set();\n\n    this._ports.pbData.ports.filter(function (port) {\n      return moment_moment__WEBPACK_IMPORTED_MODULE_1___default()(port.lastPortBattle).isBetween(begin, end, null, \"(]\");\n    }).forEach(function (port) {\n      return portId.add(port.id);\n    });\n\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return portId.has(d.id);\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._capturedToday = function _capturedToday() {\n    var now = moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc();\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().hour(11).minute(0);\n\n    if (now.hour() < begin.hour()) {\n      begin = begin.subtract(1, \"day\");\n    }\n\n    this._filterCaptured(begin, moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc(begin).add(1, \"day\"));\n  };\n\n  _proto._capturedYesterday = function _capturedYesterday() {\n    var now = moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc();\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().hour(11).minute(0).subtract(1, \"day\");\n\n    if (now.hour() < begin.hour()) {\n      begin = begin.subtract(1, \"day\");\n    }\n\n    this._filterCaptured(begin, moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc(begin).add(1, \"day\"));\n  };\n\n  _proto._capturedThisWeek = function _capturedThisWeek() {\n    var currentMondayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().startOf(\"week\");\n    var begin = currentMondayOfWeek.hour(11),\n        // this Monday\n    end = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()(currentMondayOfWeek).add(7, \"day\").hour(11); // next Monday\n\n    this._filterCaptured(begin, end);\n  };\n\n  _proto._capturedLastWeek = function _capturedLastWeek() {\n    var currentMondayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().startOf(\"week\");\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()(currentMondayOfWeek).subtract(7, \"day\").hour(11),\n        // Monday last week\n    end = currentMondayOfWeek.hour(11); // this Monday\n\n    this._filterCaptured(begin, end);\n  };\n\n  _proto._captureRange = function _captureRange() {\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-from-input\").val(), this._dateFormat).hour(11),\n        end = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-to-input\").val(), this._dateFormat).add(1, \"day\").hour(11);\n\n    this._filterCaptured(begin, end);\n  };\n\n  _proto._CMSelected = function _CMSelected() {\n    var value = parseInt(this._propCM$.val(), 10);\n    var portData;\n\n    if (value !== 0) {\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return value === d.properties.conquestMarksPension;\n      });\n    } else {\n      portData = this._ports.portDataDefault;\n    }\n\n    $(\"#propertyDropdown\").dropdown(\"toggle\");\n    this._ports.portData = portData;\n\n    this._ports.update();\n  };\n\n  _proto.clearMap = function clearMap() {\n    this._setupClanSelect();\n  };\n\n  return PortSelect;\n}();\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"../node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9wb3J0LXNlbGVjdC5qcz85MDAwIl0sIm5hbWVzIjpbIlBvcnRTZWxlY3QiLCJtYXAiLCJwb3J0cyIsInBiWm9uZSIsIl9tYXAiLCJfcG9ydHMiLCJfcGJab25lIiwiX2RhdGVGb3JtYXQiLCJfdGltZUZvcm1hdCIsIl9wb3J0TmFtZXNJZCIsIl9wb3J0TmFtZXNTZWxlY3RvciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJfcG9ydE5hbWVzJCIsIiQiLCJfYnV5R29vZHNJZCIsIl9idXlHb29kc1NlbGVjdG9yIiwiX2J1eUdvb2RzJCIsIl9wcm9wTmF0aW9uSWQiLCJfcHJvcE5hdGlvblNlbGVjdG9yIiwiX3Byb3BOYXRpb24kIiwiX3Byb3BDbGFuSWQiLCJfcHJvcENsYW5TZWxlY3RvciIsIl9wcm9wQ2xhbiQiLCJfcHJvcENNSWQiLCJfcHJvcENNU2VsZWN0b3IiLCJfcHJvcENNJCIsIl9zZXR1cFNlbGVjdHMiLCJfc2V0dXBMaXN0ZW5lciIsIl9zZXR1cFBvcnRTZWxlY3QiLCJfc2V0dXBHb29kU2VsZWN0IiwiX3NldHVwTmF0aW9uU2VsZWN0IiwiX3NldHVwQ2xhblNlbGVjdCIsIl9zZXR1cENNU2VsZWN0IiwiY2xhc3NMaXN0IiwiYWRkIiwic2VsZWN0UGlja2VyRGVmYXVsdHMiLCJpY29ucyIsInRpbWUiLCJkYXRlIiwidXAiLCJkb3duIiwicHJldmlvdXMiLCJuZXh0IiwidG9kYXkiLCJjbGVhciIsImNsb3NlIiwidGltZVpvbmUiLCJub25lU2VsZWN0ZWRUZXh0IiwiZHJvcHVwQXV0byIsInNlbGVjdFBpY2tlckxpdmVTZWFyY2giLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJsaXZlU2VhcmNoIiwibGl2ZVNlYXJjaFBsYWNlaG9sZGVyIiwibGl2ZVNlYXJjaE5vcm1hbGl6ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInJlZ2lzdGVyRXZlbnQiLCJfcG9ydFNlbGVjdGVkIiwic2VsZWN0cGlja2VyIiwiX2dvb2RTZWxlY3RlZCIsIl9uYXRpb25TZWxlY3RlZCIsIl9jbGFuU2VsZWN0ZWQiLCJwcmV2ZW50RGVmYXVsdCIsIl9DTVNlbGVjdGVkIiwiX2RlcHRoU2VsZWN0ZWQiLCJfYWxsU2VsZWN0ZWQiLCJfZ3JlZW5ab25lU2VsZWN0ZWQiLCJfcG9ydFNpemVTZWxlY3RlZCIsImRhdGV0aW1lcGlja2VyIiwiZm9ybWF0Iiwic3VibWl0IiwiX2NhcHR1cmVQQlJhbmdlIiwiZHJvcGRvd24iLCJfY2FwdHVyZWRUb2RheSIsIl9jYXB0dXJlZFllc3RlcmRheSIsIl9jYXB0dXJlZFRoaXNXZWVrIiwiX2NhcHR1cmVkTGFzdFdlZWsiLCJwb3J0RnJvbSIsInBvcnRUbyIsInVzZUN1cnJlbnQiLCJvbiIsImUiLCJfY2FwdHVyZVJhbmdlIiwiJGVsIiwiY3VycmVudFRhcmdldCIsInRvZ2dsZUNsYXNzIiwicGFyZW50IiwicGFyZW50cyIsImV2ZW50MiIsImZpbmQiLCJyZW1vdmVDbGFzcyIsInZhbCIsInNlbGVjdFBvcnRzIiwicG9ydERhdGFEZWZhdWx0IiwiZCIsImlkIiwiY29vcmQiLCJnZW9tZXRyeSIsImNvb3JkaW5hdGVzIiwibmFtZSIsInByb3BlcnRpZXMiLCJuYXRpb24iLCJwYkRhdGEiLCJmaWx0ZXIiLCJwb3J0Iiwic29ydCIsImEiLCJiIiwic2VsZWN0Iiwiam9pbiIsImluc2VydEFkamFjZW50SFRNTCIsInNlbGVjdEdvb2RzIiwiU2V0IiwiUG9ydHNQZXJHb29kIiwicHJvdG90eXBlIiwiZ29vZHMiLCJmb3JFYWNoIiwiZ29vZCIsInBvcnRzUGVyR29vZCIsImRyb3BzVHJhZGluZyIsImRyb3BzTm9uVHJhZGluZyIsInByb2R1Y2VzVHJhZGluZyIsInByb2R1Y2VzTm9uVHJhZGluZyIsIkFycmF5IiwiZnJvbSIsInNvcnROYW1lIiwic2hvcnQiLCJpbm5lckhUTUwiLCJjbGFuTGlzdCIsInBvcnRJZCIsInBvcnREYXRhIiwiY2FwdHVyZXIiLCJoYXMiLCJjbGFuIiwibGVuZ3RoIiwiZGlzYWJsZWQiLCJjbUxpc3QiLCJjb25xdWVzdE1hcmtzUGVuc2lvbiIsImNtIiwiYXBwZW5kIiwidmFsdWUiLCJ0ZXh0IiwiYyIsInNwbGl0Iiwic2hvd0N1cnJlbnRHb29kIiwidXBkYXRlIiwiY3VycmVudFBvcnQiLCJkYXRhIiwidG9TdHJpbmciLCJ4IiwieSIsIl9zaG93UEJab25lcyIsInJlZnJlc2giLCJnb1RvUG9ydCIsInNvdXJjZVBvcnRzIiwiaW5jbHVkZXMiLCJpc1NvdXJjZSIsImNvbnN1bWluZ1BvcnRzIiwiY29uc3VtZXNUcmFkaW5nIiwiY29uc3VtZXNOb25UcmFkaW5nIiwic2hvd1JhZGl1c1NldHRpbmciLCJjb25jYXQiLCJuYXRpb25JZCIsIl9uYXRpb24iLCJkZXB0aCIsInNoYWxsb3ciLCJhdmFpbGFibGVGb3JBbGwiLCJub25DYXB0dXJhYmxlIiwic2l6ZSIsInBvcnRCYXR0bGVUeXBlIiwiYmxhY2tPdXRUaW1lcyIsIm1heFN0YXJ0VGltZSIsInN0YXJ0VGltZXMiLCJiZWdpbiIsImhvdXIiLCJlbmQiLCJpIiwicG9ydEJhdHRsZVN0YXJ0VGltZSIsIl9maWx0ZXJDYXB0dXJlZCIsImxhc3RQb3J0QmF0dGxlIiwiaXNCZXR3ZWVuIiwibm93IiwidXRjIiwibWludXRlIiwic3VidHJhY3QiLCJjdXJyZW50TW9uZGF5T2ZXZWVrIiwic3RhcnRPZiIsInBhcnNlSW50IiwiY2xlYXJNYXAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBOzs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7SUFFcUJBLFU7OztBQUNqQixzQkFBWUMsR0FBWixFQUFpQkMsS0FBakIsRUFBd0JDLE1BQXhCLEVBQWdDO0FBQzVCLFNBQUtDLElBQUwsR0FBWUgsR0FBWjtBQUNBLFNBQUtJLE1BQUwsR0FBY0gsS0FBZDtBQUNBLFNBQUtJLE9BQUwsR0FBZUgsTUFBZjtBQUNBLFNBQUtJLFdBQUwsR0FBbUIsT0FBbkI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CLE9BQW5C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LEVBQThCLEtBQUt2RixXQUFuQyxDQUFOLENBQXNEMEssSUFBdEQsQ0FBMkQsRUFBM0QsQ0FBZDtBQUFBLFFBQ0lDLEdBQUcsR0FBRyxvREFBTSxDQUFDcEssQ0FBQyxDQUFDLGdCQUFELENBQUQsQ0FBb0JnRixHQUFwQixFQUFELEVBQTRCLEtBQUt2RixXQUFqQyxDQUFOLENBQ0Q0QixHQURDLENBQ0csQ0FESCxFQUNNLEtBRE4sRUFFRDhJLElBRkMsQ0FFSSxFQUZKLENBRFY7O0FBSUEsU0FBS0ksZUFBTCxDQUFxQkwsS0FBckIsRUFBNEJFLEdBQTVCO0FBQ0gsRzs7U0FFRGhILFcsMEJBQWM7QUFDVixRQUFNNkUsS0FBSyxHQUFHK0MsUUFBUSxDQUFDLEtBQUtwSyxRQUFMLENBQWNvRSxHQUFkLEVBQUQsRUFBc0IsRUFBdEIsQ0FBdEI7QUFDQSxRQUFJdUMsUUFBSjs7QUFFQSxRQUFJVSxLQUFLLEtBQUssQ0FBZCxFQUFpQjtBQUNiVixjQUFRLEdBQUcsS0FBS2hJLE1BQUwsQ0FBWTJGLGVBQVosQ0FBNEJVLE1BQTVCLENBQW1DLFVBQUFULENBQUM7QUFBQSxlQUFJOEMsS0FBSyxLQUFLOUMsQ0FBQyxDQUFDTSxVQUFGLENBQWFxQyxvQkFBM0I7QUFBQSxPQUFwQyxDQUFYO0FBQ0gsS0FGRCxNQUVPO0FBQ0hQLGNBQVEsR0FBRyxLQUFLaEksTUFBTCxDQUFZMkYsZUFBdkI7QUFDSDs7QUFDRGxGLEtBQUMsQ0FBQyxtQkFBRCxDQUFELENBQXVCNkQsUUFBdkIsQ0FBZ0MsUUFBaEM7QUFDQSxTQUFLdEUsTUFBTCxDQUFZZ0ksUUFBWixHQUF1QkEsUUFBdkI7O0FBQ0EsU0FBS2hJLE1BQUwsQ0FBWStJLE1BQVo7QUFDSCxHOztTQUVEMkMsUSx1QkFBVztBQUNQLFNBQUsvSixnQkFBTDtBQUNILEciLCJmaWxlIjoiLi9qcy9wb3J0LXNlbGVjdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdHBvcnQtc2VsZWN0LmpzXG4qL1xuXG5pbXBvcnQgXCJib290c3RyYXAtc2VsZWN0L2pzL2Jvb3RzdHJhcC1zZWxlY3RcIjtcbmltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudC9tb21lbnRcIjtcbmltcG9ydCBcIm1vbWVudC9sb2NhbGUvZW4tZ2JcIjtcbmltcG9ydCBcInRlbXB1c2RvbWludXMtYm9vdHN0cmFwLTQvYnVpbGQvanMvdGVtcHVzZG9taW51cy1ib290c3RyYXAtNFwiO1xuaW1wb3J0IFwidGVtcHVzZG9taW51cy1jb3JlL2J1aWxkL2pzL3RlbXB1c2RvbWludXMtY29yZVwiO1xuXG5pbXBvcnQgeyBuYXRpb25zIH0gZnJvbSBcIi4vY29tbW9uXCI7XG5pbXBvcnQgeyByZWdpc3RlckV2ZW50IH0gZnJvbSBcIi4vYW5hbHl0aWNzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcnRTZWxlY3Qge1xuICAgIGNvbnN0cnVjdG9yKG1hcCwgcG9ydHMsIHBiWm9uZSkge1xuICAgICAgICB0aGlzLl9tYXAgPSBtYXA7XG4gICAgICAgIHRoaXMuX3BvcnRzID0gcG9ydHM7XG4gICAgICAgIHRoaXMuX3BiWm9uZSA9IHBiWm9uZTtcbiAgICAgICAgdGhpcy5fZGF0ZUZvcm1hdCA9IFwiRCBNTU1cIjtcbiAgICAgICAgdGhpcy5fdGltZUZvcm1hdCA9IFwiSEguMDBcIjtcblxuICAgICAgICB0aGlzLl9wb3J0TmFtZXNJZCA9IFwicG9ydC1uYW1lc1wiO1xuICAgICAgICB0aGlzLl9wb3J0TmFtZXNTZWxlY3RvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuX3BvcnROYW1lc0lkKTtcbiAgICAgICAgdGhpcy5fcG9ydE5hbWVzJCA9ICQoYCMke3RoaXMuX3BvcnROYW1lc0lkfWApO1xuXG4gICAgICAgIHRoaXMuX2J1eUdvb2RzSWQgPSBcImJ1eS1nb29kc1wiO1xuICAgICAgICB0aGlzLl9idXlHb29kc1NlbGVjdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fYnV5R29vZHNJZCk7XG4gICAgICAgIHRoaXMuX2J1eUdvb2RzJCA9ICQoYCMke3RoaXMuX3BvcnROYW1lc0lkfWApO1xuXG4gICAgICAgIHRoaXMuX3Byb3BOYXRpb25JZCA9IFwicHJvcC1uYXRpb25cIjtcbiAgICAgICAgdGhpcy5fcHJvcE5hdGlvblNlbGVjdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fcHJvcE5hdGlvbklkKTtcbiAgICAgICAgdGhpcy5fcHJvcE5hdGlvbiQgPSAkKGAjJHt0aGlzLl9wcm9wTmF0aW9uSWR9YCk7XG5cbiAgICAgICAgdGhpcy5fcHJvcENsYW5JZCA9IFwicHJvcC1jbGFuXCI7XG4gICAgICAgIHRoaXMuX3Byb3BDbGFuU2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLl9wcm9wQ2xhbklkKTtcbiAgICAgICAgdGhpcy5fcHJvcENsYW4kID0gJChgIyR7dGhpcy5fcHJvcENsYW5JZH1gKTtcblxuICAgICAgICB0aGlzLl9wcm9wQ01JZCA9IFwicHJvcC1jbVwiO1xuICAgICAgICB0aGlzLl9wcm9wQ01TZWxlY3RvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuX3Byb3BDTUlkKTtcbiAgICAgICAgdGhpcy5fcHJvcENNJCA9ICQoYCMke3RoaXMuX3Byb3BDTUlkfWApO1xuXG4gICAgICAgIHRoaXMuX3NldHVwU2VsZWN0cygpO1xuICAgICAgICB0aGlzLl9zZXR1cExpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgX3NldHVwU2VsZWN0cygpIHtcbiAgICAgICAgdGhpcy5fc2V0dXBQb3J0U2VsZWN0KCk7XG4gICAgICAgIHRoaXMuX3NldHVwR29vZFNlbGVjdCgpO1xuICAgICAgICB0aGlzLl9zZXR1cE5hdGlvblNlbGVjdCgpO1xuICAgICAgICB0aGlzLl9zZXR1cENsYW5TZWxlY3QoKTtcbiAgICAgICAgdGhpcy5fc2V0dXBDTVNlbGVjdCgpO1xuICAgIH1cblxuICAgIF9zZXR1cExpc3RlbmVyKCkge1xuICAgICAgICB0aGlzLl9wb3J0TmFtZXNTZWxlY3Rvci5jbGFzc0xpc3QuYWRkKFwic2VsZWN0cGlja2VyXCIpO1xuICAgICAgICB0aGlzLl9idXlHb29kc1NlbGVjdG9yLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RwaWNrZXJcIik7XG4gICAgICAgIHRoaXMuX3Byb3BOYXRpb25TZWxlY3Rvci5jbGFzc0xpc3QuYWRkKFwic2VsZWN0cGlja2VyXCIpO1xuICAgICAgICB0aGlzLl9wcm9wQ2xhblNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RwaWNrZXJcIik7XG4gICAgICAgIHRoaXMuX3Byb3BDTVNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RwaWNrZXJcIik7XG4gICAgICAgIGNvbnN0IHNlbGVjdFBpY2tlckRlZmF1bHRzID0ge1xuICAgICAgICAgICAgaWNvbnM6IHtcbiAgICAgICAgICAgICAgICB0aW1lOiBcImZhciBmYS1jbG9ja1wiLFxuICAgICAgICAgICAgICAgIGRhdGU6IFwiZmFyIGZhLWNhbGVuZGFyXCIsXG4gICAgICAgICAgICAgICAgdXA6IFwiZmFzIGZhLWFycm93LXVwXCIsXG4gICAgICAgICAgICAgICAgZG93bjogXCJmYXMgZmEtYXJyb3ctZG93blwiLFxuICAgICAgICAgICAgICAgIHByZXZpb3VzOiBcImZhcyBmYS1jaGV2cm9uLWxlZnRcIixcbiAgICAgICAgICAgICAgICBuZXh0OiBcImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCIsXG4gICAgICAgICAgICAgICAgdG9kYXk6IFwiZmFyIGZhLWNhbGVuZGFyLWNoZWNrXCIsXG4gICAgICAgICAgICAgICAgY2xlYXI6IFwiZmFzIGZhLXRyYXNoXCIsXG4gICAgICAgICAgICAgICAgY2xvc2U6IFwiZmFzIGZhLXRpbWVzXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aW1lWm9uZTogXCJVVENcIixcbiAgICAgICAgICAgIG5vbmVTZWxlY3RlZFRleHQ6IFwiXCIsXG4gICAgICAgICAgICBkcm9wdXBBdXRvOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBzZWxlY3RQaWNrZXJMaXZlU2VhcmNoID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzZWxlY3RQaWNrZXJEZWZhdWx0cykpO1xuICAgICAgICBzZWxlY3RQaWNrZXJMaXZlU2VhcmNoLmxpdmVTZWFyY2ggPSB0cnVlO1xuICAgICAgICBzZWxlY3RQaWNrZXJMaXZlU2VhcmNoLmxpdmVTZWFyY2hQbGFjZWhvbGRlciA9IFwiU2VhcmNoIC4uLlwiO1xuICAgICAgICBzZWxlY3RQaWNrZXJMaXZlU2VhcmNoLmxpdmVTZWFyY2hOb3JtYWxpemUgPSB0cnVlO1xuXG4gICAgICAgIHNlbGVjdFBpY2tlckxpdmVTZWFyY2gubm9uZVNlbGVjdGVkVGV4dCA9IFwiTW92ZSB0byBwb3J0XCI7XG4gICAgICAgIHRoaXMuX3BvcnROYW1lc1NlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgcmVnaXN0ZXJFdmVudChcIk1lbnVcIiwgXCJNb3ZlIHRvIHBvcnRcIik7XG4gICAgICAgICAgICB0aGlzLl9wb3J0U2VsZWN0ZWQoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fcG9ydE5hbWVzJC5zZWxlY3RwaWNrZXIoc2VsZWN0UGlja2VyTGl2ZVNlYXJjaCk7XG5cbiAgICAgICAgc2VsZWN0UGlja2VyTGl2ZVNlYXJjaC5ub25lU2VsZWN0ZWRUZXh0ID0gXCJTZWxlY3QgZ29vZFwiO1xuICAgICAgICB0aGlzLl9idXlHb29kc1NlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZXZlbnQgPT4ge1xuICAgICAgICAgICAgcmVnaXN0ZXJFdmVudChcIk1lbnVcIiwgXCJTZWxlY3QgZ29vZFwiKTtcbiAgICAgICAgICAgIHRoaXMuX2dvb2RTZWxlY3RlZChldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9idXlHb29kcyQuc2VsZWN0cGlja2VyKHNlbGVjdFBpY2tlckxpdmVTZWFyY2gpO1xuXG4gICAgICAgIHNlbGVjdFBpY2tlckRlZmF1bHRzLm5vbmVTZWxlY3RlZFRleHQgPSBcIlNlbGVjdCBuYXRpb25cIjtcbiAgICAgICAgdGhpcy5fcHJvcE5hdGlvblNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZXZlbnQgPT4gdGhpcy5fbmF0aW9uU2VsZWN0ZWQoZXZlbnQpKTtcbiAgICAgICAgdGhpcy5fcHJvcE5hdGlvbiQuc2VsZWN0cGlja2VyKHNlbGVjdFBpY2tlckRlZmF1bHRzKTtcblxuICAgICAgICBzZWxlY3RQaWNrZXJEZWZhdWx0cy5ub25lU2VsZWN0ZWRUZXh0ID0gXCJTZWxlY3QgY2xhblwiO1xuICAgICAgICB0aGlzLl9wcm9wQ2xhblNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZXZlbnQgPT4gdGhpcy5fY2xhblNlbGVjdGVkKGV2ZW50KSk7XG4gICAgICAgIHRoaXMuX3Byb3BDbGFuJC5zZWxlY3RwaWNrZXIoc2VsZWN0UGlja2VyRGVmYXVsdHMpO1xuXG4gICAgICAgIHNlbGVjdFBpY2tlckRlZmF1bHRzLm5vbmVTZWxlY3RlZFRleHQgPSBcIlNlbGVjdFwiO1xuICAgICAgICB0aGlzLl9wcm9wQ01TZWxlY3Rvci5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLl9DTVNlbGVjdGVkKGV2ZW50KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3Byb3BDTSQuc2VsZWN0cGlja2VyKHNlbGVjdFBpY2tlckRlZmF1bHRzKTtcblxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtcHJvcC1kZWVwXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9kZXB0aFNlbGVjdGVkKFwiZGVlcFwiKSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS1wcm9wLXNoYWxsb3dcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2RlcHRoU2VsZWN0ZWQoXCJzaGFsbG93XCIpKTtcblxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtcHJvcC1hbGxcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2FsbFNlbGVjdGVkKCkpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtcHJvcC1ncmVlblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5fZ3JlZW5ab25lU2VsZWN0ZWQoKSk7XG5cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LXByb3AtbGFyZ2VcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX3BvcnRTaXplU2VsZWN0ZWQoXCJMYXJnZVwiKSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS1wcm9wLW1lZGl1bVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5fcG9ydFNpemVTZWxlY3RlZChcIk1lZGl1bVwiKSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS1wcm9wLXNtYWxsXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9wb3J0U2l6ZVNlbGVjdGVkKFwiU21hbGxcIikpO1xuXG4gICAgICAgICQoXCIjcHJvcC1wYi1mcm9tXCIpLmRhdGV0aW1lcGlja2VyKHtcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5fdGltZUZvcm1hdFxuICAgICAgICB9KTtcbiAgICAgICAgJChcIiNwcm9wLXBiLXRvXCIpLmRhdGV0aW1lcGlja2VyKHtcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5fdGltZUZvcm1hdFxuICAgICAgICB9KTtcbiAgICAgICAgJChcIiNwcm9wLXBiLXJhbmdlXCIpLnN1Ym1pdChldmVudCA9PiB7XG4gICAgICAgICAgICB0aGlzLl9jYXB0dXJlUEJSYW5nZSgpO1xuICAgICAgICAgICAgJChcIiNwcm9wZXJ0eURyb3Bkb3duXCIpLmRyb3Bkb3duKFwidG9nZ2xlXCIpO1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LXByb3AtdG9kYXlcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2NhcHR1cmVkVG9kYXkoKSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS1wcm9wLXllc3RlcmRheVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5fY2FwdHVyZWRZZXN0ZXJkYXkoKSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS1wcm9wLXRoaXMtd2Vla1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5fY2FwdHVyZWRUaGlzV2VlaygpKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LXByb3AtbGFzdC13ZWVrXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9jYXB0dXJlZExhc3RXZWVrKCkpO1xuXG4gICAgICAgIGNvbnN0IHBvcnRGcm9tID0gJChcIiNwcm9wLWZyb21cIiksXG4gICAgICAgICAgICBwb3J0VG8gPSAkKFwiI3Byb3AtdG9cIik7XG4gICAgICAgIHBvcnRGcm9tLmRhdGV0aW1lcGlja2VyKHtcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5fZGF0ZUZvcm1hdFxuICAgICAgICB9KTtcbiAgICAgICAgcG9ydFRvLmRhdGV0aW1lcGlja2VyKHtcbiAgICAgICAgICAgIGZvcm1hdDogdGhpcy5fZGF0ZUZvcm1hdCxcbiAgICAgICAgICAgIHVzZUN1cnJlbnQ6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICBwb3J0RnJvbS5vbihcImNoYW5nZS5kYXRldGltZXBpY2tlclwiLCBlID0+IHBvcnRUby5kYXRldGltZXBpY2tlcihcIm1pbkRhdGVcIiwgZS5kYXRlKSk7XG4gICAgICAgIHBvcnRUby5vbihcImNoYW5nZS5kYXRldGltZXBpY2tlclwiLCBlID0+IHBvcnRGcm9tLmRhdGV0aW1lcGlja2VyKFwibWF4RGF0ZVwiLCBlLmRhdGUpKTtcblxuICAgICAgICAkKFwiI3Byb3AtcmFuZ2VcIikuc3VibWl0KGV2ZW50ID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NhcHR1cmVSYW5nZSgpO1xuICAgICAgICAgICAgJChcIiNwcm9wZXJ0eURyb3Bkb3duXCIpLmRyb3Bkb3duKFwidG9nZ2xlXCIpO1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQWRhcHRlZCBodHRwczovL2dpdGh1Yi5jb20vYm9vdHN0cmFwdGhlbWVzY28vYm9vdHN0cmFwLTQtbXVsdGktZHJvcGRvd24tbmF2YmFyXG4gICAgICAgICQoXCIubmF2LWl0ZW0gLmRyb3Bkb3duLW1lbnUgLmJvb3RzdHJhcC1zZWxlY3QgLmRyb3Bkb3duLXRvZ2dsZVwiKS5vbihcImNsaWNrXCIsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGNvbnN0ICRlbCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICAgICAgICAgICRlbC5uZXh0KFwiLmRyb3Bkb3duLW1lbnVcIikudG9nZ2xlQ2xhc3MoXCJzaG93XCIpO1xuICAgICAgICAgICAgJGVsLnBhcmVudChcImxpXCIpLnRvZ2dsZUNsYXNzKFwic2hvd1wiKTtcbiAgICAgICAgICAgICRlbC5wYXJlbnRzKFwibGkubmF2LWl0ZW0uZHJvcGRvd24uc2hvd1wiKS5vbihcImhpZGRlbi5icy5kcm9wZG93blwiLCBldmVudDIgPT4ge1xuICAgICAgICAgICAgICAgICQoZXZlbnQyLmN1cnJlbnRUYXJnZXQpXG4gICAgICAgICAgICAgICAgICAgIC5maW5kKFwiZGl2LmRyb3Bkb3duLW1lbnUuc2hvd1wiKVxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJzaG93XCIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoXCIuc2VsZWN0cGlja2VyXCIpXG4gICAgICAgICAgICAudmFsKFwiZGVmYXVsdFwiKVxuICAgICAgICAgICAgLnNlbGVjdHBpY2tlcihcInJlZnJlc2hcIik7XG4gICAgfVxuXG4gICAgX3NldHVwUG9ydFNlbGVjdCgpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0UG9ydHMgPSB0aGlzLl9wb3J0cy5wb3J0RGF0YURlZmF1bHRcbiAgICAgICAgICAgIC5tYXAoZCA9PiAoe1xuICAgICAgICAgICAgICAgIGlkOiBkLmlkLFxuICAgICAgICAgICAgICAgIGNvb3JkOiBbZC5nZW9tZXRyeS5jb29yZGluYXRlc1swXSwgZC5nZW9tZXRyeS5jb29yZGluYXRlc1sxXV0sXG4gICAgICAgICAgICAgICAgbmFtZTogZC5wcm9wZXJ0aWVzLm5hbWUsXG4gICAgICAgICAgICAgICAgbmF0aW9uOiB0aGlzLl9wb3J0cy5wYkRhdGEucG9ydHMuZmlsdGVyKHBvcnQgPT4gcG9ydC5pZCA9PT0gZC5pZCkubWFwKHBvcnQgPT4gcG9ydC5uYXRpb24pXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGEubmFtZSA8IGIubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhLm5hbWUgPiBiLm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ID0gYCR7c2VsZWN0UG9ydHNcbiAgICAgICAgICAgIC5tYXAoXG4gICAgICAgICAgICAgICAgcG9ydCA9PlxuICAgICAgICAgICAgICAgICAgICBgPG9wdGlvbiBkYXRhLXN1YnRleHQ9XCIke3BvcnQubmF0aW9ufVwiIHZhbHVlPVwiJHtwb3J0LmNvb3JkfVwiIGRhdGEtaWQ9XCIke3BvcnQuaWR9XCI+JHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcnQubmFtZVxuICAgICAgICAgICAgICAgICAgICB9PC9vcHRpb24+YFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmpvaW4oXCJcIil9YDtcbiAgICAgICAgdGhpcy5fcG9ydE5hbWVzU2VsZWN0b3IuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIHNlbGVjdCk7XG4gICAgfVxuXG4gICAgX3NldHVwR29vZFNlbGVjdCgpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0R29vZHMgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZ1bmN0aW9uIFBvcnRzUGVyR29vZCgpIHt9XG4gICAgICAgIFBvcnRzUGVyR29vZC5wcm90b3R5cGUuYWRkID0gZ29vZHMgPT4ge1xuICAgICAgICAgICAgZ29vZHMuZm9yRWFjaChnb29kID0+IHtcbiAgICAgICAgICAgICAgICBzZWxlY3RHb29kcy5hZGQoZ29vZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcG9ydHNQZXJHb29kID0gbmV3IFBvcnRzUGVyR29vZCgpO1xuXG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhRGVmYXVsdC5mb3JFYWNoKHBvcnQgPT4ge1xuICAgICAgICAgICAgcG9ydHNQZXJHb29kLmFkZChwb3J0LnByb3BlcnRpZXMuZHJvcHNUcmFkaW5nKTtcbiAgICAgICAgICAgIHBvcnRzUGVyR29vZC5hZGQocG9ydC5wcm9wZXJ0aWVzLmRyb3BzTm9uVHJhZGluZyk7XG4gICAgICAgICAgICBwb3J0c1Blckdvb2QuYWRkKHBvcnQucHJvcGVydGllcy5wcm9kdWNlc1RyYWRpbmcpO1xuICAgICAgICAgICAgcG9ydHNQZXJHb29kLmFkZChwb3J0LnByb3BlcnRpZXMucHJvZHVjZXNOb25UcmFkaW5nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IGAke0FycmF5LmZyb20oc2VsZWN0R29vZHMpXG4gICAgICAgICAgICAuc29ydCgpXG4gICAgICAgICAgICAubWFwKGdvb2QgPT4gYDxvcHRpb24+JHtnb29kfTwvb3B0aW9uPmApXG4gICAgICAgICAgICAuam9pbihcIlwiKX1gO1xuXG4gICAgICAgIHRoaXMuX2J1eUdvb2RzU2VsZWN0b3IuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIHNlbGVjdCk7XG4gICAgfVxuXG4gICAgX3NldHVwTmF0aW9uU2VsZWN0KCkge1xuICAgICAgICBjb25zdCBzZWxlY3QgPSBgJHtuYXRpb25zXG4gICAgICAgICAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChhLnNvcnROYW1lIDwgYi5zb3J0TmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhLnNvcnROYW1lID4gYi5zb3J0TmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm1hcChuYXRpb24gPT4gYDxvcHRpb24gdmFsdWU9XCIke25hdGlvbi5zaG9ydH1cIj4ke25hdGlvbi5uYW1lfTwvb3B0aW9uPmApXG4gICAgICAgICAgICAuam9pbihcIlwiKX1gO1xuICAgICAgICB0aGlzLl9wcm9wTmF0aW9uU2VsZWN0b3IuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIHNlbGVjdCk7XG4gICAgfVxuXG4gICAgX3NldHVwQ2xhblNlbGVjdCgpIHtcbiAgICAgICAgdGhpcy5fcHJvcENsYW5TZWxlY3Rvci5pbm5lckhUTUwgPSBcIlwiO1xuXG4gICAgICAgIGNvbnN0IGNsYW5MaXN0ID0gbmV3IFNldCgpLFxuICAgICAgICAgICAgcG9ydElkID0gbmV3IFNldCgpO1xuICAgICAgICB0aGlzLl9wb3J0cy5wb3J0RGF0YS5mb3JFYWNoKGQgPT4gcG9ydElkLmFkZChkLmlkKSk7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBiRGF0YS5wb3J0cy5maWx0ZXIoZCA9PiBkLmNhcHR1cmVyICYmIHBvcnRJZC5oYXMoZC5pZCkpLmZvckVhY2goZCA9PiBjbGFuTGlzdC5hZGQoZC5jYXB0dXJlcikpO1xuICAgICAgICBjb25zdCBzZWxlY3QgPSBgJHtBcnJheS5mcm9tKGNsYW5MaXN0KVxuICAgICAgICAgICAgLnNvcnQoKVxuICAgICAgICAgICAgLm1hcChjbGFuID0+IGA8b3B0aW9uIHZhbHVlPVwiJHtjbGFufVwiPiR7Y2xhbn08L29wdGlvbj5gKVxuICAgICAgICAgICAgLmpvaW4oXCJcIil9YDtcblxuICAgICAgICBpZiAoc2VsZWN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5fcHJvcENsYW5TZWxlY3Rvci5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgc2VsZWN0KTtcbiAgICAgICAgICAgIHRoaXMuX3Byb3BDbGFuU2VsZWN0b3IuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3Byb3BDbGFuU2VsZWN0b3IuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Byb3BDbGFuJC5zZWxlY3RwaWNrZXIoXCJ2YWxcIiwgXCJkZWZhdWx0XCIpO1xuICAgIH1cblxuICAgIF9zZXR1cENNU2VsZWN0KCkge1xuICAgICAgICBjb25zdCBjbUxpc3QgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhLmZvckVhY2goZCA9PiBjbUxpc3QuYWRkKGQucHJvcGVydGllcy5jb25xdWVzdE1hcmtzUGVuc2lvbikpO1xuICAgICAgICBjbUxpc3QuZm9yRWFjaChjbSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9wcm9wQ00kLmFwcGVuZChcbiAgICAgICAgICAgICAgICBcImJlZm9yZWVuZFwiLFxuICAgICAgICAgICAgICAgICQoXCI8b3B0aW9uPlwiLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjbSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogY21cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgX3BvcnRTZWxlY3RlZChldmVudCkge1xuICAgICAgICBjb25zdCBwb3J0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5maW5kKFwiOnNlbGVjdGVkXCIpO1xuICAgICAgICBjb25zdCBjID0gcG9ydC52YWwoKS5zcGxpdChcIixcIik7XG5cbiAgICAgICAgaWYgKGNbMF0gPT09IFwiMFwiKSB7XG4gICAgICAgICAgICB0aGlzLl9wb3J0cy5wb3J0RGF0YSA9IHRoaXMuX3BvcnRzLnBvcnREYXRhRGVmYXVsdDtcbiAgICAgICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5fcG9ydHMudXBkYXRlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50UG9ydCA9IHsgaWQ6IHBvcnQuZGF0YShcImlkXCIpLnRvU3RyaW5nKCksIGNvb3JkOiB7IHg6ICtjWzBdLCB5OiArY1sxXSB9IH07XG4gICAgICAgICAgICB0aGlzLl9wb3J0cy5jdXJyZW50UG9ydCA9IGN1cnJlbnRQb3J0O1xuICAgICAgICAgICAgaWYgKHRoaXMuX3BiWm9uZS5fc2hvd1BCWm9uZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wYlpvbmUucmVmcmVzaCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuX3BvcnRzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fbWFwLmdvVG9Qb3J0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfZ29vZFNlbGVjdGVkKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGdvb2QgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmZpbmQoXCI6c2VsZWN0ZWRcIilbMF0udGV4dCxcbiAgICAgICAgICAgIHNvdXJjZVBvcnRzID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0XG4gICAgICAgICAgICAgICAgLmZpbHRlcihcbiAgICAgICAgICAgICAgICAgICAgcG9ydCA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgcG9ydC5wcm9wZXJ0aWVzLmRyb3BzVHJhZGluZy5pbmNsdWRlcyhnb29kKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9ydC5wcm9wZXJ0aWVzLmRyb3BzTm9uVHJhZGluZy5pbmNsdWRlcyhnb29kKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9ydC5wcm9wZXJ0aWVzLnByb2R1Y2VzVHJhZGluZy5pbmNsdWRlcyhnb29kKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9ydC5wcm9wZXJ0aWVzLnByb2R1Y2VzTm9uVHJhZGluZy5pbmNsdWRlcyhnb29kKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAubWFwKHBvcnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmcsbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgICAgICAgICAgcG9ydC5wcm9wZXJ0aWVzLmlzU291cmNlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBvcnQ7XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBjb25zdW1pbmdQb3J0cyA9IHRoaXMuX3BvcnRzLnBvcnREYXRhRGVmYXVsdFxuICAgICAgICAgICAgICAgIC5maWx0ZXIoXG4gICAgICAgICAgICAgICAgICAgIHBvcnQgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcnQucHJvcGVydGllcy5jb25zdW1lc1RyYWRpbmcuaW5jbHVkZXMoZ29vZCkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcnQucHJvcGVydGllcy5jb25zdW1lc05vblRyYWRpbmcuaW5jbHVkZXMoZ29vZClcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgLm1hcChwb3J0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nLG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICAgICAgICAgIHBvcnQucHJvcGVydGllcy5pc1NvdXJjZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9ydDtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLl9wb3J0cy5zaG93UmFkaXVzU2V0dGluZyA9IFwib2ZmXCI7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhID0gc291cmNlUG9ydHMuY29uY2F0KGNvbnN1bWluZ1BvcnRzKTtcbiAgICAgICAgdGhpcy5fcG9ydHMuc2hvd0N1cnJlbnRHb29kID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fcG9ydHMudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgX25hdGlvblNlbGVjdGVkKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IG5hdGlvbklkID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS52YWwoKTtcbiAgICAgICAgbGV0IHBvcnREYXRhO1xuXG4gICAgICAgIGlmICgrbmF0aW9uSWQgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuX25hdGlvbiA9IG5hdGlvbklkO1xuICAgICAgICAgICAgY29uc3QgcG9ydElkID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgdGhpcy5fcG9ydHMucGJEYXRhLnBvcnRzLmZpbHRlcihwb3J0ID0+IHBvcnQubmF0aW9uID09PSB0aGlzLl9uYXRpb24pLmZvckVhY2gocG9ydCA9PiBwb3J0SWQuYWRkKHBvcnQuaWQpKTtcbiAgICAgICAgICAgIHBvcnREYXRhID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0LmZpbHRlcihkID0+IHBvcnRJZC5oYXMoZC5pZCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fbmF0aW9uID0gXCJcIjtcbiAgICAgICAgICAgIHBvcnREYXRhID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0O1xuICAgICAgICB9XG4gICAgICAgIC8vICQoXCIjcHJvcGVydHlEcm9wZG93blwiKS5kcm9wZG93bihcInRvZ2dsZVwiKTtcbiAgICAgICAgdGhpcy5fcG9ydHMucG9ydERhdGEgPSBwb3J0RGF0YTtcbiAgICAgICAgdGhpcy5fcG9ydHMuc2hvd0N1cnJlbnRHb29kID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3BvcnRzLnVwZGF0ZSgpO1xuICAgICAgICB0aGlzLl9zZXR1cENsYW5TZWxlY3QoKTtcbiAgICB9XG5cbiAgICBfY2xhblNlbGVjdGVkKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGNsYW4gPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLnZhbCgpO1xuICAgICAgICBsZXQgcG9ydERhdGE7XG5cbiAgICAgICAgaWYgKCtjbGFuICE9PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBwb3J0SWQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICB0aGlzLl9wb3J0cy5wYkRhdGEucG9ydHMuZmlsdGVyKHBvcnQgPT4gY2xhbiA9PT0gcG9ydC5jYXB0dXJlcikuZm9yRWFjaChwb3J0ID0+IHBvcnRJZC5hZGQocG9ydC5pZCkpO1xuICAgICAgICAgICAgcG9ydERhdGEgPSB0aGlzLl9wb3J0cy5wb3J0RGF0YURlZmF1bHQuZmlsdGVyKGQgPT4gcG9ydElkLmhhcyhkLmlkKSk7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5fbmF0aW9uKSB7XG4gICAgICAgICAgICBjb25zdCBwb3J0SWQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICB0aGlzLl9wb3J0cy5wYkRhdGEucG9ydHMuZmlsdGVyKHBvcnQgPT4gcG9ydC5uYXRpb24gPT09IHRoaXMuX25hdGlvbikuZm9yRWFjaChwb3J0ID0+IHBvcnRJZC5hZGQocG9ydC5pZCkpO1xuICAgICAgICAgICAgcG9ydERhdGEgPSB0aGlzLl9wb3J0cy5wb3J0RGF0YURlZmF1bHQuZmlsdGVyKGQgPT4gcG9ydElkLmhhcyhkLmlkKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwb3J0RGF0YSA9IHRoaXMuX3BvcnRzLnBvcnREYXRhRGVmYXVsdDtcbiAgICAgICAgfVxuICAgICAgICAvLyAkKFwiI3Byb3BlcnR5RHJvcGRvd25cIikuZHJvcGRvd24oXCJ0b2dnbGVcIik7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhID0gcG9ydERhdGE7XG4gICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9wb3J0cy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBfZGVwdGhTZWxlY3RlZChkZXB0aCkge1xuICAgICAgICBjb25zdCBwb3J0RGF0YSA9IHRoaXMuX3BvcnRzLnBvcnREYXRhRGVmYXVsdC5maWx0ZXIoXG4gICAgICAgICAgICBkID0+IChkZXB0aCA9PT0gXCJzaGFsbG93XCIgPyBkLnByb3BlcnRpZXMuc2hhbGxvdyA6ICFkLnByb3BlcnRpZXMuc2hhbGxvdylcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5fcG9ydHMucG9ydERhdGEgPSBwb3J0RGF0YTtcbiAgICAgICAgdGhpcy5fcG9ydHMuc2hvd0N1cnJlbnRHb29kID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3BvcnRzLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIF9hbGxTZWxlY3RlZCgpIHtcbiAgICAgICAgY29uc3QgcG9ydERhdGEgPSB0aGlzLl9wb3J0cy5wb3J0RGF0YURlZmF1bHQuZmlsdGVyKGQgPT4gZC5wcm9wZXJ0aWVzLmF2YWlsYWJsZUZvckFsbCk7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhID0gcG9ydERhdGE7XG4gICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9wb3J0cy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBfZ3JlZW5ab25lU2VsZWN0ZWQoKSB7XG4gICAgICAgIGNvbnN0IHBvcnREYXRhID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0LmZpbHRlcihcbiAgICAgICAgICAgIGQgPT4gZC5wcm9wZXJ0aWVzLm5vbkNhcHR1cmFibGUgJiYgZC5wcm9wZXJ0aWVzLm5hdGlvbiAhPT0gXCJGVFwiXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhID0gcG9ydERhdGE7XG4gICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9wb3J0cy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBfcG9ydFNpemVTZWxlY3RlZChzaXplKSB7XG4gICAgICAgIGNvbnN0IHBvcnREYXRhID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0LmZpbHRlcihkID0+IHNpemUgPT09IGQucHJvcGVydGllcy5wb3J0QmF0dGxlVHlwZSk7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhID0gcG9ydERhdGE7XG4gICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9wb3J0cy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBfY2FwdHVyZVBCUmFuZ2UoKSB7XG4gICAgICAgIGNvbnN0IGJsYWNrT3V0VGltZXMgPSBbOCwgOSwgMTBdLFxuICAgICAgICAgICAgLy8gMjQgaG91cnMgbWludXMgYmxhY2stb3V0IGhvdXJzXG4gICAgICAgICAgICBtYXhTdGFydFRpbWUgPSAyNCAtIChibGFja091dFRpbWVzLmxlbmd0aCArIDEpO1xuICAgICAgICBjb25zdCBzdGFydFRpbWVzID0gbmV3IFNldCgpO1xuICAgICAgICBjb25zdCBiZWdpbiA9IG1vbWVudCgkKFwiI3Byb3AtcGItZnJvbS1pbnB1dFwiKS52YWwoKSwgdGhpcy5fdGltZUZvcm1hdCkuaG91cigpO1xuICAgICAgICBsZXQgZW5kID0gbW9tZW50KCQoXCIjcHJvcC1wYi10by1pbnB1dFwiKS52YWwoKSwgdGhpcy5fdGltZUZvcm1hdCkuaG91cigpO1xuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiQmV0d2VlbiAlZCBhbmQgJWRcIiwgYmVnaW4sIGVuZCk7XG5cbiAgICAgICAgLy8gUmFuZ2Ugbm90IGluIGJsYWNrLW91dCByYW5nZSBvZiA5IHRvIDEwXG4gICAgICAgIGlmICghKGJsYWNrT3V0VGltZXMuaW5jbHVkZXMoYmVnaW4pICYmIGJsYWNrT3V0VGltZXMuaW5jbHVkZXMoZW5kKSAmJiBiZWdpbiA8PSBlbmQpKSB7XG4gICAgICAgICAgICBzdGFydFRpbWVzLmFkZCgwKTtcbiAgICAgICAgICAgIGlmIChlbmQgPCBiZWdpbikge1xuICAgICAgICAgICAgICAgIGVuZCArPSAyNDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSBiZWdpbiAtIDI7IGkgPD0gZW5kIC0gMzsgaSArPSAxKSB7XG4gICAgICAgICAgICAgICAgc3RhcnRUaW1lcy5hZGQoKGkgLSAxMCkgJSBtYXhTdGFydFRpbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcG9ydERhdGEgPSB0aGlzLl9wb3J0cy5wb3J0RGF0YURlZmF1bHQuZmlsdGVyKFxuICAgICAgICAgICAgZCA9PlxuICAgICAgICAgICAgICAgICFkLnByb3BlcnRpZXMubm9uQ2FwdHVyYWJsZSAmJlxuICAgICAgICAgICAgICAgIGQucHJvcGVydGllcy5uYXRpb24gIT09IFwiRlRcIiAmJlxuICAgICAgICAgICAgICAgIHN0YXJ0VGltZXMuaGFzKGQucHJvcGVydGllcy5wb3J0QmF0dGxlU3RhcnRUaW1lKVxuICAgICAgICApO1xuICAgICAgICB0aGlzLl9wb3J0cy5wb3J0RGF0YSA9IHBvcnREYXRhO1xuICAgICAgICB0aGlzLl9wb3J0cy5zaG93Q3VycmVudEdvb2QgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fcG9ydHMudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgX2ZpbHRlckNhcHR1cmVkKGJlZ2luLCBlbmQpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJCZXR3ZWVuICVzIGFuZCAlc1wiLCBiZWdpbi5mb3JtYXQoXCJkZGRkIEQgTU1NTSBZWVlZIEg6bW1cIiksIGVuZC5mb3JtYXQoXCJkZGRkIEQgTU1NTSBZWVlZIEg6bW1cIikpO1xuICAgICAgICBjb25zdCBwb3J0SWQgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuX3BvcnRzLnBiRGF0YS5wb3J0c1xuICAgICAgICAgICAgLmZpbHRlcihwb3J0ID0+IG1vbWVudChwb3J0Lmxhc3RQb3J0QmF0dGxlKS5pc0JldHdlZW4oYmVnaW4sIGVuZCwgbnVsbCwgXCIoXVwiKSlcbiAgICAgICAgICAgIC5mb3JFYWNoKHBvcnQgPT4gcG9ydElkLmFkZChwb3J0LmlkKSk7XG4gICAgICAgIGNvbnN0IHBvcnREYXRhID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0LmZpbHRlcihkID0+IHBvcnRJZC5oYXMoZC5pZCkpO1xuXG4gICAgICAgIHRoaXMuX3BvcnRzLnBvcnREYXRhID0gcG9ydERhdGE7XG4gICAgICAgIHRoaXMuX3BvcnRzLnNob3dDdXJyZW50R29vZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9wb3J0cy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBfY2FwdHVyZWRUb2RheSgpIHtcbiAgICAgICAgY29uc3Qgbm93ID0gbW9tZW50LnV0YygpO1xuICAgICAgICBsZXQgYmVnaW4gPSBtb21lbnQoKVxuICAgICAgICAgICAgLnV0YygpXG4gICAgICAgICAgICAuaG91cigxMSlcbiAgICAgICAgICAgIC5taW51dGUoMCk7XG4gICAgICAgIGlmIChub3cuaG91cigpIDwgYmVnaW4uaG91cigpKSB7XG4gICAgICAgICAgICBiZWdpbiA9IGJlZ2luLnN1YnRyYWN0KDEsIFwiZGF5XCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2ZpbHRlckNhcHR1cmVkKGJlZ2luLCBtb21lbnQudXRjKGJlZ2luKS5hZGQoMSwgXCJkYXlcIikpO1xuICAgIH1cblxuICAgIF9jYXB0dXJlZFllc3RlcmRheSgpIHtcbiAgICAgICAgY29uc3Qgbm93ID0gbW9tZW50LnV0YygpO1xuICAgICAgICBsZXQgYmVnaW4gPSBtb21lbnQoKVxuICAgICAgICAgICAgLnV0YygpXG4gICAgICAgICAgICAuaG91cigxMSlcbiAgICAgICAgICAgIC5taW51dGUoMClcbiAgICAgICAgICAgIC5zdWJ0cmFjdCgxLCBcImRheVwiKTtcbiAgICAgICAgaWYgKG5vdy5ob3VyKCkgPCBiZWdpbi5ob3VyKCkpIHtcbiAgICAgICAgICAgIGJlZ2luID0gYmVnaW4uc3VidHJhY3QoMSwgXCJkYXlcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZmlsdGVyQ2FwdHVyZWQoYmVnaW4sIG1vbWVudC51dGMoYmVnaW4pLmFkZCgxLCBcImRheVwiKSk7XG4gICAgfVxuXG4gICAgX2NhcHR1cmVkVGhpc1dlZWsoKSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRNb25kYXlPZldlZWsgPSBtb21lbnQoKVxuICAgICAgICAgICAgLnV0YygpXG4gICAgICAgICAgICAuc3RhcnRPZihcIndlZWtcIik7XG4gICAgICAgIGNvbnN0IGJlZ2luID0gY3VycmVudE1vbmRheU9mV2Vlay5ob3VyKDExKSwgLy8gdGhpcyBNb25kYXlcbiAgICAgICAgICAgIGVuZCA9IG1vbWVudChjdXJyZW50TW9uZGF5T2ZXZWVrKVxuICAgICAgICAgICAgICAgIC5hZGQoNywgXCJkYXlcIilcbiAgICAgICAgICAgICAgICAuaG91cigxMSk7IC8vIG5leHQgTW9uZGF5XG4gICAgICAgIHRoaXMuX2ZpbHRlckNhcHR1cmVkKGJlZ2luLCBlbmQpO1xuICAgIH1cblxuICAgIF9jYXB0dXJlZExhc3RXZWVrKCkge1xuICAgICAgICBjb25zdCBjdXJyZW50TW9uZGF5T2ZXZWVrID0gbW9tZW50KClcbiAgICAgICAgICAgIC51dGMoKVxuICAgICAgICAgICAgLnN0YXJ0T2YoXCJ3ZWVrXCIpO1xuICAgICAgICBjb25zdCBiZWdpbiA9IG1vbWVudChjdXJyZW50TW9uZGF5T2ZXZWVrKVxuICAgICAgICAgICAgICAgIC5zdWJ0cmFjdCg3LCBcImRheVwiKVxuICAgICAgICAgICAgICAgIC5ob3VyKDExKSwgLy8gTW9uZGF5IGxhc3Qgd2Vla1xuICAgICAgICAgICAgZW5kID0gY3VycmVudE1vbmRheU9mV2Vlay5ob3VyKDExKTsgLy8gdGhpcyBNb25kYXlcbiAgICAgICAgdGhpcy5fZmlsdGVyQ2FwdHVyZWQoYmVnaW4sIGVuZCk7XG4gICAgfVxuXG4gICAgX2NhcHR1cmVSYW5nZSgpIHtcbiAgICAgICAgY29uc3QgYmVnaW4gPSBtb21lbnQoJChcIiNwcm9wLWZyb20taW5wdXRcIikudmFsKCksIHRoaXMuX2RhdGVGb3JtYXQpLmhvdXIoMTEpLFxuICAgICAgICAgICAgZW5kID0gbW9tZW50KCQoXCIjcHJvcC10by1pbnB1dFwiKS52YWwoKSwgdGhpcy5fZGF0ZUZvcm1hdClcbiAgICAgICAgICAgICAgICAuYWRkKDEsIFwiZGF5XCIpXG4gICAgICAgICAgICAgICAgLmhvdXIoMTEpO1xuICAgICAgICB0aGlzLl9maWx0ZXJDYXB0dXJlZChiZWdpbiwgZW5kKTtcbiAgICB9XG5cbiAgICBfQ01TZWxlY3RlZCgpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBwYXJzZUludCh0aGlzLl9wcm9wQ00kLnZhbCgpLCAxMCk7XG4gICAgICAgIGxldCBwb3J0RGF0YTtcblxuICAgICAgICBpZiAodmFsdWUgIT09IDApIHtcbiAgICAgICAgICAgIHBvcnREYXRhID0gdGhpcy5fcG9ydHMucG9ydERhdGFEZWZhdWx0LmZpbHRlcihkID0+IHZhbHVlID09PSBkLnByb3BlcnRpZXMuY29ucXVlc3RNYXJrc1BlbnNpb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcG9ydERhdGEgPSB0aGlzLl9wb3J0cy5wb3J0RGF0YURlZmF1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgJChcIiNwcm9wZXJ0eURyb3Bkb3duXCIpLmRyb3Bkb3duKFwidG9nZ2xlXCIpO1xuICAgICAgICB0aGlzLl9wb3J0cy5wb3J0RGF0YSA9IHBvcnREYXRhO1xuICAgICAgICB0aGlzLl9wb3J0cy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBjbGVhck1hcCgpIHtcbiAgICAgICAgdGhpcy5fc2V0dXBDbGFuU2VsZWN0KCk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./js/port-select.js\n");

/***/ })

})