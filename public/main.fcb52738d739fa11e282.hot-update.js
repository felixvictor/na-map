webpackHotUpdate("main",{

/***/ "./js/port-select.js":
/*!***************************!*\
  !*** ./js/port-select.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PortSelect; });\n/* harmony import */ var bootstrap_select_js_bootstrap_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap-select/js/bootstrap-select */ \"../node_modules/bootstrap-select/js/bootstrap-select.js\");\n/* harmony import */ var bootstrap_select_js_bootstrap_select__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bootstrap_select_js_bootstrap_select__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment/moment */ \"../node_modules/moment/moment.js\");\n/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var moment_locale_en_gb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment/locale/en-gb */ \"../node_modules/moment/locale/en-gb.js\");\n/* harmony import */ var moment_locale_en_gb__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment_locale_en_gb__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var tempusdominus_bootstrap_4_build_js_tempusdominus_bootstrap_4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tempusdominus-bootstrap-4/build/js/tempusdominus-bootstrap-4 */ \"../node_modules/tempusdominus-bootstrap-4/build/js/tempusdominus-bootstrap-4.js\");\n/* harmony import */ var tempusdominus_bootstrap_4_build_js_tempusdominus_bootstrap_4__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tempusdominus_bootstrap_4_build_js_tempusdominus_bootstrap_4__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var tempusdominus_core_build_js_tempusdominus_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tempusdominus-core/build/js/tempusdominus-core */ \"../node_modules/tempusdominus-core/build/js/tempusdominus-core.js\");\n/* harmony import */ var tempusdominus_core_build_js_tempusdominus_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(tempusdominus_core_build_js_tempusdominus_core__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ \"./js/common.js\");\n/* harmony import */ var _analytics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./analytics */ \"./js/analytics.js\");\n/*\n\tport-select.js\n*/\n\n\n\n\n\n\n\n\nvar PortSelect =\n/*#__PURE__*/\nfunction () {\n  function PortSelect(map, ports, pbZone) {\n    this._map = map;\n    this._ports = ports;\n    this._pbZone = pbZone;\n    this._dateFormat = \"D MMM\";\n    this._timeFormat = \"HH.00\";\n    this._portNamesId = \"port-names\";\n    this._portNamesSelector = document.getElementById(this._portNamesId);\n    this._portNames$ = $(\"#\" + this._portNamesId);\n    this._buyGoodsId = \"buy-goods\";\n    this._buyGoodsSelector = document.getElementById(this._buyGoodsId);\n    this._buyGoods$ = $(\"#\" + this._portNamesId);\n    this._propNationId = \"prop-nation\";\n    this._propNationSelector = document.getElementById(this._propNationId);\n    this._propNation$ = $(\"#\" + this._propNationId);\n    this._propClanId = \"prop-clan\";\n    this._propClanSelector = document.getElementById(this._propClanId);\n    this._propClan$ = $(\"#\" + this._propClanId);\n    this._propCMId = \"prop-cm\";\n    this._propCMSelector = document.getElementById(this._propCMId);\n    this._propCM$ = $(\"#\" + this._propCMId);\n\n    this._setupSelects();\n\n    this._setupListener();\n  }\n\n  var _proto = PortSelect.prototype;\n\n  _proto._setupSelects = function _setupSelects() {\n    this._setupPortSelect();\n\n    this._setupGoodSelect();\n\n    this._setupNationSelect();\n\n    this._setupClanSelect();\n\n    this._setupCMSelect();\n  };\n\n  _proto._setupListener = function _setupListener() {\n    var _this = this;\n\n    this._portNamesSelector.classList.add(\"selectpicker\");\n\n    this._buyGoodsSelector.classList.add(\"selectpicker\");\n\n    this._propNationSelector.classList.add(\"selectpicker\");\n\n    this._propClanSelector.classList.add(\"selectpicker\");\n\n    this._propCMSelector.classList.add(\"selectpicker\");\n\n    var selectPickerDefaults = {\n      icons: {\n        time: \"far fa-clock\",\n        date: \"far fa-calendar\",\n        up: \"fas fa-arrow-up\",\n        down: \"fas fa-arrow-down\",\n        previous: \"fas fa-chevron-left\",\n        next: \"fas fa-chevron-right\",\n        today: \"far fa-calendar-check\",\n        clear: \"fas fa-trash\",\n        close: \"fas fa-times\"\n      },\n      timeZone: \"UTC\",\n      noneSelectedText: \"\",\n      dropupAuto: false\n    };\n    var selectPickerLiveSearch = JSON.parse(JSON.stringify(selectPickerDefaults));\n    selectPickerLiveSearch.liveSearch = true;\n    selectPickerLiveSearch.liveSearchPlaceholder = \"Search ...\";\n    selectPickerLiveSearch.liveSearchNormalize = true;\n    selectPickerLiveSearch.noneSelectedText = \"Move to port\";\n\n    this._portNamesSelector.addEventListener(\"change\", function (event) {\n      Object(_analytics__WEBPACK_IMPORTED_MODULE_6__[\"registerEvent\"])(\"Menu\", \"Move to port\");\n\n      _this._portSelected(event);\n    });\n\n    this._portNames$.selectpicker(selectPickerLiveSearch);\n\n    selectPickerLiveSearch.noneSelectedText = \"Select good\";\n\n    this._buyGoodsSelector.addEventListener(\"change\", function (event) {\n      Object(_analytics__WEBPACK_IMPORTED_MODULE_6__[\"registerEvent\"])(\"Menu\", \"Select good\");\n\n      _this._goodSelected(event);\n    });\n\n    this._buyGoods$.selectpicker(selectPickerLiveSearch);\n\n    selectPickerDefaults.noneSelectedText = \"Select nation\";\n\n    this._propNationSelector.addEventListener(\"change\", function (event) {\n      return _this._nationSelected(event);\n    }).selectpicker(selectPickerDefaults);\n\n    selectPickerDefaults.noneSelectedText = \"Select clan\";\n\n    this._propClanSelector.addEventListener(\"change\", function (event) {\n      return _this._clanSelected(event);\n    }).selectpicker(selectPickerDefaults);\n\n    selectPickerDefaults.noneSelectedText = \"Select\";\n\n    this._propCMSelector.addEventListener(\"change\", function (event) {\n      event.preventDefault();\n\n      _this._CMSelected(event);\n    });\n\n    this._propCM$.selectpicker(selectPickerDefaults);\n\n    $(\"#menu-prop-deep\").addEventListener(\"click\", function () {\n      return _this._depthSelected(\"deep\");\n    });\n    $(\"#menu-prop-shallow\").addEventListener(\"click\", function () {\n      return _this._depthSelected(\"shallow\");\n    });\n    $(\"#menu-prop-all\").addEventListener(\"click\", function () {\n      return _this._allSelected();\n    });\n    $(\"#menu-prop-green\").addEventListener(\"click\", function () {\n      return _this._greenZoneSelected();\n    });\n    $(\"#menu-prop-large\").addEventListener(\"click\", function () {\n      return _this._portSizeSelected(\"Large\");\n    });\n    $(\"#menu-prop-medium\").addEventListener(\"click\", function () {\n      return _this._portSizeSelected(\"Medium\");\n    });\n    $(\"#menu-prop-small\").addEventListener(\"click\", function () {\n      return _this._portSizeSelected(\"Small\");\n    });\n    $(\"#prop-pb-from\").datetimepicker({\n      format: this._timeFormat\n    });\n    $(\"#prop-pb-to\").datetimepicker({\n      format: this._timeFormat\n    });\n    $(\"#prop-pb-range\").submit(function (event) {\n      _this._capturePBRange();\n\n      $(\"#propertyDropdown\").dropdown(\"toggle\");\n      event.preventDefault();\n    });\n    $(\"#menu-prop-today\").addEventListener(\"click\", function () {\n      return _this._capturedToday();\n    });\n    $(\"#menu-prop-yesterday\").addEventListener(\"click\", function () {\n      return _this._capturedYesterday();\n    });\n    $(\"#menu-prop-this-week\").addEventListener(\"click\", function () {\n      return _this._capturedThisWeek();\n    });\n    $(\"#menu-prop-last-week\").addEventListener(\"click\", function () {\n      return _this._capturedLastWeek();\n    });\n    var portFrom = $(\"#prop-from\"),\n        portTo = $(\"#prop-to\");\n    portFrom.datetimepicker({\n      format: this._dateFormat\n    });\n    portTo.datetimepicker({\n      format: this._dateFormat,\n      useCurrent: false\n    });\n    portFrom.addEventListener(\"change.datetimepicker\", function (e) {\n      return portTo.datetimepicker(\"minDate\", e.date);\n    });\n    portTo.addEventListener(\"change.datetimepicker\", function (e) {\n      return portFrom.datetimepicker(\"maxDate\", e.date);\n    });\n    $(\"#prop-range\").submit(function (event) {\n      _this._captureRange();\n\n      $(\"#propertyDropdown\").dropdown(\"toggle\");\n      event.preventDefault();\n    }); // Adapted https://github.com/bootstrapthemesco/bootstrap-4-multi-dropdown-navbar\n\n    $(\".nav-item .dropdown-menu .bootstrap-select .dropdown-toggle\").addEventListener(\"click\", function (event) {\n      var $el = $(event.currentTarget);\n      $el.next(\".dropdown-menu\").toggleClass(\"show\");\n      $el.parent(\"li\").toggleClass(\"show\");\n      $el.parents(\"li.nav-item.dropdown.show\").addEventListener(\"hidden.bs.dropdown\", function (event2) {\n        $(event2.currentTarget).find(\"div.dropdown-menu.show\").removeClass(\"show\");\n      });\n      return false;\n    });\n    $(\".selectpicker\").val(\"default\").selectpicker(\"refresh\");\n  };\n\n  _proto._setupPortSelect = function _setupPortSelect() {\n    var _this2 = this;\n\n    var selectPorts = this._ports.portDataDefault.map(function (d) {\n      return {\n        id: d.id,\n        coord: [d.geometry.coordinates[0], d.geometry.coordinates[1]],\n        name: d.properties.name,\n        nation: _this2._ports.pbData.ports.filter(function (port) {\n          return port.id === d.id;\n        }).map(function (port) {\n          return port.nation;\n        })\n      };\n    }).sort(function (a, b) {\n      if (a.name < b.name) {\n        return -1;\n      }\n\n      if (a.name > b.name) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    var select = \"\" + selectPorts.map(function (port) {\n      return \"<option data-subtext=\\\"\" + port.nation + \"\\\" value=\\\"\" + port.coord + \"\\\" data-id=\\\"\" + port.id + \"\\\">\" + port.name + \"</option>\";\n    }).join(\"\");\n\n    this._portNamesSelector.insertAdjacentHTML(\"beforeend\", select);\n  };\n\n  _proto._setupGoodSelect = function _setupGoodSelect() {\n    var selectGoods = new Set();\n\n    function PortsPerGood() {}\n\n    PortsPerGood.prototype.add = function (goods) {\n      goods.forEach(function (good) {\n        selectGoods.add(good);\n      });\n    };\n\n    var portsPerGood = new PortsPerGood();\n\n    this._ports.portDataDefault.forEach(function (port) {\n      portsPerGood.add(port.properties.dropsTrading);\n      portsPerGood.add(port.properties.dropsNonTrading);\n      portsPerGood.add(port.properties.producesTrading);\n      portsPerGood.add(port.properties.producesNonTrading);\n    });\n\n    var select = \"\" + Array.from(selectGoods).sort().map(function (good) {\n      return \"<option>\" + good + \"</option>\";\n    }).join(\"\");\n\n    this._buyGoodsSelector.insertAdjacentHTML(\"beforeend\", select);\n  };\n\n  _proto._setupNationSelect = function _setupNationSelect() {\n    var select = \"\" + _common__WEBPACK_IMPORTED_MODULE_5__[\"nations\"].sort(function (a, b) {\n      if (a.sortName < b.sortName) {\n        return -1;\n      }\n\n      if (a.sortName > b.sortName) {\n        return 1;\n      }\n\n      return 0;\n    }).map(function (nation) {\n      return \"<option value=\\\"\" + nation.short + \"\\\">\" + nation.name + \"</option>\";\n    }).join(\"\");\n\n    this._propNationSelector.insertAdjacentHTML(\"beforeend\", select);\n  };\n\n  _proto._setupClanSelect = function _setupClanSelect() {\n    this._propClanSelector.innerHTML = \"\";\n    var clanList = new Set(),\n        portId = new Set();\n\n    this._ports.portData.forEach(function (d) {\n      return portId.add(d.id);\n    });\n\n    this._ports.pbData.ports.filter(function (d) {\n      return d.capturer && portId.has(d.id);\n    }).forEach(function (d) {\n      return clanList.add(d.capturer);\n    });\n\n    var select = \"\" + Array.from(clanList).sort().map(function (clan) {\n      return \"<option value=\\\"\" + clan + \"\\\">\" + clan + \"</option>\";\n    }).join(\"\");\n\n    if (select.length) {\n      this._propClanSelector.insertAdjacentHTML(\"beforeend\", select);\n\n      this._propClanSelector.disabled = false;\n    } else {\n      this._propClanSelector.disabled = true;\n    }\n\n    this._propClan$.selectpicker(\"val\", \"default\");\n  };\n\n  _proto._setupCMSelect = function _setupCMSelect() {\n    var _this3 = this;\n\n    var cmList = new Set();\n\n    this._ports.portData.forEach(function (d) {\n      return cmList.add(d.properties.conquestMarksPension);\n    });\n\n    cmList.forEach(function (cm) {\n      _this3._propCMSelector.insertAdjacentHTML(\"beforeend\", $(\"<option>\", {\n        value: cm,\n        text: cm\n      }));\n    });\n  };\n\n  _proto._portSelected = function _portSelected(event) {\n    var port = $(event.currentTarget).find(\":selected\");\n    var c = port.val().split(\",\");\n\n    if (c[0] === \"0\") {\n      this._ports.portData = this._ports.portDataDefault;\n      this._ports.showCurrentGood = false;\n\n      this._ports.update();\n    } else {\n      var currentPort = {\n        id: port.data(\"id\").toString(),\n        coord: {\n          x: +c[0],\n          y: +c[1]\n        }\n      };\n      this._ports.currentPort = currentPort;\n\n      if (this._pbZone._showPBZones) {\n        this._pbZone.refresh();\n\n        this._ports.showCurrentGood = false;\n\n        this._ports.update();\n      }\n\n      this._map.goToPort();\n    }\n  };\n\n  _proto._goodSelected = function _goodSelected(event) {\n    var good = $(event.currentTarget).find(\":selected\")[0].text,\n        sourcePorts = this._ports.portDataDefault.filter(function (port) {\n      return port.properties.dropsTrading.includes(good) || port.properties.dropsNonTrading.includes(good) || port.properties.producesTrading.includes(good) || port.properties.producesNonTrading.includes(good);\n    }).map(function (port) {\n      // eslint-disable-next-line prefer-destructuring,no-param-reassign\n      port.properties.isSource = true;\n      return port;\n    }),\n        consumingPorts = this._ports.portDataDefault.filter(function (port) {\n      return port.properties.consumesTrading.includes(good) || port.properties.consumesNonTrading.includes(good);\n    }).map(function (port) {\n      // eslint-disable-next-line prefer-destructuring,no-param-reassign\n      port.properties.isSource = false;\n      return port;\n    });\n\n    this._ports.showRadiusSetting = \"off\";\n    this._ports.portData = sourcePorts.concat(consumingPorts);\n    this._ports.showCurrentGood = true;\n\n    this._ports.update();\n  };\n\n  _proto._nationSelected = function _nationSelected(event) {\n    var _this4 = this;\n\n    var nationId = $(event.currentTarget).val();\n    var portData;\n\n    if (+nationId !== 0) {\n      this._nation = nationId;\n      var portId = new Set();\n\n      this._ports.pbData.ports.filter(function (port) {\n        return port.nation === _this4._nation;\n      }).forEach(function (port) {\n        return portId.add(port.id);\n      });\n\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return portId.has(d.id);\n      });\n    } else {\n      this._nation = \"\";\n      portData = this._ports.portDataDefault;\n    } // $(\"#propertyDropdown\").dropdown(\"toggle\");\n\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n\n    this._setupClanSelect();\n  };\n\n  _proto._clanSelected = function _clanSelected(event) {\n    var _this5 = this;\n\n    var clan = $(event.currentTarget).val();\n    var portData;\n\n    if (+clan !== 0) {\n      var portId = new Set();\n\n      this._ports.pbData.ports.filter(function (port) {\n        return clan === port.capturer;\n      }).forEach(function (port) {\n        return portId.add(port.id);\n      });\n\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return portId.has(d.id);\n      });\n    } else if (this._nation) {\n      var _portId = new Set();\n\n      this._ports.pbData.ports.filter(function (port) {\n        return port.nation === _this5._nation;\n      }).forEach(function (port) {\n        return _portId.add(port.id);\n      });\n\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return _portId.has(d.id);\n      });\n    } else {\n      portData = this._ports.portDataDefault;\n    } // $(\"#propertyDropdown\").dropdown(\"toggle\");\n\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._depthSelected = function _depthSelected(depth) {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return depth === \"shallow\" ? d.properties.shallow : !d.properties.shallow;\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._allSelected = function _allSelected() {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return d.properties.availableForAll;\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._greenZoneSelected = function _greenZoneSelected() {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return d.properties.nonCapturable && d.properties.nation !== \"FT\";\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._portSizeSelected = function _portSizeSelected(size) {\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return size === d.properties.portBattleType;\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._capturePBRange = function _capturePBRange() {\n    var blackOutTimes = [8, 9, 10],\n        // 24 hours minus black-out hours\n    maxStartTime = 24 - (blackOutTimes.length + 1);\n    var startTimes = new Set();\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-pb-from-input\").val(), this._timeFormat).hour();\n    var end = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-pb-to-input\").val(), this._timeFormat).hour(); // console.log(\"Between %d and %d\", begin, end);\n    // Range not in black-out range of 9 to 10\n\n    if (!(blackOutTimes.includes(begin) && blackOutTimes.includes(end) && begin <= end)) {\n      startTimes.add(0);\n\n      if (end < begin) {\n        end += 24;\n      }\n\n      for (var i = begin - 2; i <= end - 3; i += 1) {\n        startTimes.add((i - 10) % maxStartTime);\n      }\n    }\n\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return !d.properties.nonCapturable && d.properties.nation !== \"FT\" && startTimes.has(d.properties.portBattleStartTime);\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._filterCaptured = function _filterCaptured(begin, end) {\n    // console.log(\"Between %s and %s\", begin.format(\"dddd D MMMM YYYY H:mm\"), end.format(\"dddd D MMMM YYYY H:mm\"));\n    var portId = new Set();\n\n    this._ports.pbData.ports.filter(function (port) {\n      return moment_moment__WEBPACK_IMPORTED_MODULE_1___default()(port.lastPortBattle).isBetween(begin, end, null, \"(]\");\n    }).forEach(function (port) {\n      return portId.add(port.id);\n    });\n\n    var portData = this._ports.portDataDefault.filter(function (d) {\n      return portId.has(d.id);\n    });\n\n    this._ports.portData = portData;\n    this._ports.showCurrentGood = false;\n\n    this._ports.update();\n  };\n\n  _proto._capturedToday = function _capturedToday() {\n    var now = moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc();\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().hour(11).minute(0);\n\n    if (now.hour() < begin.hour()) {\n      begin = begin.subtract(1, \"day\");\n    }\n\n    this._filterCaptured(begin, moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc(begin).add(1, \"day\"));\n  };\n\n  _proto._capturedYesterday = function _capturedYesterday() {\n    var now = moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc();\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().hour(11).minute(0).subtract(1, \"day\");\n\n    if (now.hour() < begin.hour()) {\n      begin = begin.subtract(1, \"day\");\n    }\n\n    this._filterCaptured(begin, moment_moment__WEBPACK_IMPORTED_MODULE_1___default.a.utc(begin).add(1, \"day\"));\n  };\n\n  _proto._capturedThisWeek = function _capturedThisWeek() {\n    var currentMondayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().startOf(\"week\");\n    var begin = currentMondayOfWeek.hour(11),\n        // this Monday\n    end = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()(currentMondayOfWeek).add(7, \"day\").hour(11); // next Monday\n\n    this._filterCaptured(begin, end);\n  };\n\n  _proto._capturedLastWeek = function _capturedLastWeek() {\n    var currentMondayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()().utc().startOf(\"week\");\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()(currentMondayOfWeek).subtract(7, \"day\").hour(11),\n        // Monday last week\n    end = currentMondayOfWeek.hour(11); // this Monday\n\n    this._filterCaptured(begin, end);\n  };\n\n  _proto._captureRange = function _captureRange() {\n    var begin = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-from-input\").val(), this._dateFormat).hour(11),\n        end = moment_moment__WEBPACK_IMPORTED_MODULE_1___default()($(\"#prop-to-input\").val(), this._dateFormat).add(1, \"day\").hour(11);\n\n    this._filterCaptured(begin, end);\n  };\n\n  _proto._CMSelected = function _CMSelected() {\n    var value = parseInt(this._propCM.val(), 10);\n    var portData;\n\n    if (value !== 0) {\n      portData = this._ports.portDataDefault.filter(function (d) {\n        return value === d.properties.conquestMarksPension;\n      });\n    } else {\n      portData = this._ports.portDataDefault;\n    }\n\n    $(\"#propertyDropdown\").dropdown(\"toggle\");\n    this._ports.portData = portData;\n\n    this._ports.update();\n  };\n\n  _proto.clearMap = function clearMap() {\n    this._setupClanSelect();\n  };\n\n  return PortSelect;\n}();\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"../node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/port-select.js\n");

/***/ })

})