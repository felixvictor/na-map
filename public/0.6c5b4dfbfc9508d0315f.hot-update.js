webpackHotUpdate(0,{

/***/ 38:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PortDisplay; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_locale_en_gb__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_locale_en_gb___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_locale_en_gb__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(1);\n/*\n    port.js\n*/\n\n/* global d3 : false\n */\n\n\n\n\n\nvar PortDisplay =\n/*#__PURE__*/\nfunction () {\n  function PortDisplay(portData) {\n    this.portDataDefault = portData; // Shroud Cay\n\n    this.currentPort = {\n      id: \"366\",\n      coord: {\n        x: 4396,\n        y: 2494\n      }\n    };\n    this.fontSizes = {\n      initial: 30,\n      portLabel: 18,\n      pbZone: 7\n    };\n    this._zoomLevel = \"initial\";\n    this._showPBZones = false;\n    this._highlightId = null;\n    this._highlightDuration = 200;\n    this._iconSize = 50;\n    this._circleSizes = {\n      initial: 50,\n      portLabel: 20,\n      pbZone: 5\n    };\n    this._path = d3.geoPath().projection(null);\n    this._showRadius = \"taxIncome\";\n    this._taxIncomeRadius = d3.scaleSqrt().range([this._circleSizes[this._zoomLevel], this._circleSizes[this._zoomLevel] * 4]);\n    this._netIncomeRadius = d3.scaleSqrt().range([this._circleSizes[this._zoomLevel], this._circleSizes[this._zoomLevel] * 4]);\n    this.setPortData(portData);\n\n    this._setupListener();\n\n    this._setupSvg();\n\n    this._setupFlags();\n  }\n\n  var _proto = PortDisplay.prototype;\n\n  _proto._setupListener = function _setupListener() {\n    var _this = this;\n\n    $(\"#radius-action\").change(function () {\n      _this._showRadius = $(\"input[name='showRadius']:checked\").val();\n\n      _this.update();\n\n      _this.setPortData(_this.portData);\n    });\n  };\n\n  _proto._setupSvg = function _setupSvg() {\n    this._g = d3.select(\"#na-svg\").append(\"g\").classed(\"port\", true);\n    this.gText = this._g.append(\"g\");\n  };\n\n  _proto._setupFlags = function _setupFlags() {\n    var _this2 = this;\n\n    var svgDef = d3.select(\"#na-svg defs\");\n    __WEBPACK_IMPORTED_MODULE_2__common__[\"a\" /* nations */].map(function (d) {\n      return d.id;\n    }).forEach(function (nation) {\n      svgDef.append(\"pattern\").attr(\"id\", nation).attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", \"0 0 \" + _this2._iconSize + \" \" + _this2._iconSize).append(\"image\").attr(\"height\", _this2._iconSize).attr(\"width\", _this2._iconSize).attr(\"href\", \"icons/\" + nation + \".svg\");\n      svgDef.append(\"pattern\").attr(\"id\", nation + \"a\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", \"0 0 \" + _this2._iconSize + \" \" + _this2._iconSize).append(\"image\").attr(\"height\", _this2._iconSize).attr(\"width\", _this2._iconSize).attr(\"href\", \"icons/\" + nation + \"a.svg\");\n    });\n  };\n\n  _proto._updateCircles = function _updateCircles() {\n    var _this3 = this;\n\n    function showDetails(d, i, nodes) {\n      function getText(portProperties) {\n        var port = {\n          name: portProperties.name,\n          icon: portProperties.availableForAll ? portProperties.nation + \"a\" : portProperties.nation,\n          availableForAll: portProperties.availableForAll,\n          depth: portProperties.shallow ? \"Shallow\" : \"Deep\",\n          countyCapital: portProperties.countyCapital,\n          nonCapturable: portProperties.nonCapturable,\n          // eslint-disable-next-line no-nested-ternary\n          captured: portProperties.countyCapital ? \" county capital\" : portProperties.capturer ? \" captured by \" + portProperties.capturer + \" \" + __WEBPACK_IMPORTED_MODULE_0_moment___default()(portProperties.lastPortBattle).fromNow() : \"\",\n          // eslint-disable-next-line no-nested-ternary\n          pbTimeRange: portProperties.nonCapturable ? \"\" : !portProperties.portBattleStartTime ? \"11.00\\u202F\\u2013\\u202F8.00\" : (portProperties.portBattleStartTime + 10) % 24 + \".00\\u202F\\u2013\\u202F\" + (portProperties.portBattleStartTime + 13) % 24 + \".00\",\n          brLimit: Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"k\" /* thousandsWithBlanks */])(portProperties.brLimit),\n          conquestMarksPension: portProperties.conquestMarksPension,\n          taxIncome: Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"k\" /* thousandsWithBlanks */])(portProperties.taxIncome),\n          portTax: portProperties.portTax * 100,\n          netIncome: Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"e\" /* formatCoord */])(portProperties.netIncome),\n          tradingCompany: portProperties.tradingCompany ? \", trading company level\\u202F\" + portProperties.tradingCompany : \"\",\n          laborHoursDiscount: portProperties.laborHoursDiscount ? \", labor hours discount\" : \"\"\n        };\n\n        switch (portProperties.portBattleType) {\n          case \"Large\":\n            port.pbType = \"1<sup>st</sup>\";\n            break;\n\n          case \"Medium\":\n            port.pbType = \"4<sup>th</sup>\";\n            break;\n\n          default:\n            port.pbType = \"6<sup>th</sup>\";\n            break;\n        }\n\n        return port;\n      }\n\n      function tooltipData(portProperties) {\n        var port = getText(portProperties);\n        var h = \"<table><tbody<tr><td><i class=\\\"flag-icon \" + port.icon + \"\\\"></i></td>\";\n        h += \"<td><span class=\\\"port-name\\\">\" + port.name + \"</span>\";\n        h += port.availableForAll ? \" (accessible to all nations)\" : \"\";\n        h += \"</td></tr></tbody></table>\";\n        h += \"<p>\" + port.depth + \" water port \" + port.captured + \"<br>\";\n\n        if (!port.nonCapturable) {\n          h += \"Port battle \" + port.pbTimeRange + \", \" + port.brLimit + \" BR, \";\n          h += port.pbType + \"\\u202Frate AI\";\n          h += \", \" + port.conquestMarksPension + \"\\u202Fconquest point\";\n          h += port.conquestMarksPension > 1 ? \"s\" : \"\";\n          h += \"<br>Tax income \" + port.taxIncome + \" (\" + port.portTax + \"\\u202F%), net income \" + port.netIncome;\n          h += port.tradingCompany;\n          h += port.laborHoursDiscount;\n        } else {\n          h += \"Not capturable\";\n          h += \"<br>\" + port.portTax + \"\\u202F% tax\";\n        }\n\n        h += \"</p>\";\n        h += \"<table class='table table-sm'>\";\n\n        if (portProperties.producesTrading.length || portProperties.producesNonTrading.length) {\n          h += \"<tr><td>Produces</td><td>\";\n\n          if (portProperties.producesNonTrading.length) {\n            h += \"<span class=\\\"non-trading\\\">\" + portProperties.producesNonTrading.join(\", \") + \"</span>\";\n\n            if (portProperties.producesTrading.length) {\n              h += \"<br>\";\n            }\n          }\n\n          if (portProperties.producesTrading.length) {\n            h += \"\" + portProperties.producesTrading.join(\", \");\n          }\n\n          h += \"</td></tr>\";\n        }\n\n        if (portProperties.dropsTrading.length || portProperties.dropsNonTrading.length) {\n          h += \"<tr><td>Drops</td><td>\";\n\n          if (portProperties.dropsNonTrading.length) {\n            h += \"<span class=\\\"non-trading\\\">\" + portProperties.dropsNonTrading.join(\", \") + \"</span>\";\n\n            if (portProperties.dropsTrading.length) {\n              h += \"<br>\";\n            }\n          }\n\n          if (portProperties.dropsTrading.length) {\n            h += \"\" + portProperties.dropsTrading.join(\", \");\n          }\n\n          h += \"</td></tr>\";\n        }\n\n        if (portProperties.consumesTrading.length || portProperties.consumesNonTrading.length) {\n          h += \"<tr><td>Consumes</td><td>\";\n\n          if (portProperties.consumesNonTrading.length) {\n            h += \"<span class=\\\"non-trading\\\">\" + portProperties.consumesNonTrading.join(\", \") + \"</span>\";\n\n            if (portProperties.consumesTrading.length) {\n              h += \"<br>\";\n            }\n          }\n\n          if (portProperties.consumesTrading.length) {\n            h += \"\" + portProperties.consumesTrading.join(\", \");\n          }\n\n          h += \"</td></tr>\";\n        }\n\n        h += \"</table>\";\n        return h;\n      }\n\n      var port = d3.select(nodes[i]);\n      port.attr(\"data-toggle\", \"tooltip\"); // eslint-disable-next-line no-underscore-dangle\n\n      $(port._groups[0]).tooltip({\n        delay: {\n          show: this._highlightDuration,\n          hide: this._highlightDuration\n        },\n        html: true,\n        placement: \"auto\",\n        title: tooltipData(d.properties),\n        trigger: \"manual\"\n      }).tooltip(\"show\");\n    }\n\n    function hideDetails(d, i, nodes) {\n      // eslint-disable-next-line no-underscore-dangle\n      $(d3.select(nodes[i])._groups[0]).tooltip(\"hide\");\n    }\n\n    var circleSize = this._circleSizes[this._zoomLevel]; // Data join\n\n    var circleUpdate = this._g.selectAll(\"g.port\").data(this.portData, function (d) {\n      return d.id;\n    }); // Remove old circles\n\n\n    circleUpdate.exit().remove(); // Update kept circles\n    // circleUpdate; // not needed\n    // Add new circles\n    // eslint-disable-next-line no-unused-vars\n\n    var circleEnter = circleUpdate.enter().append(\"g\").classed(\"port\", true).attr(\"transform\", function (d) {\n      return \"translate(\" + _this3._path.centroid(d) + \")\";\n    });\n\n    if (this._showRadius) {\n      if (this._showRadius === \"taxIncome\") {\n        circleEnter.append(\"circle\").attr(\"class\", \"bubble pos\").attr(\"display\", function (d) {\n          return d.properties.nonCapturable ? \"none\" : \"inherit\";\n        }).attr(\"r\", function (d) {\n          return _this3._taxIncomeRadius(Math.abs(d.properties.taxIncome));\n        });\n      } else {\n        circleEnter.append(\"circle\").attr(\"class\", function (d) {\n          return d.properties.netIncome < 0 ? \"bubble neg\" : \"bubble pos\";\n        }).attr(\"display\", function (d) {\n          return d.properties.nonCapturable ? \"none\" : \"inherit\";\n        }).attr(\"r\", function (d) {\n          return _this3._netIncomeRadius(Math.abs(d.properties.netIncome));\n        });\n      }\n    }\n\n    circleEnter.append(\"circle\").attr(\"fill\", function (d) {\n      return \"url(#\" + (d.properties.availableForAll ? d.properties.nation + \"a\" : d.properties.nation) + \")\";\n    }).on(\"click\", showDetails).on(\"mouseout\", hideDetails); // Apply to both old and new\n\n    circleUpdate.merge(circleEnter).selectAll(\"g.port\").attr(\"r\", function (d) {\n      return d.id === _this3._highlightId ? circleSize * 2 : circleSize;\n    });\n  };\n\n  _proto.updateTexts = function updateTexts() {\n    var _this4 = this;\n\n    if (this._zoomLevel === \"initial\") {\n      this.gText.attr(\"display\", \"none\");\n    } else {\n      this.gText.attr(\"display\", \"inherit\");\n      var circleSize = this._circleSizes[this._zoomLevel],\n          fontSize = this.fontSizes[this._zoomLevel]; // Data join\n\n      var textUpdate = this.gText.selectAll(\"text\").data(this.portData, function (d) {\n        return d.id;\n      }); // Remove old text\n\n      textUpdate.exit().remove(); // Update kept texts\n      // textUpdate; // not needed\n      // Add new texts\n\n      var textEnter = textUpdate.enter().append(\"text\").text(function (d) {\n        return d.properties.name;\n      });\n      var deltaY = circleSize + fontSize;\n      var deltaY2 = circleSize * 2 + fontSize * 2; // Apply to both old and new\n\n      textUpdate.merge(textEnter).attr(\"x\", function (d) {\n        if (_this4._zoomLevel !== \"pbZone\") {\n          return d.geometry.coordinates[0];\n        }\n\n        return _this4._showPBZones && d.id === _this4.currentPort.id ? d.geometry.coordinates[0] + d.properties.dx : d.geometry.coordinates[0];\n      }).attr(\"y\", function (d) {\n        if (_this4._zoomLevel !== \"pbZone\") {\n          return d.id === _this4._highlightId ? d.geometry.coordinates[1] + deltaY2 : d.geometry.coordinates[1] + deltaY;\n        }\n\n        return _this4._showPBZones && d.id === _this4.currentPort.id ? d.geometry.coordinates[1] + d.properties.dy : d.geometry.coordinates[1] + deltaY;\n      }).attr(\"font-size\", function (d) {\n        return d.id === _this4._highlightId ? fontSize * 2 + \"px\" : fontSize + \"px\";\n      }).attr(\"text-anchor\", function (d) {\n        if (_this4._showPBZones && _this4._zoomLevel === \"pbZone\" && d.id === _this4.currentPort.id) {\n          return d.properties.dx < 0 ? \"end\" : \"start\";\n        }\n\n        return \"middle\";\n      });\n    }\n  };\n\n  _proto.update = function update() {\n    this.updateTexts();\n\n    this._updateCircles();\n  };\n\n  _proto.setHighlightId = function setHighlightId(highlightId) {\n    this._highlightId = highlightId;\n  };\n\n  _proto.setPortData = function setPortData(portData) {\n    this.portData = portData;\n    var minTaxIncome = d3.min(portData, function (d) {\n      return Math.abs(d.properties.taxIncome);\n    }),\n        maxTaxIncome = d3.max(portData, function (d) {\n      return Math.abs(d.properties.taxIncome);\n    }),\n        minNetIncome = d3.min(portData, function (d) {\n      return Math.abs(d.properties.netIncome);\n    }),\n        maxNetIncome = d3.max(portData, function (d) {\n      return Math.abs(d.properties.netIncome);\n    });\n\n    this._taxIncomeRadius.domain([minTaxIncome, maxTaxIncome]);\n\n    this._netIncomeRadius.domain([minNetIncome, maxNetIncome]);\n  };\n\n  _proto.setCurrentPort = function setCurrentPort(id, x, y) {\n    this.currentPort = {\n      id: id,\n      coord: {\n        x: x,\n        y: y\n      }\n    };\n  };\n\n  _proto.setZoomLevel = function setZoomLevel(zoomLevel) {\n    this._zoomLevel = zoomLevel;\n  };\n\n  _proto.transform = function transform(_transform) {\n    this._g.attr(\"transform\", _transform);\n  };\n\n  _proto.clearMap = function clearMap() {\n    this.portData = this.portDataDefault;\n    this.update();\n  };\n\n  return PortDisplay;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///38\n");

/***/ })

})