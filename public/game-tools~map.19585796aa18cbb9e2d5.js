(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"0lY5":function(t,e,a){"use strict";(function(t){a.d(e,"n",function(){return n}),a.d(e,"o",function(){return p}),a.d(e,"m",function(){return h}),a.d(e,"p",function(){return d}),a.d(e,"r",function(){return c}),a.d(e,"q",function(){return l}),a.d(e,"s",function(){return m}),a.d(e,"u",function(){return u}),a.d(e,"C",function(){return b}),a.d(e,"w",function(){return g}),a.d(e,"e",function(){return _}),a.d(e,"f",function(){return D}),a.d(e,"g",function(){return f}),a.d(e,"j",function(){return $}),a.d(e,"k",function(){return w}),a.d(e,"v",function(){return C}),a.d(e,"a",function(){return v}),a.d(e,"h",function(){return S}),a.d(e,"B",function(){return j}),a.d(e,"l",function(){return O}),a.d(e,"x",function(){return k}),a.d(e,"c",function(){return x}),a.d(e,"t",function(){return B}),a.d(e,"A",function(){return y}),a.d(e,"b",function(){return T}),a.d(e,"d",function(){return P}),a.d(e,"y",function(){return R}),a.d(e,"z",function(){return A}),a.d(e,"i",function(){return M});a("MYxt"),a("Z8gF");var s=a("cOqG"),i=a("wbYc");const r=Object(s.b)({decimal:".",thousands:" ",grouping:[3],currency:[""," reals"],percent:" %"}),o=Object(s.c)(",.0",1e3),n=function(t,e){return void 0===e&&(e=2),r.format(`,.${e}~r`)(t).replace("-","− ")},p=function(t,e){return void 0===e&&(e=2),r.format(`.${e}f`)(t).replace("-","− ").replace(".00",'<span class="hidden">.00</span>').replace(/\.(\d)0/g,'.$1<span class="hidden">0</span>')},h=t=>o(-1*t).replace("-","− ").replace("k"," k"),d=t=>r.format(",d")(t).replace("-","− "),c=t=>r.format(",.2s")(t).replace(".0","").replace("M"," ᴍ").replace("k"," k").replace("-","− "),l=function(t,e){return void 0===e&&(e=1),r.format(`.${e}%`)(t).replace(".0","").replace("-","− ")},m=t=>r.format("+.1%")(t).replace(".0","").replace("-","− ").replace("+","＋ ");function u(t,e){void 0===e&&(e=!0);const a=["th","st","nd","rd"],s=t%100,i=a[(s-20)%10]||a[s]||a[0];return t+(e?`<span class="super">${i}</span>`:`${i}`)}const b=t=>(function(t,e){return void 0===e&&(e=0),Number(`${Math.round(`${t}e${e}`)}e-${e}`)})(t,3);function g(t){return 0===Object.getOwnPropertyNames(t).length&&t.constructor===Object}const _=["N","N⅓NE","N⅔NE","NE","E⅔NE","E⅓NE","E","E⅓SE","E⅔SE","SE","S⅔SE","S⅓SE","S","S⅓SW","S⅔SW","SW","W⅔SW","W⅓SW","W","W⅓NW","W⅔NW","NW","N⅔NW","N⅓NW"],D=t=>{const e=360/_.length;return _.indexOf(t)*e},f=t=>{const e=360/_.length,a=Math.floor(t/e+.5);return _[a%_.length]},$=function(t,e){let a;return void 0===e&&(e=!1),`<${e?"tspan":"span"} class="caps">${a=Number.isNaN(Number(t))?t:f(+t)}</${e?"tspan":"span"}>`},w=function(t,e){let a,s;return void 0===e&&(e=!1),Number.isNaN(Number(t))?s=D(a=t)%360:a=f(s=+t),`<${e?"tspan":"span"} class="caps">${a}</${e?"tspan":"span"}> (${s}°)`},C=e=>{const a=f(t(`#${e}`).roundSlider("getValue"));let s;return s=Number.isNaN(Number(a))?D(a):+a},v=(t,e,a,s)=>{const i=Math.min.apply(Math,[e,a]),r=Math.max.apply(Math,[e,a]);return s?t>=i&&t<=r:t>i&&t<r},S=t=>Math.PI/180*(t-90),j=(t,e)=>{let a=Math.atan2(e.y-t.y,e.x-t.x),s=(t=>180*t/Math.PI)(a-=Math.PI/2);return s<0&&(s+=360),s},O=(t,e)=>Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2),k=t=>2**Math.round(Math.log2(t));function x(t){return t.status>=200&&t.status<300?Promise.resolve(t):Promise.reject(new Error(t.statusText))}const B=t=>t.json(),y=t=>{console.error("Fetch request failed --\x3e",t)},T=t=>t.charAt(0).toUpperCase()+t.slice(1);function P(t,e,a){if(void 0===a&&(a=!0),e<2)return[t];const s=t.length,i=[];let r,o=0;if(s%e==0)for(r=Math.floor(s/e);o<s;)i.push(t.slice(o,o+=r));else if(a)for(;o<s;)r=Math.ceil((s-o)/e--),i.push(t.slice(o,o+=r));else{for(e-=1,s%(r=Math.floor(s/e))==0&&(r-=1);o<r*e;)i.push(t.slice(o,o+=r));i.push(t.slice(r*e))}return i}function R(t){let e=t.elem,a=t.radius;const s=Math.round(.8*a),r=Array(24).fill().map((t,e)=>f(15*e)),o=Object(i.scaleBand)().range([-7.5,352.5]).domain(r).align(0);e.append("circle").attr("r",s).style("stroke-width","3px");const n=e.append("text"),p=e.selectAll("g").data(r).enter().append("g").attr("transform",t=>`rotate(${Math.round(o(t)+o.bandwidth()/2-90)})translate(${s},0)`);p.filter((t,e)=>e%3!=0).append("line").attr("x2",9),p.filter((t,e)=>e%3==0).append("text").attr("transform",t=>{let e=Math.round(o(t)+o.bandwidth()/2),a="";n.text(t);const s=n.node().getBBox(),i=s.height,r=s.width;return e>=0&&e<=45||315===e?(e=90,a=`0,-${i/2}`):90===e?(e=0,a=`${r/2+3},0`):270===e?(e=180,a=`-${r/2+3},0`):(e=-90,a=`0,${i/2+3+2}`),`rotate(${e})translate(${a})`}).text(t=>t),n.remove()}function A(t){let e=t.elem,a=t.radius;const s=Math.round(.8*a),r=Array(24).fill().map((t,e)=>f(15*e)),o=Object(i.scaleBand)().range([-7.5,352.5]).domain(r).align(0);e.append("circle").attr("r",s).style("stroke-width","1.5px");e.selectAll("line").data(r).enter().append("line").attr("x2",(t,e)=>e%3!=0?2:e%6!=0?4:6).attr("transform",t=>`rotate(${Math.round(o(t)+o.bandwidth()/2)})translate(${s},0)`)}const M=t=>`<span class="caps">${t}</span>`}).call(this,a("xeH2"))},Av7d:function(t,e,a){"use strict";(function(t){a.d(e,"m",function(){return m}),a.d(e,"n",function(){return u}),a.d(e,"o",function(){return b}),a.d(e,"p",function(){return g}),a.d(e,"w",function(){return _}),a.d(e,"r",function(){return D}),a.d(e,"q",function(){return f}),a.d(e,"x",function(){return $}),a.d(e,"t",function(){return w}),a.d(e,"v",function(){return C}),a.d(e,"u",function(){return v}),a.d(e,"s",function(){return S}),a.d(e,"a",function(){return j}),a.d(e,"b",function(){return O}),a.d(e,"c",function(){return k}),a.d(e,"d",function(){return x}),a.d(e,"e",function(){return B}),a.d(e,"f",function(){return y}),a.d(e,"g",function(){return T}),a.d(e,"h",function(){return P}),a.d(e,"i",function(){return R}),a.d(e,"j",function(){return A}),a.d(e,"k",function(){return M}),a.d(e,"l",function(){return W});var s=a("nUlG"),i=a("0lY5");const r=-.00499866779363828,o=-2.1464254980645e-7,n=4096.88635151897,p=4096.90282787469,h=-200.053302087577,d=-.00859027897636011,c=819630.836437126,l=-819563.745651571,m=(t,e)=>r*t+o*e+n,u=(t,e)=>o*t-r*e+p,b=(t,e)=>h*t+d*e+c,g=(t,e)=>d*t-h*e+l,_=[{id:0,short:"NT",name:"Neutral",sortName:"Neutral"},{id:1,short:"PR",name:"Pirates",sortName:"Pirates"},{id:2,short:"ES",name:"España",sortName:"España"},{id:3,short:"FR",name:"France",sortName:"France"},{id:4,short:"GB",name:"Great Britain",sortName:"Great Britain"},{id:5,short:"VP",name:"Verenigde Provinciën",sortName:"Verenigde Provinciën"},{id:6,short:"DK",name:"Danmark-Norge",sortName:"Danmark-Norge"},{id:7,short:"SE",name:"Sverige",sortName:"Sverige"},{id:8,short:"US",name:"United States",sortName:"United States"},{id:9,short:"FT",name:"Free Town",sortName:"Free Town"},{id:10,short:"RU",name:"Russian Empire",sortName:"Russian Empire"},{id:11,short:"DE",name:"Kingdom of Prussia",sortName:"Prussia"},{id:12,short:"PL",name:"Commonwealth of Poland",sortName:"Poland"}],D=16,f=16,$=390;function w(t,e){const a={x:b(t.x,t.y),y:g(t.x,t.y)},s={x:b(e.x,e.y),y:g(e.x,e.y)};return Object(i.l)(a,s)/(2.63*$)}function C(t,e,a,i){void 0===a&&(a="lg"),void 0===i&&(i="Close");const r=Object(s.select)("#modal-section").append("div").attr("id",t).attr("class","modal").attr("tabindex","-1").attr("role","dialog").attr("aria-labelledby",`title-${t}`).attr("aria-hidden","true").append("div").attr("class",`modal-dialog${"lg"===a||"sm"===a?` modal-${a}`:""}`).attr("role","document").append("div").attr("class","modal-content");r.append("header").attr("class","modal-header").append("h5").attr("class","modal-title").attr("id",`title-${t}`).html(e),r.append("div").attr("class","modal-body"),r.append("footer").attr("class","modal-footer").append("button").text(i).attr("type","button").attr("class","btn btn-secondary").attr("data-dismiss","modal")}function v(e){t(`#${e} .dropdown-menu .bootstrap-select .dropdown-toggle`).on("click",e=>{const a=t(e.currentTarget);return a.next(".dropdown-menu").toggleClass("show"),a.parent("li").toggleClass("show"),a.parents("li.nav-item.dropdown.show").on("hidden.bs.dropdown",e=>{t(e.currentTarget).find(".dropdown-menu.show").not(".inner").removeClass("show")}),!1}),t(`#${e} div.dropdown.bootstrap-select`).on("hidden",e=>{t(e.currentTarget).find(".dropdown-menu.show").not(".inner").removeClass("show")})}const S=t=>`${t} real${+t>1?"s":""}`,j="Yet another map with in-game map, F11 coordinates, resources, ship and wood comparison. Port data is updated constantly from twitter and daily after maintenance.",O="Naval Action map",k="7.2.1",x=5,B="#b5b8a9",y="#6a7153",T="#575e42",P="#6ca87a",R="#4f8e5d",A="#b87077",M="#a0535a",W="#f3eeee"}).call(this,a("xeH2"))},iSiJ:function(t,e,a){"use strict";(function(t){a.d(e,"a",function(){return w});a("asZ9"),a("W1QL");var s=a("/Cyf"),i=a("BfWa"),r=a("yw3p"),o=a("wbYc"),n=a("nUlG"),p=a("aBO9"),h=a("0lY5"),d=a("f4w0"),c=a("pFgi"),l=a("Av7d");const m=24,u=2*Math.PI/m,b=500,g=400,_=4;class D{constructor(t,e){this._id=t,this._shipData=e,this._select=`#ship-compare-${this._id}`,this._setupSvg(),this._g=Object(n.select)(this._select).select("g"),this._setCompass()}_setupSvg(){const t=Object(n.select)(this.select);Object(n.select)(`${this.select} svg`).remove(),t.append("svg").attr("width",this.shipData.svgWidth).attr("height",this.shipData.svgHeight).attr("class","profile").attr("fill","none").append("g").attr("transform",`translate(${this.shipData.svgWidth/2}, ${this.shipData.svgHeight/2})`),Object(n.select)(`${this.select} div`).remove(),t.append("div").classed("block",!0)}_setCompass(){const t=new Array(m/2);t.fill(1,0);const e=Object(p.f)().sort(null).value(1)(t),a=Object(p.a)().outerRadius(this.shipData.radiusScaleAbsolute(12)).innerRadius(this.shipData.innerRadius);this.g.selectAll(".compass-arc").data(e).enter().append("g").attr("class","compass-arc").append("path").attr("d",a),this.g.append("line").attr("x1",0).attr("y1",-160).attr("x2",0).attr("y2",-79).attr("marker-end","url(#course-arrow)")}static pd(t){let e=`<span class="badge badge-white">${t[0]} / `;return t[1]?e+=`${t[1]}`:e+="–",e+=" pd</span>"}static getCannonsPerDeck(t,e){let a=`${e[0]} ${D.pd(t[0])}`,s="";for(let i=1;i<4;i+=1)e[i]?a=`${e[i]} ${D.pd(t[i])} <br>${a}`:s=`${s}<br>`;return[a,s]}static getText(t){let e=0;function a(t){return`<div class="row small ${(e+=1)%2?"light":""}"><div class="col-3">${t}</div>`}function s(e,a,s){void 0===s&&(s=6);let i="",r="";if("cannonsPerDeck"===e){var o=t[e];i=o[0],r=`<br>${r=o[1]}`}else i=""!==e?t[e]:"";return`<div class="col-${s}">${i}<br><span class="des">${a}</span>${r}</div>`}let i="";return i+=a(t.shipRating),i+='<div class="col-9"><div class="row no-gutters">',i+=s("battleRating","Battle rating"),i+=s("guns","Cannons"),i+=s("upgradeXP","Knowledge XP"),i+=s("waterlineHeight","Water line"),i+="</div></div></div>",i+=a(t.decks),i+='<div class="col-9"><div class="row no-gutters">',i+=s("cannonsPerDeck","Gun decks"),i+=s("firezoneHorizontalWidth","Firezone horizontal width"),i+="</div></div></div>",i+=a("Broadside (pd)"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("cannonBroadside","Cannons"),i+=s("carroBroadside","Carronades"),i+="</div></div></div>",i+=a("Chasers"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("gunsFront","Bow"),i+=s("gunsBack","Stern"),i+="</div></div></div>",i+=a("Speed"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("maxSpeed","Maximum"),i+=s("",""),i+=s("acceleration","Acceleration"),i+=s("deceleration","Deceleration"),i+=s("maxTurningSpeed","Turn speed"),i+=s("halfturnTime","Rudder half time"),i+="</div></div></div>",i+=a('Armour <span class="badge badge-white">Thickness</span>'),i+='<div class="col-9"><div class="row no-gutters">',i+=s("sideArmor","Sides"),i+=s("structure","Hull"),i+=s("frontArmor","Bow"),i+=s("backArmor","Stern"),i+=s("pump","Pump"),i+=s("rudder","Rudder"),i+="</div></div></div>",i+=a('Masts <span class="badge badge-white">Thickness</span>'),i+='<div class="col-9"><div class="row no-gutters">',i+=s("sails","Sails"),i+=s("mastBottomArmor","Bottom"),i+=s("mastMiddleArmor","Middle"),i+=s("mastTopArmor","Top"),i+="</div></div></div>",i+=a("Crew"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("minCrew","Minimum",4),i+=s("sailingCrew","Sailing",4),i+=s("maxCrew","Maximum",4),i+="</div></div></div>",i+=a("Resistance"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("fireResistance","Fire",3),i+=s("leakResistance","Leaks",3),i+=s("crewProtection","Crew Protection",6),i+="</div></div></div>",i+=a("Repairs needed"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("hullRepair","Hull",4),i+=s("rigRepair","Rig",4),i+=s("rumRepair","Rum",4),i+="</div></div></div>",i+=a("Repair time"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("sidesRepair","Sides",4),i+=s("structureRepair","Hull",4),i+=s("bowRepair","Bow",4),i+=s("sternRepair","Stern",4),i+=s("sailsRepair","Sails",4),i+=s("rudderRepair","Rudder",4),i+="</div></div></div>",i+=a("Hold"),i+='<div class="col-9"><div class="row no-gutters">',i+=s("maxWeight","Tons"),i+=s("holdSize","Cargo slots"),i+="</div></div></div>",i+="</div>"}get id(){return this._id}get shipData(){return this._shipData}get select(){return this._select}get g(){return this._g}}class f extends D{constructor(t,e,a){super(t,a),this._shipData=e,this._shipCompareData=a,this._setBackground(),this._setBackgroundGradient(),this._drawProfile(),this._printText()}_setBackground(){const t=Object(p.a)().outerRadius(t=>this.shipCompareData.radiusScaleAbsolute(t)+2).innerRadius(t=>this.shipCompareData.radiusScaleAbsolute(t)+1).startAngle(-Math.PI/2).endAngle(Math.PI/2),e=[12,8,4,0],a=["12 knots","8 knots","4 knots","0 knots"];this.g.selectAll(".circle").data(e).enter().append("circle").attr("class","knots-circle").attr("r",t=>this.shipCompareData.radiusScaleAbsolute(t)),this.g.selectAll(".label").data(e).enter().append("path").attr("d",t).attr("id",(t,e)=>`tick${e}`),this.g.selectAll(".label").data(e).enter().append("text").attr("class","knots-text").append("textPath").attr("href",(t,e)=>`#tick${e}`).text((t,e)=>a[e]).attr("startOffset","16%")}_setBackgroundGradient(){const t=Object(o.scaleLinear)().domain([this.shipData.speed.min,this.shipData.speed.max]).range([0,this.shipCompareData.svgWidth]),e=t.domain();e[2]=e[1]-e[0];const a=[];for(let t=0;t<30;t+=1)a.push(t*e[2]/29+e[0]);this.g.append("defs").append("radialGradient").attr("id","gradient").attr("cx",.5).attr("cy",.25).attr("r",.5).selectAll("stop").data(Object(s.e)(30)).enter().append("stop").attr("offset",(e,s)=>t(a[s])/this.shipCompareData.svgWidth).attr("stop-color",(t,e)=>this.shipCompareData.colorScale(a[e]))}_drawProfile(){const t=Object(p.f)().sort(null).value(1)(this.shipData.speedDegrees),e=p.d,a=Object(p.g)().angle((t,e)=>e*u).radius(t=>this.shipCompareData.radiusScaleAbsolute(t.data)).curve(e),s=this.g.append("path").classed("base",!0),i=this.g.append("g").classed("markers",!0);s.attr("d",a(t)),i.selectAll("circle").data(t).enter().append("circle").attr("r",5).attr("cy",(t,e)=>Math.cos(e*u)*-this.shipCompareData.radiusScaleAbsolute(t.data)).attr("cx",(t,e)=>Math.sin(e*u)*this.shipCompareData.radiusScaleAbsolute(t.data)).attr("fill",t=>this.shipCompareData.colorScale(t.data)).append("title").text(t=>`${Math.round(10*t.data)/10} knots`)}_printText(){const e=D.getCannonsPerDeck(this.shipData.deckClassLimit,this.shipData.gunsPerDeck),a={shipRating:`${Object(h.u)(this.shipData.class)} rate`,battleRating:this.shipData.battleRating,guns:this.shipData.guns,decks:`${this.shipData.decks} deck${this.shipData.decks>1?"s":""}`,additionalRow:`${this.shipData.decks<4?"<br> ":""}`,cannonsPerDeck:e,cannonBroadside:Object(h.p)(this.shipData.broadside.cannons),carroBroadside:Object(h.p)(this.shipData.broadside.carronades),gunsFront:this.shipData.gunsPerDeck[4],limitFront:this.shipData.deckClassLimit[4],gunsBack:this.shipData.gunsPerDeck[5],limitBack:this.shipData.deckClassLimit[5],firezoneHorizontalWidth:this.shipData.ship.firezoneHorizontalWidth,waterlineHeight:Object(h.n)(this.shipData.ship.waterlineHeight),maxSpeed:Object(h.n)(this.shipData.speed.max,3),acceleration:Object(h.n)(this.shipData.ship.acceleration),deceleration:Object(h.n)(this.shipData.ship.deceleration),maxTurningSpeed:Object(h.n)(this.shipData.rudder.turnSpeed),halfturnTime:Object(h.n)(this.shipData.rudder.halfturnTime),sideArmor:`${Object(h.p)(this.shipData.sides.armour)} <span class="badge badge-white">${Object(h.p)(this.shipData.sides.thickness)}</span>`,frontArmor:`${Object(h.p)(this.shipData.bow.armour)} <span class="badge badge-white">${Object(h.p)(this.shipData.bow.thickness)}</span>`,pump:Object(h.p)(this.shipData.pump.armour),sails:Object(h.p)(this.shipData.sails.armour),structure:Object(h.p)(this.shipData.structure.armour),backArmor:`${Object(h.p)(this.shipData.stern.armour)} <span class="badge badge-white">${Object(h.p)(this.shipData.stern.thickness)}</span>`,rudder:`${Object(h.p)(this.shipData.rudder.armour)} <span class="badge badge-white">${Object(h.p)(this.shipData.rudder.thickness)}</span>`,minCrew:Object(h.p)(this.shipData.crew.min),maxCrew:Object(h.p)(this.shipData.crew.max),sailingCrew:Object(h.p)(this.shipData.crew.sailing),maxWeight:Object(h.p)(this.shipData.maxWeight),holdSize:Object(h.p)(this.shipData.holdSize),upgradeXP:Object(h.p)(this.shipData.upgradeXP),sternRepair:Object(h.p)(this.shipData.repairTime.stern),bowRepair:Object(h.p)(this.shipData.repairTime.bow),sidesRepair:Object(h.p)(this.shipData.repairTime.sides),rudderRepair:Object(h.p)(this.shipData.repairTime.rudder),sailsRepair:Object(h.p)(this.shipData.repairTime.sails),structureRepair:Object(h.p)(this.shipData.repairTime.structure),hullRepair:`${Object(h.p)(this.shipData.sides.armour/b)}`,rigRepair:`${Object(h.p)(this.shipData.sails.armour/g)}`,rumRepair:`${Object(h.p)(this.shipData.crew.max/_)}`,fireResistance:Object(h.p)(this.shipData.resistance.fire),leakResistance:Object(h.p)(this.shipData.resistance.leaks),crewProtection:Object(h.p)(this.shipData.resistance.crew),mastBottomArmor:`${Object(h.p)(this.shipData.mast.bottomArmour)} <span class="badge badge-white">${Object(h.p)(this.shipData.mast.bottomThickness)}</span>`,mastMiddleArmor:`${Object(h.p)(this.shipData.mast.middleArmour)} <span class="badge badge-white">${Object(h.p)(this.shipData.mast.middleThickness)}</span>`,mastTopArmor:`${Object(h.p)(this.shipData.mast.topArmour)} <span class="badge badge-white">${Object(h.p)(this.shipData.mast.topThickness)}</span>`};a.gunsFront?a.gunsFront+=` ${D.pd(a.limitFront)}`:a.gunsFront="–",a.gunsBack?a.gunsBack+=` ${D.pd(a.limitBack)}`:a.gunsBack="–",t(`${this.select}`).find("div").append(D.getText(a))}get shipData(){return this._shipData}get shipCompareData(){return this._shipCompareData}}class $ extends D{constructor(t,e,a,s){super(t,s),this._shipBaseData=e,this._shipCompareData=a,this._shipCompare=s,this._drawDifferenceProfile(),this._injectTextComparison()}_drawDifferenceProfile(){const t=Object(p.f)().sort(null).value(1),e=t(this.shipCompareData.speedDegrees),a=t(this.shipBaseData.speedDegrees),s=p.d,i=Object(p.g)().angle((t,e)=>e*u).radius(t=>this.shipCompare.radiusScaleAbsolute(t.data)).curve(s),n=this.g.append("path"),d=this.g.append("path"),c=this.g.append("g").attr("class","markers"),m=[];this.shipCompareData.speedDegrees.forEach((t,e)=>{m.push(Object(h.C)(t-this.shipBaseData.speedDegrees[e]))});const b=this._shipCompare._minSpeed,g=this._shipCompare._maxSpeed,_=Object(o.scaleLinear)().domain([b,-1,0,1,g]).range([l.k,l.j,l.l,l.h,l.i]).interpolate(r.c);n.attr("d",i(e)).classed("comp",!0),c.selectAll("circle").data(e).enter().append("circle").attr("r",5).attr("cy",(t,e)=>Math.cos(e*u)*-this.shipCompare.radiusScaleAbsolute(t.data)).attr("cx",(t,e)=>Math.sin(e*u)*this.shipCompare.radiusScaleAbsolute(t.data)).attr("fill",(t,e)=>_(m[e])).append("title").text(t=>`${Math.round(10*t.data)/10} knots`),d.attr("d",i(a)).classed("base",!0)}_injectTextComparison(){function e(t,e,a){void 0===a&&(a=0);const s=parseFloat((t-e).toFixed(a));return s<0?`<span class="badge badge-danger">${Object(h.n)(Math.abs(s))}</span>`:s>0?`<span class="badge badge-success">${Object(h.n)(s)}</span>`:""}const a={shipRating:`${Object(h.u)(this.shipCompareData.class)} rate`,battleRating:`${this.shipCompareData.battleRating} ${e(this.shipCompareData.battleRating,this.shipBaseData.battleRating)}`,guns:`${this.shipCompareData.guns} ${e(this.shipCompareData.guns,this.shipBaseData.guns)}`,decks:`${this.shipCompareData.decks} deck${this.shipCompareData.decks>1?"s":""} ${e(this.shipCompareData.decks,this.shipBaseData.decks)}`,additionalRow:`${this.shipCompareData.decks<4?"<br> ":""}`,cannonsPerDeck:D.getCannonsPerDeck(this.shipCompareData.deckClassLimit,this.shipCompareData.gunsPerDeck),cannonBroadside:`${this.shipCompareData.broadside.cannons} ${e(this.shipCompareData.broadside.cannons,this.shipBaseData.broadside.cannons)}`,carroBroadside:`${this.shipCompareData.broadside.carronades} ${e(this.shipCompareData.broadside.carronades,this.shipBaseData.broadside.carronades)}`,gunsFront:this.shipCompareData.gunsPerDeck[4],limitFront:this.shipCompareData.deckClassLimit[4],gunsBack:this.shipCompareData.gunsPerDeck[5],limitBack:this.shipCompareData.deckClassLimit[5],minSpeed:`${Object(h.n)(this.shipCompareData.speed.min)} ${e(this.shipCompareData.speed.min,this.shipBaseData.speed.min,2)}`,maxSpeed:`${Object(h.n)(this.shipCompareData.speed.max,3)} ${e(this.shipCompareData.speed.max,this.shipBaseData.speed.max,2)}`,maxTurningSpeed:`${Object(h.n)(this.shipCompareData.rudder.turnSpeed)} ${e(this.shipCompareData.rudder.turnSpeed,this.shipBaseData.rudder.turnSpeed,2)}`,firezoneHorizontalWidth:`${this.shipCompareData.ship.firezoneHorizontalWidth} ${e(this.shipCompareData.ship.firezoneHorizontalWidth,this.shipBaseData.ship.firezoneHorizontalWidth)}`,waterlineHeight:`${Object(h.n)(this.shipCompareData.ship.waterlineHeight)} ${e(this.shipCompareData.ship.waterlineHeight,this.shipBaseData.ship.waterlineHeight,2)}`,acceleration:`${Object(h.n)(this.shipCompareData.ship.acceleration)} ${e(this.shipCompareData.ship.acceleration,this.shipBaseData.ship.acceleration,2)}`,deceleration:`${Object(h.n)(this.shipCompareData.ship.deceleration)} ${e(this.shipCompareData.ship.deceleration,this.shipBaseData.ship.deceleration,2)}`,halfturnTime:`${Object(h.n)(this.shipCompareData.rudder.halfturnTime)} ${e(this.shipCompareData.rudder.halfturnTime,this.shipBaseData.rudder.halfturnTime)}`,sideArmor:`${Object(h.p)(this.shipCompareData.sides.armour)} ${e(this.shipCompareData.sides.armour,this.shipBaseData.sides.armour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.sides.thickness)}</span>${e(this.shipCompareData.sides.thickness,this.shipBaseData.sides.thickness)}`,frontArmor:`${Object(h.p)(this.shipCompareData.bow.armour)} ${e(this.shipCompareData.bow.armour,this.shipBaseData.bow.armour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.bow.thickness)}</span>${e(this.shipCompareData.bow.thickness,this.shipBaseData.bow.thickness)}`,backArmor:`${Object(h.p)(this.shipCompareData.stern.armour)} ${e(this.shipCompareData.stern.armour,this.shipBaseData.stern.armour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.stern.thickness)}</span>${e(this.shipCompareData.stern.thickness,this.shipBaseData.stern.thickness)}`,pump:`${Object(h.p)(this.shipCompareData.pump.armour)} ${e(this.shipCompareData.pump.armour,this.shipBaseData.pump.armour)}`,sails:`${Object(h.p)(this.shipCompareData.sails.armour)} ${e(this.shipCompareData.sails.armour,this.shipBaseData.sails.armour)}`,structure:`${Object(h.p)(this.shipCompareData.structure.armour)} ${e(this.shipCompareData.structure.armour,this.shipBaseData.structure.armour)}`,rudder:`${Object(h.p)(this.shipCompareData.rudder.armour)} ${e(this.shipCompareData.rudder.armour,this.shipBaseData.rudder.armour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.rudder.thickness)}</span>${e(this.shipCompareData.rudder.thickness,this.shipBaseData.rudder.thickness)}`,minCrew:`${Object(h.p)(this.shipCompareData.crew.min)} ${e(this.shipCompareData.crew.min,this.shipBaseData.crew.min)}`,maxCrew:`${Object(h.p)(this.shipCompareData.crew.max)} ${e(this.shipCompareData.crew.max,this.shipBaseData.crew.max)}`,sailingCrew:`${Object(h.p)(this.shipCompareData.crew.sailing)} ${e(this.shipCompareData.crew.sailing,this.shipBaseData.crew.sailing)}`,maxWeight:`${Object(h.p)(this.shipCompareData.maxWeight)} ${e(this.shipCompareData.maxWeight,this.shipBaseData.maxWeight)}`,holdSize:`${Object(h.p)(this.shipCompareData.holdSize)} ${e(this.shipCompareData.holdSize,this.shipBaseData.holdSize)}`,upgradeXP:`${Object(h.p)(this.shipCompareData.upgradeXP)} ${e(this.shipCompareData.upgradeXP,this.shipBaseData.upgradeXP)}`,sternRepair:`${Object(h.p)(this.shipCompareData.repairTime.stern)} ${e(this.shipCompareData.repairTime.stern,this.shipBaseData.repairTime.stern)}`,bowRepair:`${Object(h.p)(this.shipCompareData.repairTime.bow)} ${e(this.shipCompareData.repairTime.bow,this.shipBaseData.repairTime.bow)}`,sidesRepair:`${Object(h.p)(this.shipCompareData.repairTime.sides)} ${e(this.shipCompareData.repairTime.sides,this.shipBaseData.repairTime.sides)}`,rudderRepair:`${Object(h.p)(this.shipCompareData.repairTime.rudder)} ${e(this.shipCompareData.repairTime.rudder,this.shipBaseData.repairTime.rudder)}`,sailsRepair:`${Object(h.p)(this.shipCompareData.repairTime.sails)} ${e(this.shipCompareData.repairTime.sails,this.shipBaseData.repairTime.sails)}`,structureRepair:`${Object(h.p)(this.shipCompareData.repairTime.structure)} ${e(this.shipCompareData.repairTime.structure,this.shipBaseData.repairTime.structure)}`,hullRepair:`${Object(h.p)(this.shipCompareData.sides.armour/b)} ${e(this.shipCompareData.sides.armour/b,this.shipBaseData.sides.armour/b)}`,rigRepair:`${Object(h.p)(this.shipCompareData.sails.armour/g)} ${e(this.shipCompareData.sails.armour/g,this.shipBaseData.sails.armour/g)}`,rumRepair:`${Object(h.p)(this.shipCompareData.crew.max/_)} ${e(this.shipCompareData.crew.max/_,this.shipBaseData.crew.max/_)}`,fireResistance:`${Object(h.p)(this.shipCompareData.resistance.fire)} ${e(this.shipCompareData.resistance.fire,this.shipBaseData.resistance.fire)}`,leakResistance:`${Object(h.p)(this.shipCompareData.resistance.leaks)} ${e(this.shipCompareData.resistance.leaks,this.shipBaseData.resistance.leaks)}`,crewProtection:`${Object(h.p)(this.shipCompareData.resistance.crew)} ${e(this.shipCompareData.resistance.crew,this.shipBaseData.resistance.crew)}`,mastBottomArmor:`${Object(h.p)(this.shipCompareData.mast.bottomArmour)} ${e(this.shipCompareData.mast.bottomArmour,this.shipBaseData.mast.bottomArmour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.mast.bottomThickness)}</span>${e(this.shipCompareData.mast.bottomThickness,this.shipBaseData.mast.bottomThickness)}`,mastMiddleArmor:`${Object(h.p)(this.shipCompareData.mast.middleArmour)} ${e(this.shipCompareData.mast.middleArmour,this.shipBaseData.mast.middleArmour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.mast.middleThickness)}</span>${e(this.shipCompareData.mast.middleThickness,this.shipBaseData.mast.middleThickness)}`,mastTopArmor:`${Object(h.p)(this.shipCompareData.mast.topArmour)} ${e(this.shipCompareData.mast.topArmour,this.shipBaseData.mast.topArmour)} <span class="badge badge-white">${Object(h.p)(this.shipCompareData.mast.topThickness)}</span>${e(this.shipCompareData.mast.topThickness,this.shipBaseData.mast.topThickness)}`};a.gunsFront?a.gunsFront+=` ${D.pd(a.limitFront)}`:a.gunsFront="–",a.gunsBack?a.gunsBack+=` ${D.pd(a.limitBack)}`:a.gunsBack="–",t(`${this.select}`).find("div").append(D.getText(a))}get shipBaseData(){return this._shipBaseData}get shipCompareData(){return this._shipCompareData}get shipCompare(){return this._shipCompare}}class w{constructor(t,e,a){void 0===a&&(a="ship-compare"),this._shipData=t,this._baseId=a,this._baseName="Compare ships",this._buttonId=`button-${this._baseId}`,this._modalId=`modal-${this._baseId}`,"ship-compare"===this._baseId?this._columnsCompare=["C1","C2"]:this._columnsCompare=[],this._columns=this._columnsCompare.slice(),this._columns.unshift("Base"),this._ships={Base:{},C1:{},C2:{}};const i=1.2*Object(s.d)(this._shipData,t=>t.speed.min);this._minSpeed=i,this._maxSpeed=15.5,this._colorScale=Object(o.scaleLinear)().domain([this._minSpeed,0,12,this._maxSpeed]).range([l.j,l.l,l.h,l.i]).interpolate(r.c),this._woodChanges=new Map([["Hull strength",["structure.armour"]],["Side armour",["bow.armour","sides.armour","sails.armour","structure.armour","stern.armour"]],["Thickness",["sides.thickness","bow.thickness","stern.thickness"]],["Ship speed",["speed.max"]],["Acceleration",["ship.acceleration"]],["Turn speed",["rudder.turnSpeed"]],["Rudder speed",["rudder.halfturnTime"]],["Fire resistance",["resistance.fire"]],["Leak resistance",["resistance.leaks"]],["Crew protection",["resistance.crew"]],["Crew",["crew.max"]]]),"ship-journey"===this._baseId?this._woodId="wood-journey":this._woodId="wood-ship",this._woodCompare=new c.a(e,this._woodId),"ship-journey"===this._baseId?(this._initData(),this._initWoodSelect()):this._setupListener()}_setupListener(){t(`#${this._buttonId}`).on("click",t=>{Object(d.b)("Tools",this._baseName),t.stopPropagation(),this._shipCompareSelected()})}_setGraphicsParameters(){this.svgWidth=parseInt(t(`#${this._modalId} .columnA`).width(),10),this.svgHeight=this.svgWidth,this.outerRadius=Math.floor(Math.min(this.svgWidth,this.svgHeight)/2),this.innerRadius=Math.floor(.3*this.outerRadius),this.radiusScaleAbsolute=Object(o.scaleLinear)().domain([this.minSpeed,0,this.maxSpeed]).range([10,this.innerRadius,this.outerRadius])}_shipCompareSelected(){document.getElementById(this._modalId)||this._initModal(),t(`#${this._modalId}`).modal("show"),this._setGraphicsParameters()}_setupData(){this.shipSelectData=Object(i.b)().key(t=>t.class).sortKeys(s.a).entries(this._shipData.map(t=>({id:t.id,name:t.name,class:t.class,battleRating:t.battleRating,guns:t.guns})).sort((t,e)=>t.name<e.name?-1:t.name>e.name?1:0))}_injectModal(){Object(l.v)(this._modalId,this._baseName);const t=Object(n.select)(`#${this._modalId} .modal-body`).append("div").attr("class","container-fluid").append("div").attr("class","row");this._columns.forEach(e=>{const a=t.append("div").attr("class",`col-md-4 ml-auto pt-2 ${"Base"===e?"columnA":"columnC"}`),s=`${this._baseId}-${e}-select`;a.append("label").append("select").attr("name",s).attr("id",s),["frame","trim"].forEach(t=>{const s=`${this._woodId}-${t}-${e}-select`;a.append("label").append("select").attr("name",s).attr("id",s)}),a.append("div").attr("id",`${this._baseId}-${e}`).attr("class",`${"Base"===e?"ship-base":"ship-compare"}`)})}_initData(){this._setupData(),this.woodCompare._setupData()}_initWoodSelect(){this._columns.forEach(e=>{this._setupShipSelect(e),["frame","trim"].forEach(a=>{const s=t(`#${this._woodId}-${a}-${e}-select`);this.woodCompare._setupWoodSelects(e,a,s)}),this._setupSelectListener(e)})}_initModal(){this._initData(),this._injectModal(),this._initWoodSelect()}_getOptions(){return this.shipSelectData.map(t=>`<optgroup label="${Object(h.u)(t.key,!1)} rate">${t.values.map(t=>`<option data-subtext="${t.battleRating}" value="${t.id}">${t.name} (${t.guns})`).join("</option>")}`).join("</optgroup>")}_setupShipSelect(e){const a=t(`#${this._baseId}-${e}-select`),s=this._getOptions();a.append(s),"Base"!==e&&a.attr("disabled","disabled")}_getShipData(t,e){let a=this._shipData.filter(e=>e.id===t)[0];return a=this._addWoodData(a,e)}_addWoodData(t,e){const a=JSON.parse(JSON.stringify(t));if(a.resistance={},a.resistance.fire=0,a.resistance.leaks=0,a.resistance.crew=0,void 0!==this.woodCompare._instances[e]){let t="_woodData";"Base"!==e&&(t="_compareData");const s=new Map;["frame","trim"].forEach(a=>{this.woodCompare._instances[e][t][a].properties.forEach(t=>{this._woodChanges.has(t.modifier)&&s.set(t.modifier,s.has(t.modifier)?s.get(t.modifier)+t.amount:t.amount)})}),s.forEach((t,e)=>{this._woodChanges.get(e).forEach(t=>{const i=t.split("."),r=1+s.get(e)/100;i.length>1?a[i[0]][i[1]]?a[i[0]][i[1]]*=r:a[i[0]][i[1]]=s.get(e):a[i[0]]?a[i[0]]*=r:a[i[0]]=s.get(e)})}),a.speedDegrees=a.speedDegrees.map(t=>{const e=1+s.get("Ship speed")/100;return Math.max(Math.min(t*e,this._maxSpeed),this._minSpeed)})}return a}_refreshShips(e,a){const s=this._getShipData(e,a);"ship-journey"!==this._baseId?"Base"===a?(this._setShip(a,new f(a,s,this)),this._columnsCompare.forEach(e=>{t(`#${this._baseId}-${e}-select`).removeAttr("disabled").selectpicker("refresh"),Object(h.w)(this.ships[e])||this._setShip(e,new $(e,s,this.ships[e]._shipCompareData,this))})):this._setShip(a,new $(a,this.ships.Base._shipData,s,this)):this._singleShipData=s}_enableCompareSelects(){this._columnsCompare.forEach(e=>{t(`#${this._baseId}-${e}-select`).removeAttr("disabled").selectpicker("refresh")})}_setupSelectListener(e){const a=t(`#${this._baseId}-${e}-select`);a.addClass("selectpicker").on("changed.bs.select",t=>{t.preventDefault();const s=+a.val();this._refreshShips(s,e),"Base"===e&&"ship-journey"!==this._baseId&&this._enableCompareSelects(),this.woodCompare.enableSelects(e)}).selectpicker({noneSelectedText:"Select ship"}).val("default").selectpicker("refresh"),["frame","trim"].forEach(s=>{const i=t(`#${this._woodId}-${s}-${e}-select`);i.addClass("selectpicker").on("changed.bs.select",()=>{this.woodCompare._woodSelected(e,s,i);const t=+a.val();this._refreshShips(t,e)}).selectpicker({noneSelectedText:`Select ${s}`}).val("default").selectpicker("refresh")})}get woodCompare(){return this._woodCompare}_setShip(t,e){this._ships[t]=e}get ships(){return this._ships}get minSpeed(){return this._minSpeed}get maxSpeed(){return this._maxSpeed}get colorScale(){return this._colorScale}set svgWidth(t){this._svgWidth=t}get svgWidth(){return this._svgWidth}set svgHeight(t){this._svgHeight=t}get svgHeight(){return this._svgHeight}set outerRadius(t){this._outerRadius=t}get outerRadius(){return this._outerRadius}set innerRadius(t){this._innerRadius=t}get innerRadius(){return this._innerRadius}set radiusScaleAbsolute(t){this._radiusScaleAbsolute=t}get radiusScaleAbsolute(){return this._radiusScaleAbsolute}}}).call(this,a("xeH2"))},pFgi:function(t,e,a){"use strict";(function(t){a.d(e,"a",function(){return c});a("W1QL");var s=a("/Cyf"),i=a("nUlG"),r=a("0lY5"),o=a("f4w0"),n=a("Av7d");class p{constructor(t,e){this._id=t,this._woodCompare=e,this._select=`#${this._woodCompare._baseFunction}-${this._id}`,this._setupMainDiv(),this._g=Object(i.select)(this._select).select("g")}_setupMainDiv(){Object(i.select)(`${this._select} div`).remove(),Object(i.select)(this._select).append("div")}}class h extends p{constructor(t,e,a){super(t,a),this._woodData=e,this._woodCompare=a,this._printText()}_getProperty(t,e){const a=this._woodData[e].properties.filter(e=>e.modifier===t).map(t=>t.amount)[0];return void 0===a?0:a/100}_getPropertySum(t){return this._getProperty(t,"frame")+this._getProperty(t,"trim")}_getText(t){let e='<table class="table table-sm table-striped small mt-4"><thead>';return e+="<tr>",e+="<tr><th><em>Property</em></th><th><em>Change in %</em></th></tr></thead><tbody>",t.properties.forEach((t,a)=>{if(e+=`<tr><td>${a}</td><td>${Object(r.n)(100*t)}`,e+='<span class="rate">',t>0){const s=t/this._woodCompare._minMaxProperty.get(a).max*100*50;e+='<span class="bar neutral" style="width:50%;"></span>',e+=`<span class="bar pos diff" style="width:${s}%;"></span>`}else if(t<0){const s=t/this._woodCompare._minMaxProperty.get(a).min*100*50;e+=`<span class="bar neutral" style="width:${50-s}%;"></span>`,e+=`<span class="bar neg diff" style="width:${s}%;"></span>`}else e+='<span class="bar neutral"></span>';e+="</span></td></tr>"}),e+="</tbody></table>"}_printText(){const e={frame:this._woodData.frame.name,trim:this._woodData.trim.name};e.properties=new Map,this._woodCompare._properties.forEach(t=>{e.properties.set(t,this._getPropertySum(t))}),t(`${this._select}`).find("div").append(this._getText(e))}}class d extends p{constructor(t,e,a,s){super(t,s),this._baseData=e,this._compareData=a,this._woodCompare=s,this._printTextComparison()}_getBaseProperty(t,e){const a=this._baseData[e].properties.filter(e=>e.modifier===t).map(t=>t.amount)[0];return void 0===a?0:a/100}_getBasePropertySum(t){return this._getBaseProperty(t,"frame")+this._getBaseProperty(t,"trim")}_getCompareProperty(t,e){const a=this._compareData[e].properties.filter(e=>e.modifier===t).map(t=>t.amount)[0];return void 0===a?0:a/100}_getComparePropertySum(t){return this._getCompareProperty(t,"frame")+this._getCompareProperty(t,"trim")}_getText(t){let e=0,a=0,s=0,i="",o='<table class="table table-sm table-striped small wood mt-4"><thead>';return o+="<tr>",o+="<tr><th><em>Property</em></th><th><em>Change in %</em></th></tr></thead><tbody>",t.properties.forEach((t,n)=>{o+=`<tr><td>${n}</td><td>${function(t,e,a){void 0===a&&(a=1);const s=parseFloat((100*(t-e)).toFixed(a));return s<0?`${Object(r.n)(100*t)} <span class="badge badge-white">${Object(r.n)(s)}</span>`:s>0?`${Object(r.n)(100*t)} <span class="badge badge-white">+ ${Object(r.n)(s)}</span>`:Object(r.n)(100*t)}(t.compare,t.base)}`,o+='<span class="rate">',t.compare>=0?(t.base>=0?t.compare>t.base?(e=t.base,a=t.compare-t.base,i="pos"):(e=t.compare,a=t.base-t.compare,i="neg"):(e=0,a=t.compare,i="pos"),o+='<span class="bar neutral" style="width:50%;"></span>',o+=`<span class="bar pos diff" style="width:${e/this._woodCompare._minMaxProperty.get(n).max*100*50}%;"></span>`,o+=`<span class="bar ${i}" style="width:${a/this._woodCompare._minMaxProperty.get(n).max*100*50}%;"></span>`):t.compare<0?(t.base<0?t.compare>=t.base?(e=t.compare,a=t.base-t.compare,s=-t.base,i="pos"):(e=t.base,a=t.compare-t.base,s=-t.compare,i="neg"):(e=0,a=t.compare,s=-t.compare,i="neg"),o+=`<span class="bar neutral" style="width:${50+s/this._woodCompare._minMaxProperty.get(n).min*100*50}%;"></span>`,o+=`<span class="bar ${i}" style="width:${a/this._woodCompare._minMaxProperty.get(n).min*100*50}%;"></span>`,o+=`<span class="bar neg diff" style="width:${e/this._woodCompare._minMaxProperty.get(n).min*100*50}%;"></span>`):o+='<span class="bar neutral"></span>',o+="</span></td></tr>"}),o+="</tbody></table>"}_printTextComparison(){const e={frame:this._compareData.frame.name,trim:this._compareData.trim.name};e.properties=new Map,this._woodCompare._properties.forEach(t=>{e.properties.set(t,{base:this._getBasePropertySum(t),compare:this._getComparePropertySum(t)})}),t(`${this._select}`).find("div").append(this._getText(e))}}class c{constructor(t,e){this._woodData=t,this._baseFunction=e,this._baseName="Compare woods",this._baseId=`${this._baseFunction}-compare`,this._buttonId=`button-${this._baseId}`,this._modalId=`modal-${this._baseId}`,"wood"===this._baseFunction?(this._defaultWood={frame:"Fir",trim:"Crew Space"},this._columnsCompare=["C1","C2","C3"]):"wood-journey"===this._baseFunction?(this._defaultWood={frame:"Oak",trim:"Oak"},this._columnsCompare=[]):(this._defaultWood={frame:"Oak",trim:"Oak"},this._columnsCompare=["C1","C2"]),this._columns=this._columnsCompare.slice(),this._columns.unshift("Base"),this._woodsSelected=[],this._instances=[],this._properties=["Thickness","Hull strength","Side armour","Mast thickness","Ship speed","Acceleration","Rudder speed","Turn speed","Crew","Crew protection","Grog morale bonus","Fire resistance","Leak resistance"],this._options={},this._minMaxProperty=new Map,this._setupListener()}_setupListener(){t(`#${this._buttonId}`).on("click",t=>{Object(o.b)("Tools",this._baseName),t.stopPropagation(),this._woodCompareSelected()})}_woodCompareSelected(){document.getElementById(this._modalId)||this._initModal(),t(`#${this._modalId}`).modal("show")}_setupData(){this._frameSelectData=this._woodData.frame.sort((t,e)=>t.name<e.name?-1:t.name>e.name?1:0),this._trimSelectData=this._woodData.trim.sort((t,e)=>t.name<e.name?-1:t.name>e.name?1:0),this._setOption(this._frameSelectData.map(t=>`<option value="${t.name}">${t.name}</option>`),this._trimSelectData.map(t=>`<option value="${t.name}">${t.name}</option>`)),this._properties.forEach(t=>{const e=[...this._woodData.frame.map(e=>e.properties.filter(e=>e.modifier===t).map(t=>t.amount)[0])],a=[...this._woodData.trim.map(e=>e.properties.filter(e=>e.modifier===t).map(t=>t.amount)[0])],i=Object(s.d)(e)||0,r=Object(s.c)(e)||0,o=Object(s.d)(a)||0,n=Object(s.c)(a)||0;this._addMinMaxProperty(t,{min:i+o>=0?0:i+o,max:r+n})})}_injectModal(){Object(n.v)(this._modalId,this._baseName);const t=Object(i.select)(`#${this._modalId} .modal-body`).append("div").attr("class","container-fluid").append("div").attr("class","row wood");this._columns.forEach(e=>{const a=t.append("div").attr("class",`col-md-3 ml-auto pt-2 ${"Base"===e?"columnA":"columnC"}`);["frame","trim"].forEach(t=>{const s=`${this._baseFunction}-${t}-${e}-select`;a.append("label").attr("for",s),a.append("select").attr("name",s).attr("id",s)}),a.append("div").attr("id",`${this._baseFunction}-${e}`)})}_initModal(){this._setupData(),this._injectModal(),this._columns.forEach(e=>{["frame","trim"].forEach(a=>{const s=t(`#${this._baseFunction}-${a}-${e}-select`);this._setupWoodSelects(e,a,s),this._setupSelectListener(e,a,s)})})}_setWoodsSelected(t,e,a){void 0===this._woodsSelected[t]&&(this._woodsSelected[t]={}),this._woodsSelected[t][e]=a}_setupWoodSelects(t,e,a){this._setWoodsSelected(t,e,this._defaultWood[e]),a.append(this._options[e]),("wood"!==this._baseFunction||"Base"!==t&&"wood"===this._baseFunction)&&a.attr("disabled","disabled")}_setOtherSelect(e,a){const s="frame"===a?"trim":"frame";this._getWoodSelected(e)[s]===this._defaultWood[s]&&t(`#${this._baseFunction}-${s}-${e}-select`).val(this._defaultWood[s]).selectpicker("refresh")}enableSelects(e){["frame","trim"].forEach(a=>{t(`#${this._baseFunction}-${a}-${e}-select`).removeAttr("disabled").selectpicker("refresh")})}_woodSelected(t,e,a){const s=a.val();this._setWoodsSelected(t,e,s),this._setOtherSelect(t,e),"Base"===t?(this._addInstance(t,new h("Base",this._getWoodData("Base"),this)),this._columnsCompare.forEach(t=>{"wood"===this._baseFunction&&this.enableSelects(t),void 0!==this._instances[t]&&this._addInstance(t,new d(t,this._getWoodData("Base"),this._getWoodData(t),this))})):this._addInstance(t,new d(t,this._getWoodData("Base"),this._getWoodData(t),this))}_setupSelectListener(t,e,a){a.addClass("selectpicker").on("change",()=>this._woodSelected(t,e,a)).selectpicker({noneSelectedText:`Select ${e}`}).val("default").selectpicker("refresh")}_getWoodTypeData(t,e){return this._woodData[t].filter(t=>t.name===e)[0]}_getWoodData(t){return{frame:this._getWoodTypeData("frame",this._getWoodSelected(t).frame),trim:this._getWoodTypeData("trim",this._getWoodSelected(t).trim)}}_getWoodSelected(t){return this._woodsSelected[t]}_addMinMaxProperty(t,e){this._minMaxProperty.set(t,e)}_setOption(t,e){this._options.frame=t,this._options.trim=e}_addInstance(t,e){this._instances[t]=e}}}).call(this,a("xeH2"))}}]);