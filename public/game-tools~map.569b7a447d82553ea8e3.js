(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{iSiJ:function(e,t,s){"use strict";(function(e){s.d(t,"a",function(){return w});s("asZ9"),s("Z8gF"),s("W1QL");var a=s("/Cyf"),i=s("BfWa"),r=s("yw3p"),o=s("wbYc"),p=s("nUlG"),h=s("aBO9"),d=s("f4w0"),n=s("Av7d"),c=s("0lY5"),m=s("pFgi");const l=24,u=2*Math.PI/l,_=500,b=400,g=4;class D{constructor(e,t){this._id=e,this._shipData=t,this._select=`#ship-compare-${this._id}`,this._setupSvg(),this._g=Object(p.select)(this._select).select("g"),this._setCompass()}_setupSvg(){const e=Object(p.select)(this.select);Object(p.select)(`${this.select} svg`).remove(),e.append("svg").attr("width",this.shipData.svgWidth).attr("height",this.shipData.svgHeight).attr("class","profile").attr("fill","none").append("g").attr("transform",`translate(${this.shipData.svgWidth/2}, ${this.shipData.svgHeight/2})`),Object(p.select)(`${this.select} div`).remove(),e.append("div").classed("block",!0)}_setCompass(){const e=new Array(l/2);e.fill(1,0);const t=Object(h.f)().sort(null).value(1)(e),s=Object(h.a)().outerRadius(this.shipData.radiusScaleAbsolute(12)).innerRadius(this.shipData.innerRadius);this.g.selectAll(".compass-arc").data(t).join(e=>e.append("g").attr("class","compass-arc")).append("path").attr("d",s),this.g.append("line").attr("x1",0).attr("y1",-160).attr("x2",0).attr("y2",-79).attr("marker-end","url(#course-arrow)")}static pd(e){let t=`<span class="badge badge-white">${e[0]} / `;return e[1]?t+=`${e[1]}`:t+="–",t+=" pd</span>"}static getCannonsPerDeck(e,t){let s=`${t[0]} ${D.pd(e[0])}`,a="";for(let i=1;i<4;i+=1)t[i]?s=`${t[i]} ${D.pd(e[i])} <br>${s}`:a=`${a}<br>`;return[s,a]}static getText(e){let t=0;function s(e){return`<div class="row small ${(t+=1)%2?"light":""}"><div class="col-3">${e}</div>`}function a(t,s,a){void 0===a&&(a=6);let i="",r="";if("cannonsPerDeck"===t){var o=e[t];i=o[0],r=`<br>${r=o[1]}`}else i=""!==t?e[t]:"";return`<div class="col-${a}">${i}<br><span class="des">${s}</span>${r}</div>`}let i="";return i+=s(e.shipRating),i+='<div class="col-9"><div class="row no-gutters">',i+=a("battleRating","Battle rating"),i+=a("guns","Cannons"),i+=a("upgradeXP","Knowledge XP"),i+=a("waterlineHeight","Water line"),i+="</div></div></div>",i+=s(e.decks),i+='<div class="col-9"><div class="row no-gutters">',i+=a("cannonsPerDeck","Gun decks"),i+=a("firezoneHorizontalWidth","Firezone horizontal width"),i+="</div></div></div>",i+=s("Broadside (pd)"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("cannonBroadside","Cannons"),i+=a("carroBroadside","Carronades"),i+="</div></div></div>",i+=s("Chasers"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("gunsFront","Bow"),i+=a("gunsBack","Stern"),i+="</div></div></div>",i+=s("Speed"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("maxSpeed","Maximum"),i+=a("",""),i+=a("acceleration","Acceleration"),i+=a("deceleration","Deceleration"),i+=a("maxTurningSpeed","Turn speed"),i+=a("halfturnTime","Rudder half time"),i+="</div></div></div>",i+=s('Armour <span class="badge badge-white">Thickness</span>'),i+='<div class="col-9"><div class="row no-gutters">',i+=a("sideArmor","Sides"),i+=a("structure","Hull"),i+=a("frontArmor","Bow"),i+=a("backArmor","Stern"),i+=a("pump","Pump"),i+=a("rudder","Rudder"),i+="</div></div></div>",i+=s('Masts <span class="badge badge-white">Thickness</span>'),i+='<div class="col-9"><div class="row no-gutters">',i+=a("sails","Sails"),i+=a("mastBottomArmor","Bottom"),i+=a("mastMiddleArmor","Middle"),i+=a("mastTopArmor","Top"),i+="</div></div></div>",i+=s("Crew"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("minCrew","Minimum",4),i+=a("sailingCrew","Sailing",4),i+=a("maxCrew","Maximum",4),i+="</div></div></div>",i+=s("Resistance"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("fireResistance","Fire",3),i+=a("leakResistance","Leaks",3),i+=a("crewProtection","Crew Protection",6),i+="</div></div></div>",i+=s("Repairs needed"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("hullRepair","Hull",4),i+=a("rigRepair","Rig",4),i+=a("rumRepair","Rum",4),i+="</div></div></div>",i+=s("Repair time"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("sidesRepair","Sides",4),i+=a("structureRepair","Hull",4),i+=a("bowRepair","Bow",4),i+=a("sternRepair","Stern",4),i+=a("sailsRepair","Sails",4),i+=a("rudderRepair","Rudder",4),i+="</div></div></div>",i+=s("Hold"),i+='<div class="col-9"><div class="row no-gutters">',i+=a("maxWeight","Tons"),i+=a("holdSize","Cargo slots"),i+="</div></div></div>",i+="</div>"}get id(){return this._id}get shipData(){return this._shipData}get select(){return this._select}get g(){return this._g}}class $ extends D{constructor(e,t,s){super(e,s),this._shipData=t,this._shipCompareData=s,this._setBackground(),this._setBackgroundGradient(),this._drawProfile(),this._printText()}_setBackground(){const e=Object(h.a)().outerRadius(e=>this.shipCompareData.radiusScaleAbsolute(e)+2).innerRadius(e=>this.shipCompareData.radiusScaleAbsolute(e)+1).startAngle(-Math.PI/2).endAngle(Math.PI/2),t=[12,8,4,0],s=["12 knots","8 knots","4 knots","0 knots"];this.g.selectAll(".circle").data(t).join(e=>e.append("circle").attr("class","knots-circle").attr("r",e=>this.shipCompareData.radiusScaleAbsolute(e))),this.g.selectAll(".label").data(t).join(t=>t.append("path").attr("d",e).attr("id",(e,t)=>`tick${t}`)),this.g.selectAll(".label").data(t).join(e=>e.append("text").attr("class","knots-text").append("textPath").attr("href",(e,t)=>`#tick${t}`).text((e,t)=>s[t]).attr("startOffset","16%"))}_setBackgroundGradient(){const e=Object(o.b)().domain([this.shipData.speed.min,this.shipData.speed.max]).range([0,this.shipCompareData.svgWidth]),t=e.domain();t[2]=t[1]-t[0];const s=[];for(let e=0;e<30;e+=1)s.push(e*t[2]/29+t[0]);this.g.append("defs").append("radialGradient").attr("id","gradient").attr("cx",.5).attr("cy",.25).attr("r",.5).selectAll("stop").data(Object(a.e)(30)).join(t=>t.append("stop").attr("offset",(t,a)=>e(s[a])/this.shipCompareData.svgWidth).attr("stop-color",(e,t)=>this.shipCompareData.colorScale(s[t])))}_drawProfile(){const e=Object(h.f)().sort(null).value(1)(this.shipData.speedDegrees),t=h.d,s=Object(h.g)().angle((e,t)=>t*u).radius(e=>this.shipCompareData.radiusScaleAbsolute(e.data)).curve(t),a=this.g.append("path").classed("base",!0),i=this.g.append("g").classed("markers",!0);a.attr("d",s(e)),i.selectAll("circle").data(e).join(e=>e.append("circle").attr("r",5).attr("cy",(e,t)=>Math.cos(t*u)*-this.shipCompareData.radiusScaleAbsolute(e.data)).attr("cx",(e,t)=>Math.sin(t*u)*this.shipCompareData.radiusScaleAbsolute(e.data)).attr("fill",e=>this.shipCompareData.colorScale(e.data)).append("title").text(e=>`${Math.round(10*e.data)/10} knots`))}_printText(){const t=D.getCannonsPerDeck(this.shipData.deckClassLimit,this.shipData.gunsPerDeck),s={shipRating:`${Object(c.v)(this.shipData.class)} rate`,battleRating:this.shipData.battleRating,guns:this.shipData.guns,decks:`${this.shipData.decks} deck${this.shipData.decks>1?"s":""}`,additionalRow:`${this.shipData.decks<4?"<br> ":""}`,cannonsPerDeck:t,cannonBroadside:Object(c.p)(this.shipData.broadside.cannons),carroBroadside:Object(c.p)(this.shipData.broadside.carronades),gunsFront:this.shipData.gunsPerDeck[4],limitFront:this.shipData.deckClassLimit[4],gunsBack:this.shipData.gunsPerDeck[5],limitBack:this.shipData.deckClassLimit[5],firezoneHorizontalWidth:this.shipData.ship.firezoneHorizontalWidth,waterlineHeight:Object(c.n)(this.shipData.ship.waterlineHeight),maxSpeed:Object(c.n)(this.shipData.speed.max,3),acceleration:Object(c.n)(this.shipData.ship.acceleration),deceleration:Object(c.n)(this.shipData.ship.deceleration),maxTurningSpeed:Object(c.n)(this.shipData.rudder.turnSpeed),halfturnTime:Object(c.n)(this.shipData.rudder.halfturnTime),sideArmor:`${Object(c.p)(this.shipData.sides.armour)} <span class="badge badge-white">${Object(c.p)(this.shipData.sides.thickness)}</span>`,frontArmor:`${Object(c.p)(this.shipData.bow.armour)} <span class="badge badge-white">${Object(c.p)(this.shipData.bow.thickness)}</span>`,pump:Object(c.p)(this.shipData.pump.armour),sails:Object(c.p)(this.shipData.sails.armour),structure:Object(c.p)(this.shipData.structure.armour),backArmor:`${Object(c.p)(this.shipData.stern.armour)} <span class="badge badge-white">${Object(c.p)(this.shipData.stern.thickness)}</span>`,rudder:`${Object(c.p)(this.shipData.rudder.armour)} <span class="badge badge-white">${Object(c.p)(this.shipData.rudder.thickness)}</span>`,minCrew:Object(c.p)(this.shipData.crew.min),maxCrew:Object(c.p)(this.shipData.crew.max),sailingCrew:Object(c.p)(this.shipData.crew.sailing),maxWeight:Object(c.p)(this.shipData.maxWeight),holdSize:Object(c.p)(this.shipData.holdSize),upgradeXP:Object(c.p)(this.shipData.upgradeXP),sternRepair:Object(c.p)(this.shipData.repairTime.stern),bowRepair:Object(c.p)(this.shipData.repairTime.bow),sidesRepair:Object(c.p)(this.shipData.repairTime.sides),rudderRepair:Object(c.p)(this.shipData.repairTime.rudder),sailsRepair:Object(c.p)(this.shipData.repairTime.sails),structureRepair:Object(c.p)(this.shipData.repairTime.structure),hullRepair:`${Object(c.p)(this.shipData.sides.armour/_)}`,rigRepair:`${Object(c.p)(this.shipData.sails.armour/b)}`,rumRepair:`${Object(c.p)(this.shipData.crew.max/g)}`,fireResistance:Object(c.p)(this.shipData.resistance.fire),leakResistance:Object(c.p)(this.shipData.resistance.leaks),crewProtection:Object(c.p)(this.shipData.resistance.crew),mastBottomArmor:`${Object(c.p)(this.shipData.mast.bottomArmour)} <span class="badge badge-white">${Object(c.p)(this.shipData.mast.bottomThickness)}</span>`,mastMiddleArmor:`${Object(c.p)(this.shipData.mast.middleArmour)} <span class="badge badge-white">${Object(c.p)(this.shipData.mast.middleThickness)}</span>`,mastTopArmor:`${Object(c.p)(this.shipData.mast.topArmour)} <span class="badge badge-white">${Object(c.p)(this.shipData.mast.topThickness)}</span>`};s.gunsFront?s.gunsFront+=` ${D.pd(s.limitFront)}`:s.gunsFront="–",s.gunsBack?s.gunsBack+=` ${D.pd(s.limitBack)}`:s.gunsBack="–",e(`${this.select}`).find("div").append(D.getText(s))}get shipData(){return this._shipData}get shipCompareData(){return this._shipCompareData}}class C extends D{constructor(e,t,s,a){super(e,a),this._shipBaseData=t,this._shipCompareData=s,this._shipCompare=a,this._drawDifferenceProfile(),this._injectTextComparison()}_drawDifferenceProfile(){const e=Object(h.f)().sort(null).value(1),t=e(this.shipCompareData.speedDegrees),s=e(this.shipBaseData.speedDegrees),a=h.d,i=Object(h.g)().angle((e,t)=>t*u).radius(e=>this.shipCompare.radiusScaleAbsolute(e.data)).curve(a),p=this.g.append("path"),d=this.g.append("path"),m=this.g.append("g").attr("class","markers"),l=[];this.shipCompareData.speedDegrees.forEach((e,t)=>{l.push(Object(c.D)(e-this.shipBaseData.speedDegrees[t]))});const _=this._shipCompare._minSpeed,b=this._shipCompare._maxSpeed,g=Object(o.b)().domain([_,-1,0,1,b]).range([n.i,n.h,n.j,n.f,n.g]).interpolate(r.c);p.attr("d",i(t)).classed("comp",!0),m.selectAll("circle").data(t).join(e=>e.append("circle").attr("r",5).attr("cy",(e,t)=>Math.cos(t*u)*-this.shipCompare.radiusScaleAbsolute(e.data)).attr("cx",(e,t)=>Math.sin(t*u)*this.shipCompare.radiusScaleAbsolute(e.data)).attr("fill",(e,t)=>g(l[t])).append("title").text(e=>`${Math.round(10*e.data)/10} knots`)),d.attr("d",i(s)).classed("base",!0)}_injectTextComparison(){function t(e,t,s){void 0===s&&(s=0);const a=parseFloat((e-t).toFixed(s));return a<0?`<span class="badge badge-danger">${Object(c.n)(Math.abs(a))}</span>`:a>0?`<span class="badge badge-success">${Object(c.n)(a)}</span>`:""}const s={shipRating:`${Object(c.v)(this.shipCompareData.class)} rate`,battleRating:`${this.shipCompareData.battleRating} ${t(this.shipCompareData.battleRating,this.shipBaseData.battleRating)}`,guns:`${this.shipCompareData.guns} ${t(this.shipCompareData.guns,this.shipBaseData.guns)}`,decks:`${this.shipCompareData.decks} deck${this.shipCompareData.decks>1?"s":""} ${t(this.shipCompareData.decks,this.shipBaseData.decks)}`,additionalRow:`${this.shipCompareData.decks<4?"<br> ":""}`,cannonsPerDeck:D.getCannonsPerDeck(this.shipCompareData.deckClassLimit,this.shipCompareData.gunsPerDeck),cannonBroadside:`${this.shipCompareData.broadside.cannons} ${t(this.shipCompareData.broadside.cannons,this.shipBaseData.broadside.cannons)}`,carroBroadside:`${this.shipCompareData.broadside.carronades} ${t(this.shipCompareData.broadside.carronades,this.shipBaseData.broadside.carronades)}`,gunsFront:this.shipCompareData.gunsPerDeck[4],limitFront:this.shipCompareData.deckClassLimit[4],gunsBack:this.shipCompareData.gunsPerDeck[5],limitBack:this.shipCompareData.deckClassLimit[5],minSpeed:`${Object(c.n)(this.shipCompareData.speed.min)} ${t(this.shipCompareData.speed.min,this.shipBaseData.speed.min,2)}`,maxSpeed:`${Object(c.n)(this.shipCompareData.speed.max,3)} ${t(this.shipCompareData.speed.max,this.shipBaseData.speed.max,2)}`,maxTurningSpeed:`${Object(c.n)(this.shipCompareData.rudder.turnSpeed)} ${t(this.shipCompareData.rudder.turnSpeed,this.shipBaseData.rudder.turnSpeed,2)}`,firezoneHorizontalWidth:`${this.shipCompareData.ship.firezoneHorizontalWidth} ${t(this.shipCompareData.ship.firezoneHorizontalWidth,this.shipBaseData.ship.firezoneHorizontalWidth)}`,waterlineHeight:`${Object(c.n)(this.shipCompareData.ship.waterlineHeight)} ${t(this.shipCompareData.ship.waterlineHeight,this.shipBaseData.ship.waterlineHeight,2)}`,acceleration:`${Object(c.n)(this.shipCompareData.ship.acceleration)} ${t(this.shipCompareData.ship.acceleration,this.shipBaseData.ship.acceleration,2)}`,deceleration:`${Object(c.n)(this.shipCompareData.ship.deceleration)} ${t(this.shipCompareData.ship.deceleration,this.shipBaseData.ship.deceleration,2)}`,halfturnTime:`${Object(c.n)(this.shipCompareData.rudder.halfturnTime)} ${t(this.shipCompareData.rudder.halfturnTime,this.shipBaseData.rudder.halfturnTime)}`,sideArmor:`${Object(c.p)(this.shipCompareData.sides.armour)} ${t(this.shipCompareData.sides.armour,this.shipBaseData.sides.armour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.sides.thickness)}</span>${t(this.shipCompareData.sides.thickness,this.shipBaseData.sides.thickness)}`,frontArmor:`${Object(c.p)(this.shipCompareData.bow.armour)} ${t(this.shipCompareData.bow.armour,this.shipBaseData.bow.armour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.bow.thickness)}</span>${t(this.shipCompareData.bow.thickness,this.shipBaseData.bow.thickness)}`,backArmor:`${Object(c.p)(this.shipCompareData.stern.armour)} ${t(this.shipCompareData.stern.armour,this.shipBaseData.stern.armour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.stern.thickness)}</span>${t(this.shipCompareData.stern.thickness,this.shipBaseData.stern.thickness)}`,pump:`${Object(c.p)(this.shipCompareData.pump.armour)} ${t(this.shipCompareData.pump.armour,this.shipBaseData.pump.armour)}`,sails:`${Object(c.p)(this.shipCompareData.sails.armour)} ${t(this.shipCompareData.sails.armour,this.shipBaseData.sails.armour)}`,structure:`${Object(c.p)(this.shipCompareData.structure.armour)} ${t(this.shipCompareData.structure.armour,this.shipBaseData.structure.armour)}`,rudder:`${Object(c.p)(this.shipCompareData.rudder.armour)} ${t(this.shipCompareData.rudder.armour,this.shipBaseData.rudder.armour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.rudder.thickness)}</span>${t(this.shipCompareData.rudder.thickness,this.shipBaseData.rudder.thickness)}`,minCrew:`${Object(c.p)(this.shipCompareData.crew.min)} ${t(this.shipCompareData.crew.min,this.shipBaseData.crew.min)}`,maxCrew:`${Object(c.p)(this.shipCompareData.crew.max)} ${t(this.shipCompareData.crew.max,this.shipBaseData.crew.max)}`,sailingCrew:`${Object(c.p)(this.shipCompareData.crew.sailing)} ${t(this.shipCompareData.crew.sailing,this.shipBaseData.crew.sailing)}`,maxWeight:`${Object(c.p)(this.shipCompareData.maxWeight)} ${t(this.shipCompareData.maxWeight,this.shipBaseData.maxWeight)}`,holdSize:`${Object(c.p)(this.shipCompareData.holdSize)} ${t(this.shipCompareData.holdSize,this.shipBaseData.holdSize)}`,upgradeXP:`${Object(c.p)(this.shipCompareData.upgradeXP)} ${t(this.shipCompareData.upgradeXP,this.shipBaseData.upgradeXP)}`,sternRepair:`${Object(c.p)(this.shipCompareData.repairTime.stern)} ${t(this.shipBaseData.repairTime.stern,this.shipCompareData.repairTime.stern)}`,bowRepair:`${Object(c.p)(this.shipCompareData.repairTime.bow)} ${t(this.shipBaseData.repairTime.bow,this.shipCompareData.repairTime.bow)}`,sidesRepair:`${Object(c.p)(this.shipCompareData.repairTime.sides)} ${t(this.shipBaseData.repairTime.sides,this.shipCompareData.repairTime.sides)}`,rudderRepair:`${Object(c.p)(this.shipCompareData.repairTime.rudder)} ${t(this.shipBaseData.repairTime.rudder,this.shipCompareData.repairTime.rudder)}`,sailsRepair:`${Object(c.p)(this.shipCompareData.repairTime.sails)} ${t(this.shipBaseData.repairTime.sails,this.shipCompareData.repairTime.sails)}`,structureRepair:`${Object(c.p)(this.shipCompareData.repairTime.structure)} ${t(this.shipBaseData.repairTime.structure,this.shipCompareData.repairTime.structure)}`,hullRepair:`${Object(c.p)(this.shipCompareData.sides.armour/_)} ${t(this.shipBaseData.sides.armour/_,this.shipCompareData.sides.armour/_)}`,rigRepair:`${Object(c.p)(this.shipCompareData.sails.armour/b)} ${t(this.shipBaseData.sails.armour/b,this.shipCompareData.sails.armour/b)}`,rumRepair:`${Object(c.p)(this.shipCompareData.crew.max/g)} ${t(this.shipBaseData.crew.max/g,this.shipCompareData.crew.max/g)}`,fireResistance:`${Object(c.p)(this.shipCompareData.resistance.fire)} ${t(this.shipCompareData.resistance.fire,this.shipBaseData.resistance.fire)}`,leakResistance:`${Object(c.p)(this.shipCompareData.resistance.leaks)} ${t(this.shipCompareData.resistance.leaks,this.shipBaseData.resistance.leaks)}`,crewProtection:`${Object(c.p)(this.shipCompareData.resistance.crew)} ${t(this.shipCompareData.resistance.crew,this.shipBaseData.resistance.crew)}`,mastBottomArmor:`${Object(c.p)(this.shipCompareData.mast.bottomArmour)} ${t(this.shipCompareData.mast.bottomArmour,this.shipBaseData.mast.bottomArmour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.mast.bottomThickness)}</span>${t(this.shipCompareData.mast.bottomThickness,this.shipBaseData.mast.bottomThickness)}`,mastMiddleArmor:`${Object(c.p)(this.shipCompareData.mast.middleArmour)} ${t(this.shipCompareData.mast.middleArmour,this.shipBaseData.mast.middleArmour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.mast.middleThickness)}</span>${t(this.shipCompareData.mast.middleThickness,this.shipBaseData.mast.middleThickness)}`,mastTopArmor:`${Object(c.p)(this.shipCompareData.mast.topArmour)} ${t(this.shipCompareData.mast.topArmour,this.shipBaseData.mast.topArmour)} <span class="badge badge-white">${Object(c.p)(this.shipCompareData.mast.topThickness)}</span>${t(this.shipCompareData.mast.topThickness,this.shipBaseData.mast.topThickness)}`};s.gunsFront?s.gunsFront+=` ${D.pd(s.limitFront)}`:s.gunsFront="–",s.gunsBack?s.gunsBack+=` ${D.pd(s.limitBack)}`:s.gunsBack="–",e(`${this.select}`).find("div").append(D.getText(s))}get shipBaseData(){return this._shipBaseData}get shipCompareData(){return this._shipCompareData}get shipCompare(){return this._shipCompare}}class w{constructor(e){let t=e.shipData,s=e.woodData,i=e.moduleData,p=e.id,h=void 0===p?"ship-compare":p;this._shipData=t,this._moduleDataDefault=i,this._baseId=h,this._baseName="Compare ships",this._buttonId=`button-${this._baseId}`,this._modalId=`modal-${this._baseId}`,this._moduleId=`${this._baseId}-module`,this._selectedUpgradeIds=[],this._selectShip$={},this._selectWood$={},this._selectModule$={},"ship-compare"===this._baseId?this._columnsCompare=["C1","C2"]:this._columnsCompare=[],this._columns=this._columnsCompare.slice(),this._columns.unshift("Base"),this._ships={Base:{},C1:{},C2:{}};const d=1.2*Object(a.d)(this._shipData,e=>e.speed.min);this._minSpeed=d,this._maxSpeed=15.5,this._colorScale=Object(o.b)().domain([this._minSpeed,0,12,this._maxSpeed]).range([n.h,n.j,n.f,n.g]).interpolate(r.c),this._woodChanges=new Map([["Acceleration",["ship.acceleration"]],["Crew protection",["resistance.crew"]],["Crew",["crew.max"]],["Fire resistance",["resistance.fire"]],["Hull strength",["structure.armour"]],["Leak resistance",["resistance.leaks"]],["Rudder speed",["rudder.halfturnTime"]],["Ship speed",["speed.max"]],["Side armour",["bow.armour","sides.armour","sails.armour","structure.armour","stern.armour"]],["Thickness",["sides.thickness","bow.thickness","stern.thickness"]],["Turn speed",["rudder.turnSpeed"]]]),this._moduleChanges=new Map([["Acceleration",["ship.acceleration"]],["Back armour thickness",["stern.thickness"]],["Crew protection",["resistance.crew"]],["Crew",["crew.max"]],["Fire resistance",["resistance.fire"]],["Front armour thickness",["bow.thickness"]],["Hold weight",["maxWeight"]],["Hull strength",["structure.armour"]],["Leak resistance",["resistance.leaks"]],["Mast health",["mast.bottomArmour","mast.middleArmour","mast.topArmour"]],["Mast thickness",["mast.bottomThickness","mast.middleThickness","mast.topThickness"]],["Rudder health",["rudder.armour"]],["Rudder repair time",["repairTime.rudder"]],["Rudder speed",["rudder.halfturnTime"]],["Sail repair time",["repairTime.sails"]],["Sailing crew",["crew.sailing"]],["Ship speed",["speed.max"]],["Side armour repair time",["repairTime.sides"]],["Side armour",["bow.armour","sides.armour","sails.armour","structure.armour","stern.armour"]],["Speed decrease",["ship.deceleration"]],["Thickness",["sides.thickness","bow.thickness","stern.thickness"]],["Turn speed",["rudder.turnSpeed"]],["Water pump health",["pump.armour"]]]),"ship-journey"===this._baseId?this._woodId="wood-journey":this._woodId="wood-ship",this._woodCompare=new m.a(s,this._woodId),"ship-journey"===this._baseId?(this._initData(),this._initSelects()):this._setupListener()}_setupListener(){e(`#${this._buttonId}`).on("click",e=>{Object(d.b)("Tools",this._baseName),e.stopPropagation(),this._shipCompareSelected()})}_setGraphicsParameters(){this.svgWidth=parseInt(e(`#${this._modalId} .columnA`).width(),10),this.svgHeight=this.svgWidth,this.outerRadius=Math.floor(Math.min(this.svgWidth,this.svgHeight)/2),this.innerRadius=Math.floor(.3*this.outerRadius),this.radiusScaleAbsolute=Object(o.b)().domain([this.minSpeed,0,this.maxSpeed]).range([10,this.innerRadius,this.outerRadius])}_shipCompareSelected(){document.getElementById(this._modalId)||this._initModal(),e(`#${this._modalId}`).modal("show"),this._setGraphicsParameters()}_setupShipData(){this.shipSelectData=Object(i.b)().key(e=>e.class).sortKeys(a.a).entries(this._shipData.map(e=>({id:e.id,name:e.name,class:e.class,battleRating:e.battleRating,guns:e.guns})).sort(Object(c.E)(["name"])))}_setupModuleData(){this._moduleProperties=new Map(this._moduleDataDefault.map(e=>e[1].filter(e=>e.properties.some(e=>this._moduleChanges.has(e.modifier))).map(e=>[e.id,e])).flat()),this._moduleTypes=new Set(Array.from(this._moduleProperties).map(e=>e[1].type.replace(/\s–\s[a-zA-Z\/]+/,"")))}_injectModal(){Object(n.x)(this._modalId,this._baseName);const e=Object(p.select)(`#${this._modalId} .modal-body`).append("div").attr("class","container-fluid").append("div").attr("class","row");this._columns.forEach(t=>{const s=e.append("div").attr("class",`col-md-4 ml-auto pt-2 ${"Base"===t?"columnA":"columnC"}`),a=this._getShipSelectId(t);s.append("label").append("select").attr("name",a).attr("id",a).attr("class","selectpicker"),["frame","trim"].forEach(e=>{const a=this._getWoodSelectId(e,t);s.append("label").append("select").attr("name",a).attr("id",a).attr("class","selectpicker")}),this._moduleTypes.forEach(e=>{const a=this._getModuleSelectId(e,t);s.append("label").append("select").attr("name",a).attr("id",a).property("multiple","Ship trim"!==e).attr("class","selectpicker")}),s.append("div").attr("id",`${this._baseId}-${t}`).attr("class",`${"Base"===t?"ship-base":"ship-compare"}`)})}_initData(){this._setupShipData(),this._setupModuleData(),this.woodCompare._setupData()}_initSelects(){this._columns.forEach(t=>{this._selectWood$[t]={},this._setupShipSelect(t),["frame","trim"].forEach(s=>{this._selectWood$[t][s]=e(`#${this._getWoodSelectId(s,t)}`),this.woodCompare._setupWoodSelects(t,s,this._selectWood$[t][s])}),this._setupSelectListener(t)})}_initModal(){this._initData(),this._injectModal(),this._initSelects()}_getShipOptions(){return this.shipSelectData.map(e=>`<optgroup label="${Object(c.v)(e.key,!1)} rate">${e.values.map(e=>`<option data-subtext="${e.battleRating}" value="${e.id}">${e.name} (${e.guns})`).join("</option>")}`).join("</optgroup>")}_setupShipSelect(t){this._selectShip$[t]=e(`#${this._getShipSelectId(t)}`);const s=this._getShipOptions();this._selectShip$[t].append(s),"Base"!==t&&this._selectShip$[t].attr("disabled","disabled")}_getUpgradesOptions(e,t){const s=Object(i.b)().key(e=>e[1].type.replace(/[a-zA-Z\s]+\s–\s/,"")).sortKeys(a.a).entries(Array.from(this._moduleProperties).filter(s=>s[1].type.replace(/\s–\s[a-zA-Z\/]+/,"")===e&&("U"===s[1].moduleLevel||s[1].moduleLevel===(e=>e<=3?"L":e<=5?"M":"S")(t))));let r="";return r=s.length>1?s.map(e=>`<optgroup label="${e.key}">${e.values.map(e=>`<option value="${e[0]}">${e[1].name}`).join("</option>")}`).join("</optgroup>"):s.map(e=>`${e.values.map(e=>`<option value="${e[0]}">${e[1].name}`).join("</option>")}`)}_setupModulesSelect(t,s){const a=()=>this._shipData.find(e=>e.id===t).class;this._selectModule$[s]={},this._moduleTypes.forEach(i=>{this._selectModule$[s][i]=e(`#${this._getModuleSelectId(i,s)}`);const r=this._getUpgradesOptions(i,a());this._selectModule$[s][i].append(r),this._selectModule$[s][i].on("changed.bs.select",()=>{this._upgradeSelected(s),this._refreshShips(t,s)}).selectpicker({selectedTextFormat:"count > 1",countSelectedText:e=>`${e} ${i.toLowerCase()}s selected`,title:`${i}`,width:"150px"})})}_getShipData(e,t){let s=this._shipData.find(t=>t.id===e);return s=this._addWoodData(s,t),s=this._addModulesData(s,t)}_addWoodData(e,t){const s=JSON.parse(JSON.stringify(e));if(s.resistance={},s.resistance.fire=0,s.resistance.leaks=0,s.resistance.crew=0,void 0!==this.woodCompare._instances[t]){let e="_woodData";"Base"!==t&&(e="_compareData");const a=new Map;["frame","trim"].forEach(s=>{this.woodCompare._instances[t][e][s].properties.forEach(e=>{this._woodChanges.has(e.modifier)&&a.set(e.modifier,a.has(e.modifier)?a.get(e.modifier)+e.amount:e.amount)})}),a.forEach((e,t)=>{this._woodChanges.get(t).forEach(e=>{const i=e.split("."),r=1+a.get(t)/100;i.length>1?s[i[0]][i[1]]?s[i[0]][i[1]]*=r:s[i[0]][i[1]]=a.get(t):s[i[0]]?s[i[0]]*=r:s[i[0]]=a.get(t)})}),s.speedDegrees=s.speedDegrees.map(e=>{const t=1+a.get("Ship speed")/100;return Math.max(Math.min(e*t,this._maxSpeed),this._minSpeed)})}return s}_addModulesData(e,t){const s=JSON.parse(JSON.stringify(e));if(void 0!==this._selectedUpgradeIds[t]){const e=new Map;this._selectedUpgradeIds[t].forEach(t=>{this._moduleProperties.get(t).properties.forEach(t=>{this._moduleChanges.has(t.modifier)&&e.set(t.modifier,e.has(t.modifier)?e.get(t.modifier)+t.amount:t.amount)})}),e.forEach((t,a)=>{this._moduleChanges.get(a).forEach(t=>{const i=t.split("."),r=1+e.get(a)/100;i.length>1?s[i[0]][i[1]]?s[i[0]][i[1]]*=r:s[i[0]][i[1]]=e.get(a):s[i[0]]?s[i[0]]*=r:s[i[0]]=e.get(a)})}),e.has("Ship speed")&&(s.speedDegrees=s.speedDegrees.map(t=>{const s=1+e.get("Ship speed")/100;return Math.max(Math.min(t*s,this._maxSpeed),this._minSpeed)}))}return s}_refreshShips(e,t){const s=this._getShipData(e,t);"ship-journey"!==this._baseId?"Base"===t?(this._setShip(t,new $(t,s,this)),this._columnsCompare.forEach(e=>{this._selectShip$[e].removeAttr("disabled").selectpicker("refresh"),Object(c.x)(this.ships[e])||this._setShip(e,new C(e,s,this.ships[e]._shipCompareData,this))})):this._setShip(t,new C(t,this.ships.Base._shipData,s,this)):this._singleShipData=s}_enableCompareSelects(){this._columnsCompare.forEach(e=>{this._selectShip$[e].removeAttr("disabled").selectpicker("refresh")})}_upgradeSelected(e){this._selectedUpgradeIds[e]=[],this._moduleTypes.forEach(t=>{let s=this._selectModule$[e][t].val();(s=Array.isArray(s)?s.map(Number):""!==s?[+s]:[]).length&&(this._selectedUpgradeIds[e]=this._selectedUpgradeIds[e].concat(s))})}_setupSelectListener(e){this._selectShip$[e].on("changed.bs.select",()=>{const t=+this._selectShip$[e].val();this._refreshShips(t,e),"Base"===e&&"ship-journey"!==this._baseId&&this._enableCompareSelects(),this.woodCompare.enableSelects(e),this._setupModulesSelect(t,e)}).selectpicker({title:"Ship"}),["frame","trim"].forEach(t=>{this._selectWood$[e][t].on("changed.bs.select",()=>{this.woodCompare._woodSelected(e,t,this._selectWood$[e][t]);const s=+this._selectShip$[e].val();this._refreshShips(s,e)}).selectpicker({title:`Wood ${t}`,width:"150px"})})}_getShipSelectId(e){return`${this._baseId}-${e}-select`}_getWoodSelectId(e,t){return`${this._woodId}-${e}-${t}-select`}_getModuleSelectId(e,t){return`${this._moduleId}-${e.replace(/\s/,"")}-${t}-select`}get woodCompare(){return this._woodCompare}_setShip(e,t){this._ships[e]=t}get ships(){return this._ships}get minSpeed(){return this._minSpeed}get maxSpeed(){return this._maxSpeed}get colorScale(){return this._colorScale}set svgWidth(e){this._svgWidth=e}get svgWidth(){return this._svgWidth}set svgHeight(e){this._svgHeight=e}get svgHeight(){return this._svgHeight}set outerRadius(e){this._outerRadius=e}get outerRadius(){return this._outerRadius}set innerRadius(e){this._innerRadius=e}get innerRadius(){return this._innerRadius}set radiusScaleAbsolute(e){this._radiusScaleAbsolute=e}get radiusScaleAbsolute(){return this._radiusScaleAbsolute}}}).call(this,s("xeH2"))},pFgi:function(e,t,s){"use strict";(function(e){s.d(t,"a",function(){return c});s("W1QL");var a=s("/Cyf"),i=s("nUlG"),r=s("f4w0"),o=s("0lY5"),p=s("Av7d");class h{constructor(e,t){this._id=e,this._woodCompare=t,this._select=`#${this._woodCompare._baseFunction}-${this._id}`,this._setupMainDiv(),this._g=Object(i.select)(this._select).select("g")}_setupMainDiv(){Object(i.select)(`${this._select} div`).remove(),Object(i.select)(this._select).append("div")}}class d extends h{constructor(e,t,s){super(e,s),this._woodData=t,this._woodCompare=s,this._printText()}_getProperty(e,t){const s=this._woodData[t].properties.filter(t=>t.modifier===e).map(e=>e.amount)[0];return void 0===s?0:s/100}_getPropertySum(e){return this._getProperty(e,"frame")+this._getProperty(e,"trim")}_getText(e){let t='<table class="table table-sm table-striped small mt-4"><thead>';return t+="<tr>",t+="<tr><th><em>Property</em></th><th><em>Change in %</em></th></tr></thead><tbody>",e.properties.forEach((e,s)=>{if(t+=`<tr><td>${s}</td><td>${Object(o.n)(100*e)}`,t+='<span class="rate">',e>0){const a=e/this._woodCompare._minMaxProperty.get(s).max*100*50;t+='<span class="bar neutral" style="width:50%;"></span>',t+=`<span class="bar pos diff" style="width:${a}%;"></span>`}else if(e<0){const a=e/this._woodCompare._minMaxProperty.get(s).min*100*50;t+=`<span class="bar neutral" style="width:${50-a}%;"></span>`,t+=`<span class="bar neg diff" style="width:${a}%;"></span>`}else t+='<span class="bar neutral"></span>';t+="</span></td></tr>"}),t+="</tbody></table>"}_printText(){const t={frame:this._woodData.frame.name,trim:this._woodData.trim.name};t.properties=new Map,this._woodCompare._properties.forEach(e=>{t.properties.set(e,this._getPropertySum(e))}),e(`${this._select}`).find("div").append(this._getText(t))}}class n extends h{constructor(e,t,s,a){super(e,a),this._baseData=t,this._compareData=s,this._woodCompare=a,this._printTextComparison()}_getBaseProperty(e,t){const s=this._baseData[t].properties.filter(t=>t.modifier===e).map(e=>e.amount)[0];return void 0===s?0:s/100}_getBasePropertySum(e){return this._getBaseProperty(e,"frame")+this._getBaseProperty(e,"trim")}_getCompareProperty(e,t){const s=this._compareData[t].properties.filter(t=>t.modifier===e).map(e=>e.amount)[0];return void 0===s?0:s/100}_getComparePropertySum(e){return this._getCompareProperty(e,"frame")+this._getCompareProperty(e,"trim")}_getText(e){let t=0,s=0,a=0,i="",r='<table class="table table-sm table-striped small wood mt-4"><thead>';return r+="<tr>",r+="<tr><th><em>Property</em></th><th><em>Change in %</em></th></tr></thead><tbody>",e.properties.forEach((e,p)=>{r+=`<tr><td>${p}</td><td>${function(e,t,s){void 0===s&&(s=1);const a=parseFloat((100*(e-t)).toFixed(s));return a<0?`${Object(o.n)(100*e)} <span class="badge badge-white">${Object(o.n)(a)}</span>`:a>0?`${Object(o.n)(100*e)} <span class="badge badge-white">+ ${Object(o.n)(a)}</span>`:Object(o.n)(100*e)}(e.compare,e.base)}`,r+='<span class="rate">',e.compare>=0?(e.base>=0?e.compare>e.base?(t=e.base,s=e.compare-e.base,i="pos"):(t=e.compare,s=e.base-e.compare,i="neg"):(t=0,s=e.compare,i="pos"),r+='<span class="bar neutral" style="width:50%;"></span>',r+=`<span class="bar pos diff" style="width:${t/this._woodCompare._minMaxProperty.get(p).max*100*50}%;"></span>`,r+=`<span class="bar ${i}" style="width:${s/this._woodCompare._minMaxProperty.get(p).max*100*50}%;"></span>`):e.compare<0?(e.base<0?e.compare>=e.base?(t=e.compare,s=e.base-e.compare,a=-e.base,i="pos"):(t=e.base,s=e.compare-e.base,a=-e.compare,i="neg"):(t=0,s=e.compare,a=-e.compare,i="neg"),r+=`<span class="bar neutral" style="width:${50+a/this._woodCompare._minMaxProperty.get(p).min*100*50}%;"></span>`,r+=`<span class="bar ${i}" style="width:${s/this._woodCompare._minMaxProperty.get(p).min*100*50}%;"></span>`,r+=`<span class="bar neg diff" style="width:${t/this._woodCompare._minMaxProperty.get(p).min*100*50}%;"></span>`):r+='<span class="bar neutral"></span>',r+="</span></td></tr>"}),r+="</tbody></table>"}_printTextComparison(){const t={frame:this._compareData.frame.name,trim:this._compareData.trim.name};t.properties=new Map,this._woodCompare._properties.forEach(e=>{t.properties.set(e,{base:this._getBasePropertySum(e),compare:this._getComparePropertySum(e)})}),e(`${this._select}`).find("div").append(this._getText(t))}}class c{constructor(e,t){this._woodData=e,this._baseFunction=t,this._baseName="Compare woods",this._baseId=`${this._baseFunction}-compare`,this._buttonId=`button-${this._baseId}`,this._modalId=`modal-${this._baseId}`,"wood"===this._baseFunction?(this._defaultWood={frame:"Fir",trim:"Crew Space"},this._columnsCompare=["C1","C2","C3"]):"wood-journey"===this._baseFunction?(this._defaultWood={frame:"Oak",trim:"Oak"},this._columnsCompare=[]):(this._defaultWood={frame:"Oak",trim:"Oak"},this._columnsCompare=["C1","C2"]),this._columns=this._columnsCompare.slice(),this._columns.unshift("Base"),this._woodsSelected=[],this._instances=[],this._properties=["Thickness","Hull strength","Side armour","Mast thickness","Ship speed","Acceleration","Rudder speed","Turn speed","Crew","Crew protection","Grog morale bonus","Fire resistance","Leak resistance"],this._options={},this._minMaxProperty=new Map,this._setupListener()}_setupListener(){e(`#${this._buttonId}`).on("click",e=>{Object(r.b)("Tools",this._baseName),e.stopPropagation(),this._woodCompareSelected()})}_woodCompareSelected(){document.getElementById(this._modalId)||this._initModal(),e(`#${this._modalId}`).modal("show")}_setupData(){this._frameSelectData=this._woodData.frame.sort(Object(o.E)(["name"])),this._trimSelectData=this._woodData.trim.sort(Object(o.E)(["name"])),this._setOption(this._frameSelectData.map(e=>`<option value="${e.name}">${e.name}</option>`),this._trimSelectData.map(e=>`<option value="${e.name}">${e.name}</option>`)),this._properties.forEach(e=>{const t=[...this._woodData.frame.map(t=>t.properties.filter(t=>t.modifier===e).map(e=>e.amount)[0])],s=[...this._woodData.trim.map(t=>t.properties.filter(t=>t.modifier===e).map(e=>e.amount)[0])],i=Object(a.d)(t)||0,r=Object(a.c)(t)||0,o=Object(a.d)(s)||0,p=Object(a.c)(s)||0;this._addMinMaxProperty(e,{min:i+o>=0?0:i+o,max:r+p})})}_injectModal(){Object(p.x)(this._modalId,this._baseName);const e=Object(i.select)(`#${this._modalId} .modal-body`).append("div").attr("class","container-fluid").append("div").attr("class","row wood");this._columns.forEach(t=>{const s=e.append("div").attr("class",`col-md-3 ml-auto pt-2 ${"Base"===t?"columnA":"columnC"}`);["frame","trim"].forEach(e=>{const a=`${this._baseFunction}-${e}-${t}-select`;s.append("label").attr("for",a),s.append("select").attr("name",a).attr("id",a)}),s.append("div").attr("id",`${this._baseFunction}-${t}`)})}_initModal(){this._setupData(),this._injectModal(),this._columns.forEach(t=>{["frame","trim"].forEach(s=>{const a=e(`#${this._baseFunction}-${s}-${t}-select`);this._setupWoodSelects(t,s,a),this._setupSelectListener(t,s,a)})})}_setWoodsSelected(e,t,s){void 0===this._woodsSelected[e]&&(this._woodsSelected[e]={}),this._woodsSelected[e][t]=s}_setupWoodSelects(e,t,s){this._setWoodsSelected(e,t,this._defaultWood[t]),s.append(this._options[t]),("wood"!==this._baseFunction||"Base"!==e&&"wood"===this._baseFunction)&&s.attr("disabled","disabled")}_setOtherSelect(t,s){const a="frame"===s?"trim":"frame";this._getWoodSelected(t)[a]===this._defaultWood[a]&&e(`#${this._baseFunction}-${a}-${t}-select`).val(this._defaultWood[a]).selectpicker("refresh")}enableSelects(t){["frame","trim"].forEach(s=>{e(`#${this._baseFunction}-${s}-${t}-select`).removeAttr("disabled").selectpicker("refresh")})}_woodSelected(e,t,s){const a=s.val();this._setWoodsSelected(e,t,a),this._setOtherSelect(e,t),"Base"===e?(this._addInstance(e,new d("Base",this._getWoodData("Base"),this)),this._columnsCompare.forEach(e=>{"wood"===this._baseFunction&&this.enableSelects(e),void 0!==this._instances[e]&&this._addInstance(e,new n(e,this._getWoodData("Base"),this._getWoodData(e),this))})):this._addInstance(e,new n(e,this._getWoodData("Base"),this._getWoodData(e),this))}_setupSelectListener(e,t,s){s.addClass("selectpicker").on("change",()=>this._woodSelected(e,t,s)).selectpicker({noneSelectedText:`Select ${t}`}).val("default").selectpicker("refresh")}_getWoodTypeData(e,t){return this._woodData[e].filter(e=>e.name===t)[0]}_getWoodData(e){return{frame:this._getWoodTypeData("frame",this._getWoodSelected(e).frame),trim:this._getWoodTypeData("trim",this._getWoodSelected(e).trim)}}_getWoodSelected(e){return this._woodsSelected[e]}_addMinMaxProperty(e,t){this._minMaxProperty.set(e,t)}_setOption(e,t){this._options.frame=e,this._options.trim=t}_addInstance(e,t){this._instances[e]=t}}}).call(this,s("xeH2"))}}]);